<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a12" title="xfm API Documentation (master, 10-Jul-2013)">
  <file path="unittests/phpunit.php" hash="934ecc3bd38eb029e14ae183d06a17a0" package="Default">
    <include line="60" type="Require Once" package="Default">
      <name>PHPUnit/Autoload.php</name>
    </include>
    <include line="69" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="14" package="xUnittesting">
      <extends/>
      <name>xPhpUnit</name>
      <full_name>\xPhpUnit</full_name>
      <docblock line="10">
        <description>PHPUnit tests CLI runner.</description>
        <long-description></long-description>
        <tag line="10" name="package" description="xUnittesting"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="16" package="xUnittesting">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="28" package="xUnittesting">
        <name>xfm_path</name>
        <full_name>xfm_path</full_name>
        <docblock line="24">
          <description>Returns the base path to PHPUnits vendors path.</description>
          <long-description>&lt;p&gt;Override this to suit your custom project structur, if needed.&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="36" package="xUnittesting">
        <name>phpunit_path</name>
        <full_name>phpunit_path</full_name>
        <docblock line="32">
          <description>Returns the base path to PHPUnits vendors path.</description>
          <long-description></long-description>
          <tag line="32" name="see" description="\xfm_path()" refers="\xfm_path()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="44" package="xUnittesting">
        <name>setup_phpunit</name>
        <full_name>setup_phpunit</full_name>
        <docblock line="40">
          <description>Sets PHPUnits include path and includes Autoload.</description>
          <long-description></long-description>
          <tag line="40" name="see" description="\xfm_path()" refers="\xfm_path()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="66" package="xUnittesting">
        <name>setup_xfm</name>
        <full_name>setup_xfm</full_name>
        <docblock line="63">
          <description>Simply loads xfm-specific xPHPUnit_Framework_TestCase.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="76" package="xUnittesting">
        <name>setup_custom</name>
        <full_name>setup_custom</full_name>
        <docblock line="72">
          <description>Hook for setting up your custom stuff.</description>
          <long-description>&lt;p&gt;(eg. custom PHPUnit_Framework_TestCase classes)&lt;/p&gt;</long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file unittests/phpunit.php</error>
      <error line="16" code="50010">No DocBlock was found for method __construct()</error>
    </parse_markers>
    <source>eJytVVlv2kAQfudXjFClAAreHm9p0xalRyJFDcrxbC3rAW+xd909AijKf++ssY2pcEql7oMl71zffHPsh09FWvTYqAcjGIghvH395i184blEBRfaFNxxvyZhkF9LgcpiAl4laMClCN9/PMD36TU8voteQ7aVnwZdLgRaK2cZAneQOlecMbZaraKF8pE2C1YpW7YosjFZR6nLsxBoNGI9AlRGnF5OH5R04NA6CxfXV2C8UmiiIPxccLHkC4R10AkqUi1IwHoi49bCepoWpfVTrwd05l4JJ7WCOBZaWWe8cIMhSaE6r1wq7fijReeLmGjxZDwYvj8sX8/zTpnw1uk9MWNNLtw7TVk0IjmHAcniu8n06vz8/ERk8mRYa8f3uHYPV/GFznOukrOznEtVO37e5lVyFc4Ibim8UbYszYxbBKpfCk7X7iw8okq0saUgqs1uHtEYmSCEJIK69QR0o72BbSpQGP0ThYMta96cBtgKMcGk9sL2SSZ+4hBkj2FT4qMCJNLEcXTCoujkP+fy2SK2gh8GVxW3E2BVzZ0bguqrJrOsituJ/A4JXINSKpH5pIJPNawvLEyoEzLNk3/D/kd7tsBTk93iLy8NNuEhwYLQciUkXQ68pREBXMtyVkIoKvUs14nP0A53zdzmB85rOvZZa/V+uLCkx43hm0FzH07/ac/ZM6v+WP/0r3rjucxwLB0aTiNzlIXQCdKH+pkWw1EWTi9RjamvkefHGdBE0icvMu6ODCFzPAp++BvnWizHehbGzbJ+Y9Pie64JrEhhUBHP7bYEw9AbcdVe2yrthVz8KR1CBNPJ/WV893U6uZ3c39zSRenqUNhD7ZXJmeFm05qfUiHWSiD0Ky3WNDrl2O+cGkmUbiDo2dCZY1ugkHMpaJFXy/Cb4TmutFnSWrTugpZCx/JpreiO+QitX+22F9zvWryeyt007Ob0fUf6T43Vc2t7EGXshYReouhS62WofsivHGBf7G1p6/x83myTAS6iWtIdEMrHspn+w0zWD1oHmdXrcFTFQKQyS+qobXd75O2eiMBXvnmZsWYVE2cKV83TH2rzGwFqsRU=</source>
  </file>
  <file path="unittests/units/Dummy.php" hash="8bf9e663679cf5997e0ca0c90f671aa3" package="Default">
    <class final="false" abstract="false" namespace="global" line="7" package="unittests">
      <extends>\xPHPUnit_Framework_TestCase</extends>
      <name>Dummy</name>
      <full_name>\Dummy</full_name>
      <docblock line="3">
        <description>Tests nothing, just used to test that the unit-testing infrastructure works.</description>
        <long-description></long-description>
        <tag line="3" name="package" description="unittests"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="9" package="unittests">
        <name>test</name>
        <full_name>test</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file unittests/units/Dummy.php</error>
      <error line="9" code="50010">No DocBlock was found for method test()</error>
    </parse_markers>
    <source>eJwtjrEKwkAQRPv7iikskqDmAxQVFLEMqLUccTVRcwm3exiR/Lt76hRTzL4dZr7sqs6YPMsMMhyIheFaqWp3HeMWWBCYzpAWojdIZaMRgqtlEiMFUbuLtyw+lBI84dn6O09j36qz5d1ef3ikWdPclA/LjE1omheoF3JnRl/siqNSp623DcWKU1yztkx4GwPVJbhS6tZ9pySpxvhrpIN5stBW8rLX/0TH0BjR09kXG8xgPmUBToA=</source>
  </file>
  <file path="unittests/lib/PHPUnit_Framework_TestCase.php" hash="54be919a05d6b75a70450a830bf88bf1" package="Default">
    <include line="16" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="9" package="xUnittesting">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>xPHPUnit_Framework_TestCase</name>
      <full_name>\xPHPUnit_Framework_TestCase</full_name>
      <docblock line="3">
        <description>Custom PHPUnit_Framework_TestCase.</description>
        <long-description>&lt;p&gt;Sets up custom authentication information with 'local-superuser' role.&lt;/p&gt;</long-description>
        <tag line="3" name="package" description="xUnittesting"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="15" package="xUnittesting">
        <name>setup_bootstrap</name>
        <full_name>setup_bootstrap</full_name>
        <docblock line="11">
          <description>To be overriden in project-specific xPHPUnit_Framework_TestCase
child class if your project uses a custom xBootstrap.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="20" package="xUnittesting">
        <name>setUp</name>
        <full_name>setUp</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file unittests/lib/PHPUnit_Framework_TestCase.php</error>
      <error line="20" code="50010">No DocBlock was found for method setUp()</error>
    </parse_markers>
    <source>eJx9kd1qwzAMhe/9FLoYpA00eYCNdqwwdllYe21cR2m8prYny2vG2LvPaZr9UFZhsEHSOZ/ku4VvvBBlngvIYRkDuwOsnlYba1g+kjrg0dFerjHwUgUs+qpn5ADRgx6qVeQGLRut2DgLxtaODsP7aLiBrHVatbMQPVIMSBmQawele6/0Xu0Qut6Pk4mxu5QohdCtCgG6/1EAO0ZbhSu08CEEpDhN10cOawdbBPeGRKbCnhY8uRfUPAsetamNvmY6yujGtBUMjKaGdxdp1IE0YwA1bqd7cI4Dk/LFubk83XW0+rSjgBy93I5Vk2mihnMQvkZDKJ3VOJGyMiRlkZVF0Z/WbMulIyx/HNJfZtPb73aLx1/+k3PmU1wAbP7a3nBjwmx+QTb2J4XFXHwBc5i4yw==</source>
  </file>
  <file path="scripts/i18n/testgettext.php" hash="5140c115d023794e99dded5cd71fd609" package="Default">
    <docblock line="3">
      <description>Little script to test if PHP-Gettext
is correctly installed.</description>
      <long-description>&lt;p&gt;This script run, at this time, only on Linux&lt;/p&gt;</long-description>
    </docblock>
    <source>eJyVVNtu2kAQffdXTKxUNQnLJRItJYSUUpREhSQKtE9IkbHHsK29a+0uubTKv3fWmHKJm7QgIXZ2zpnbmW2fpvPUcaoHB+DAAQy4MTGCDhRPDRgJBrUBHsH1+TU7Q2PwwWSOXEMglcLAxI/AhTZ+HGNYoSt7O57TfU6iFqIMPpFZm+EJlkEKAklB0cTiYQmpOs7+sHtxCSfgaj9JY3SPnf3BVa876FtbpG5755WFiZpr++11d3xuL6smScns6EdtMPHc5EfIFbAUNh2r+aE66N0O+6NR96w/csuwj0pJVTp2qEgvP8AvB+iDwVyCm5laECj0Db7KCJGMQ1QQ+Zz6AXsTQYlZspCjR1GeqM5U2qQTPeMhTFz6ChcqmRNkZm3Uc/vEvVbyO/WbXYTsGyrNpWjBZCKe+12NWc9mSx7sMyXdgqNarcFq79lRHeq1Vq1xWKNPMZbd4B3Xu9B3rN6AeqPVaB7W6sXQga8NGytf6Ng3tmNDn0aOC/gklZA/oZ0sz5Vpdv4Y0JSNtL+VQCadYkoxW/gzZGP0k+JihxfD/rod9Uphaj0pDArK7jGliqyGq2nsc3EMwdxXGs3JxeiKNZuND6z+It5WF6FifRHIkItZC5pTbp5DVrPd3BpSv5BmvSsb+7P3Nw3s4K++lOEe4xhCKdCirOj3I1KaFdS2NO0yVVLpHhNhpu29zPF27osw849kisLLjGX33i2R6mFX9kC694VNO5d/FivDEPGWrldRonvFDXqbwWjJUlnI/4c+A9n35sUAURBLvc1dyupbb76eRYkBJl9d1LxDicyj/fdLsHylLEG+6/fczGmoSUKJQZ5I0f5betJcTNqP0aOUuoNBeZVvCfZO1v8Loq+Rpe1H5gkw1phD0gUJ9s5zB93Ls5Oczi3lHd28/Eq92HDI7qdchFZyoUxoSbysUeWthq6Ydr1yglRxYSLPbacKO+1p541uV6eddtUeKdcyzJaa9v55QUietnerMasEWHRTOOP/H6cv3hoIMUarQEzSTIO6aHSnnd/oNxaC</source>
  </file>
  <file path="scripts/i18n/po2mo.php" hash="61e7243d8be3d98b24f2d58ac13e0854" package="Default">
    <include line="11" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="17" package="xFreemwork">
      <extends>\xScript</extends>
      <name>Po2MoScript</name>
      <full_name>\Po2MoScript</full_name>
      <docblock line="13">
        <description>Compiles po files to mo files</description>
        <long-description></long-description>
        <tag line="13" name="package" description="xFreemwork"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="19" namespace="global" package="Default">
        <name>$po_path</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="public" line="20" namespace="global" package="Default">
        <name>$mo_path</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="22" package="xFreemwork">
        <name>init</name>
        <full_name>init</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="27" package="xFreemwork">
        <name>run</name>
        <full_name>run</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="52" package="xFreemwork">
        <name>get_configured_locales</name>
        <full_name>get_configured_locales</full_name>
        <docblock line="48">
          <description>Retrives configured languages and returns an alias =&gt; locales array.</description>
          <long-description></long-description>
          <tag line="48" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="66" package="xFreemwork">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="61">
          <description>Creates a compiled mo file from a po file</description>
          <long-description></long-description>
          <tag line="61" name="param" description="the source po file" type="\" variable="$po_file"/>
          <tag line="61" name="param" description="the destination mo file" type="\" variable="$mo_file"/>
        </docblock>
        <argument line="66">
          <name>$po_file</name>
          <default></default>
          <type/>
        </argument>
        <argument line="66">
          <name>$mo_file</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="79" package="xFreemwork">
        <name>help</name>
        <full_name>help</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file scripts/i18n/po2mo.php</error>
      <error line="19" code="50018">No DocBlock was found for property $po_path</error>
      <error line="20" code="50018">No DocBlock was found for property $mo_path</error>
      <error line="22" code="50010">No DocBlock was found for method init()</error>
      <error line="27" code="50010">No DocBlock was found for method run()</error>
      <error line="79" code="50010">No DocBlock was found for method help()</error>
    </parse_markers>
    <source>eJyNVltv4jgUfudXnEVIBARJy2g0K9gyrWinGqlTVcvMwz4h4xhiNbazjlOoKv77HhsHkgCjRX1wj8/lO7fP+etrlmStqN+CPgS0B6Or6xHcE8GZhJnSGTGk2OKlvX/6Pnt4nj/Y48+E55DypSb6HdyRMpmzGAoZMw0mYfD4/AseX57g7VN4Vd4PrC2hlOU5X6YMiIHEmGwcRZvNJlzLIlR6HXnlPFpn6RCtw8SI1GLo96NWS7N/C67ZQknKgphrSQQLFosVT9li0Qu7URjaPwQX/TI8jeZU88yEmGa3N2lhqi6XmRIZWuSQKVi5g1Eg/Nkq3GaEvpI1g+03zZjYKP3q4tOU5Dm8qNEPtfcMbGuYjHPY+v8/Wi3AX1YsMRHoZGqBVUwmNaEohU66KiQ1XEngkpughx7A/zoGCz2ceh9wA9uZkgYjjsedJcmZlWLK/PpPGWWqO2kaiv9jKErDXQOOLmQdDUk52ubozvtfM7OgSq74utAsXqSKEqxf0DsCiaJjrRmhCRzVwbmD0LcAs8cehEIdbFdKO5PgEBjVOymRa7iZ4sFFqwJ0ILFYzt0NtD/q9dtFH856hyHbk7rVXjFV66D9opWbUAzjoY3ho3S7aw/gulc35isI3PyxLc9NHpS6vSY2F0mc4hMNfNHTbPHjYT6/e3yYHzCLJuYKbrov8SHy4BCmAXUHLM3ZOViVAnyz8GKF9ZbKzjcm1ajAqOn2UjErervqTNzBSiPHxOk7aCa4Y40lo6RAcBsGlGhkh6UqjOMSlOrmaFvv3XslWdjtncx9I3TV5B9VQJ6oIo0xcm6INvCOIoL7ntjYS4z1ZjlMoSxDfDTB8rP8QpRuXsTKW4+oSUun3eOY+LVyzGN/ffibGc3fsL6VZbBNLpBwcMilhWYKLe3ZbwkOvN8uIFqT97D0dbtX3Uu9MKrv8aUtPSUal1Fl/s/hC8NaxbGZv03nhD08FJz/2wop7YXDqWUkxIHWw6kzmJyln4avr03JcGrUna0IZjne16Y6EHZj/yhNerXsn9X5rqwUvm3d+vL70peOLrV7hjRmbOPA72lcPjW4BUqg3PPMoacZ0UQcqczuQK4KTdklTVHRjHECuSSu9aKm3piL37BGZTRcrar0Vj66B+UTnuugCnbpRPEy57oS2YlDG0aNws8KZP8SvmUfvDjHPOIVLwJ7O4CrL58/D8Dogp2lnVo8l7oNaP03/FYV57WyN2jw0wWj+9MOWEtx3pJtGQ3aIl+vhIGhqijWo3WQDrPC4EE3Rtnf1Aa5/aA1VpDWErUo9rrVWjbf/YSlWY0d/Jy3Dy+5/+CI+uHh+8m93v57AuWH12rXQveSbarfTLiK/wEEAhlw</source>
  </file>
  <file path="scripts/i18n/po_update.php" hash="2ca0010982ad4e99729b8a9588083f2a" package="Default">
    <include line="11" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="17" package="xFreemwork">
      <extends>\xScript</extends>
      <name>PoUpdateScript</name>
      <full_name>\PoUpdateScript</full_name>
      <docblock line="13">
        <description>Updates po files with new strings id from controllers and views files</description>
        <long-description></long-description>
        <tag line="13" name="package" description="xFreemwork"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="19" namespace="global" package="Default">
        <name>$po_path</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="21" package="xFreemwork">
        <name>init</name>
        <full_name>init</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="25" package="xFreemwork">
        <name>run</name>
        <full_name>run</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="67" package="xFreemwork">
        <name>get_configured_langs</name>
        <full_name>get_configured_langs</full_name>
        <docblock line="63">
          <description>Retrives configured languages and returns an alias =&gt; locales array.</description>
          <long-description></long-description>
          <tag line="63" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="78" package="xFreemwork">
        <name>get_files_to_parse</name>
        <full_name>get_files_to_parse</full_name>
        <docblock line="74">
          <description>Returns an array containing the files to be parsed</description>
          <long-description></long-description>
          <tag line="74" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="94" package="xFreemwork">
        <name>clean_po_references</name>
        <full_name>clean_po_references</full_name>
        <docblock line="90">
          <description>Cleans actual po file references (#: lines)</description>
          <long-description></long-description>
          <tag line="90" name="param" description="PO file to clean (relative filename from application directory)" type="string" variable="$po_file">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="94">
          <name>$po_file</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="107" package="xFreemwork">
        <name>parse</name>
        <full_name>parse</full_name>
        <docblock line="101">
          <description>Launches xgettext and updates the given po file from the given file to parse</description>
          <long-description></long-description>
          <tag line="101" name="param" description="File to parse (relative filename from application directory)" type="string" variable="$parse_file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="101" name="param" description="PO file to update (relative filename from application directory)" type="string" variable="$po_file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="101" name="return" description="Xgettext generated output" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="107">
          <name>$parse_file</name>
          <default></default>
          <type/>
        </argument>
        <argument line="107">
          <name>$po_file</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="124" package="xFreemwork">
        <name>help</name>
        <full_name>help</full_name>
      </method>
    </class>
    <markers>
      <todo line="31">refactor: $po_file = "{$this-&gt;po_path}/{$lang}.po";</todo>
    </markers>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file scripts/i18n/po_update.php</error>
      <error line="19" code="50018">No DocBlock was found for property $po_path</error>
      <error line="21" code="50010">No DocBlock was found for method init()</error>
      <error line="25" code="50010">No DocBlock was found for method run()</error>
      <error line="124" code="50010">No DocBlock was found for method help()</error>
    </parse_markers>
    <source>eJylWFtv2zYUfvevOHODWgpsqe1eCntJu6WXDSjSYG2BPRQzaIm2ucikRlKxg8D/fedQ94vTrTOCwCZ5Pp7Ldy7ST6/SbToKz0dwDl7kw4tnz1/AG7YTXMKV0imzLDvgJu1/+O3q7fWnt/T181YYSMRKM30P7mvEpeExZDLmGuyWw/vrL/D+5gPc/Rg8K/enJMuiiBsjVgkHZmFrbToPw/1+H2xkFii9CYvDJtykyQylg63dJaTD+Xk4Gmn+dyY0XyoZcS8WWrId95bLtUj4cukHkzAI6A+VC79YkYSfIi1SG6CZE38xQlOdLV/SmFluIFVAkgb2wm5B8j0Yq4XcGBAxrLXaQaSk1SpJuDbAZAx3gu9NLkRAr1MW3bINh8M7zflur/St0zNKmDFwo/KLciWAHyyXsYFD8fthNAL8pNkKbYazVC3R4dtFvrrOZGSFkiCksJ6Ph6H4nFl0/+yyOA4XcLhCJRF8Pj9bMcNpFR0hnr+UYaomCyd47KDqTLZBcz9clOgbbp1TzdLSPdpwz1/Up1ki8KbOefTVWmwyzeNlwtCJLYn8WKI23uRGK8cBuYFaBEgkQ1eaIAgmDUmxBu+H8kK/BXStBgFgrZCIkyk8b8CsleYs2oJX6c4MnJEMXFziFxWxhDc9Qp8whM8f33ycg+ZrFlml5y5M5Bg0ffzQDsUxfHCAxyBV40ULqCFlshWSzGtt98M67e2jUMKlNxzsid867wfj0KnS1wRN+oVHLDPIWQwaQZF1XHPMKOS9tMolcJEaXVlKFJVZiBLOJEUQfxDF4wbI9DGALbodr1jxHAIFV5xiQ4x0gKVWbf/VUR9flVfjDdWlWGOki7x2t8LkoXT5cTL2F0Ng7v4lnqo190ohv+e0grR4B7/jWPaoELiKUFeIopaQDo5qJSG7UDFfCzJcSAgwuysOM8rMk2Y3sqYEJisd4Xom1mzPdSKuO7s6BHeXuPQu6TnELyQT7XaY1FMQYUg7B/TgJI45n+pYjNtJ2YHJ60xDnymcCMix69N34lDX8yahyYC5+29glxkLUlliH1sZlWSWT7tIGIYtxlLzBONxx/M2QIRmaQqlS9rOpuaTZq4AYoW3pp/cw15t+mUo35GZacKw0fU2T2FiJegj0WdyYt3pXhTvXPdvqur3gDrFZzDbiCKNnWOzK7muTJ9z+J1jA77DuA0Wdso3zW2mJX0HV8mpfOfVG9e0ZvdBifU6P5qvFothuw0Ot61GkiAhHlWp1xILOMyk1w1P5ouzS2rK6AuUnl06geGe2sF61V2ZXVr1M1mFus5z+5rOLewuhRanfV15kiBcKWPC1VYifF468mLtcjL+j57tDhDdeYOGN7LXwSx3XG86VD/QDDefR8xELOZLnPdO9D83lmHHn7hBb/o/QWyafDdIY2Cs9KmQBueR2hNI5qfVz26prjbqGaJamn5rOuhlXpMmlQKniOI6LqoX2YwlQ0XWezLPG7BfMQRDznbFOF2PPzcfc1kklWu/4NV1tjTPFVwstjgUu44I6GxOw9e9P0y1Rxt5k3O0liXJ462uUek6Q6irlfwgjC3wSyzfL3y5aN1VlFS8qV9l2/INWvR6SevkFFLNN1VfmIR/PpkH519luCOyTabNe8ug9+P5gaHrthi3agKkwpoVD0WU+huMiKwiXbXAfLmMoMvqUwGvZ4p3zePfF/B/Qadc+++FL1KhwP+jdMuGS67ddItjLkZlmH+PjS0N+vEDj7xxFMM4GGQePH0KX1spv7tFVWGWwln5qNsYpfz+easyrCj1kf6JKuDt5dmsbGgXN7/e9DbJg7NIxfwis+uXvW2jtJ2t7mcuFN1NtRN2tuWMXgx096Sa7TVLe+t/KSFnLtEoGp3d5jjZ2XtoxIBGzbNm1KBVfsval58Yfkbe8iRtN626RYtdmqBDPEq7adHAbvk9putjz8N+X4O8ebfMGJevJ4pH+PA8aL+ooPXyTUVnchxjfTBUdPDhosn5/L1F+3nFBB1hiWWmA3etMKnslllQMrkfnsr2IkloRshTMJ53UCuv1WMMDi0nHt7zZ/dg0o3ZcYTRoRc07XcqOPX8AzHqiS8=</source>
  </file>
  <file path="scripts/deploy/database.php" hash="6dce3717240ebd343bd6b00d17714e02" package="Default">
    <include line="11" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="17" package="xScript">
      <extends>\xScript</extends>
      <name>DeployDatabaseScript</name>
      <full_name>\DeployDatabaseScript</full_name>
      <docblock line="13">
        <description>Executes .sql files present in the sql/ directory (alphabetical order).</description>
        <long-description></long-description>
        <tag line="13" name="package" description="xScript"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="19" namespace="global" package="Default">
        <name>$sql_path</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="21" package="xScript">
        <name>init</name>
        <full_name>init</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="29" package="xScript">
        <name>setup_bootstrap</name>
        <full_name>setup_bootstrap</full_name>
        <docblock line="25">
          <description>Setups Bootstrap with database selection fault tolerance.</description>
          <long-description></long-description>
          <tag line="25" name="see" description="\xScript::setup_bootstrap()" refers="\xScript::setup_bootstrap()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="47" package="xScript">
        <name>run</name>
        <full_name>run</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="80" package="xScript">
        <name>get_files_to_execute</name>
        <full_name>get_files_to_execute</full_name>
        <docblock line="76">
          <description>Returns an array containing the files to be parsed</description>
          <long-description></long-description>
          <tag line="76" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="88" package="xScript">
        <name>help</name>
        <full_name>help</full_name>
      </method>
    </class>
    <markers>
      <todo line="60">ensure splitting by ";\n" will never split inside an sql statement</todo>
    </markers>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file scripts/deploy/database.php</error>
      <error line="19" code="50018">No DocBlock was found for property $sql_path</error>
      <error line="21" code="50010">No DocBlock was found for method init()</error>
      <error line="47" code="50010">No DocBlock was found for method run()</error>
      <error line="88" code="50010">No DocBlock was found for method help()</error>
    </parse_markers>
    <source>eJyVV21vm0gQ/u5fMeezDhzZ0OakSsWXXHtJWlVK2lyT3qdKaA1je3VrILtLYivyf78ZwBgDubuiVjLsvM8zz2x++z1bZQP/ZAAn4EZjOH31+hQuxVpiAhepzoQV+YYO+fz608XV57sr/nm/kgaUnGuht1D8jDAxGEOexKjBrhA+fv4GH2+v4fFX79X+fMK6IorQGDlXCMLCytos8P2npydvmeReqpd+JWz8ZaampO2t7FpxDCcn/mCg8SGXGsM0idCNpU7EGt0wXEiFYTj2HN/z+B8F53+zUvl3kZaZ9ShNZzwbUKpFLlcbjHKLBjzzoICVDWQaDSYWZFIkQAc+kAOMbEpZukJlKzFHKyOhINWU59hjU+8yEf0tlgib0lURZqSEMXCJmUq3l1TEuTBYHgNuLCax2YvD82AA9GT5nBKHEbkNqeyrWfl5kSeRlWlCUUnrjkkaqmdkqQnT8708nMHmIk0smQ+CEfvjr1QPEnBmhdauNFmUgJ8TuEObZwb+SFNrrBYZPEmyFFcBg0GFpfeFyJUFmyrUggrv7Q28M1gnHgSGzYXzvTV3XIn5x6l0xBpZWSr14a0ojNDUlR7js1psB5Gw0Qrcq02EWeFjhOOWHd+HW42P3OE0t1lurUyWMM8XC0KssUJbwi/1/jibfQ7V8y6dh9S9MFIokmYIlYcbkRAUDCS5UjCK50CYSnMdIcgFRGmykMtck5+6xHHK0qmFLTI0pLFHJknL/WmE0/Ml2hsaGzJO5To7A+cizVVcaJZdqk06Y4KvTp+oBJ3wqN+mCmN6Hs/p/z4Om5YxW1xnKY21VNu2MokIpciwzpOEa7epcdNfLMqfp/MYmX3ej+P8D2Eyx5HOfhQkVRZf0dA84wtleBQqxx+MpkqzAcfmtNWop6r1za9Kl+7wVqcFKVJRSy4iHD63Bnw3bCSzoBREtHIrGUJHwYAmtGmIJbeRM2FgxJ/bo9B0XTIhe34uZHfDCbzulu2W+KxJlwXG8uUKNn9JfGpLuwVQDORFSowpJXi87v685tABlx6VWkvBW6AuJVexhaBHMs74YSdBoFIRu9z8VnyF2PT8ZRrsFY+xYLXQZoq7yFn1oIUXmuHAj01wHc72lnQh1QO2es209bs0V2ncf7n8EgDtP6IJMJmSFU1tYTj7ngyJoGlIE6IxXZ4SUoyMaZUmvLCYx6jaNAp9tssnp0oL4qUlbsCfud/NeOS/LD398nVaqFxcf7r6fB/efLu+/xTe3b+/v7qh9ztwGxuclqyXoPXXIsmF8hfa36PfW28pvOlDjnrLYj+/ff3mzdtxn9/pdNr3+X2JqDV1TGaEmjrTYlgEMNLoM3dx0qcfSxMJHXMxCY522zDQER81jJ+B0Fpsebws9bh8WRO1OFbLtTMh0qYlH6M7nNHkMC7G4xYQ+KkGFtymbZ7P+nUMmxuyo4LgoSHUMvW/Nl2RQmPEPwgqSgxYT7pTjbpDEZ/2BNtQ7jnt3y67fvprXDa+EjfrxDBUiyoyA1shi1XCF66S+WjLzJH5nK6T9S1DF6qlWv+d4gUGbNAtnzLDcEs3fDUMgkgQJmIM6Zbntth2Ag5fnLqUSx08WKIG/lK/dlh2f0AOTT6nhXRQnRD8NP10++9sThNCh8pWZTgEcHSvq2uxQpV1c+e85brE6lGcQ+KV45E5gLyL48qJW8BuH9HwhLYHrY4Z7LrD96876kj68NZIv9n7VuA1vTbv5mrL15QCUd3LfSvRIVGH01m0DkGUroI0oNS2/V8AEk3Q0uZNNOm23LSz2A2oQwktsr6/B3jC/gHsvd+5</source>
  </file>
  <file path="lib/Data/Transaction.php" hash="9b22a8ad8a00815f11edea2c4e5c50ed" package="Default">
    <class final="false" abstract="false" namespace="global" line="16" package="xFreemwork">
      <extends/>
      <name>xTransaction</name>
      <full_name>\xTransaction</full_name>
      <docblock line="11">
        <description>SQL Transaction controller class.</description>
        <long-description>&lt;p&gt;This class is intended simulate nested transactions using a single transaction.&lt;/p&gt;</long-description>
        <tag line="11" name="package" description="xFreemwork"/>
      </docblock>
      <property final="false" static="true" visibility="public" line="18" namespace="global" package="Default">
        <name>$started_transactions_count</name>
        <default>0</default>
      </property>
      <property final="false" static="true" visibility="public" line="20" namespace="global" package="Default">
        <name>$autocommit_state_backup</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="public" line="22" namespace="global" package="Default">
        <name>$last_insert_id</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="public" line="24" namespace="global" package="Default">
        <name>$results</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="public" line="25" namespace="global" package="Default">
        <name>$exceptions</name>
        <default>array()</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="27" package="xFreemwork">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="29" package="xFreemwork">
        <name>q</name>
        <full_name>q</full_name>
        <argument line="29">
          <name>$sql</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="37" package="xFreemwork">
        <name>start</name>
        <full_name>start</full_name>
        <docblock line="33">
          <description>Starts a new transaction if no transaction already started.</description>
          <long-description>&lt;p&gt;Otherwise, simulates a nested transaction through a single transaction.&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="65" package="xFreemwork">
        <name>commit</name>
        <full_name>commit</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="77" package="xFreemwork">
        <name>rollback</name>
        <full_name>rollback</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="84" package="xFreemwork">
        <name>restore_autocommit_state</name>
        <full_name>restore_autocommit_state</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="94" package="xFreemwork">
        <name>end</name>
        <full_name>end</full_name>
        <docblock line="88">
          <description>Ends the current transaction (COMMIT or ROLLBACK according errors).</description>
          <long-description>&lt;p&gt;If nested, the transaction is not COMMITed until the last top-level transaction is ended.&lt;/p&gt;</long-description>
          <tag line="88" name="throw" description="Throw an exception if exceptions occured" type="\xException">
            <type by_reference="false">\xException</type>
          </tag>
          <tag line="88" name="return" description="summary (xModel compatible)" type="\Transaction">
            <type by_reference="false">\Transaction</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="110" package="xFreemwork">
        <name>execute</name>
        <full_name>execute</full_name>
        <docblock line="106">
          <description>Shorthand for execute_model()</description>
          <long-description></long-description>
          <tag line="106" name="see" description="\execute_model()" refers="\execute_model()"/>
        </docblock>
        <argument line="110">
          <name>$model_instance</name>
          <default></default>
          <type/>
        </argument>
        <argument line="110">
          <name>$method_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="110">
          <name>$method_args</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="114" package="xFreemwork">
        <name>execute_model</name>
        <full_name>execute_model</full_name>
        <argument line="114">
          <name>$model_instance</name>
          <default></default>
          <type/>
        </argument>
        <argument line="114">
          <name>$method_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="114">
          <name>$method_args</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="143" package="xFreemwork">
        <name>execute_sql</name>
        <full_name>execute_sql</full_name>
        <argument line="143">
          <name>$sql</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="161" package="xFreemwork">
        <name>summary</name>
        <full_name>summary</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="179" package="xFreemwork">
        <name>insertid</name>
        <full_name>insertid</full_name>
        <docblock line="174">
          <description>Returns the last execute() insert id.</description>
          <long-description>&lt;p&gt;Returns null if no last insert id available.&lt;/p&gt;</long-description>
          <tag line="174" name="return" description="The insert id of the last execute()." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="183" package="xFreemwork">
        <name>throw_exception</name>
        <full_name>throw_exception</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="209" package="xFreemwork">
        <name>autocommit</name>
        <full_name>autocommit</full_name>
        <argument line="209">
          <name>$value</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib/Data/Transaction.php</error>
      <error line="18" code="50018">No DocBlock was found for property $started_transactions_count</error>
      <error line="20" code="50018">No DocBlock was found for property $autocommit_state_backup</error>
      <error line="22" code="50018">No DocBlock was found for property $last_insert_id</error>
      <error line="24" code="50018">No DocBlock was found for property $results</error>
      <error line="25" code="50018">No DocBlock was found for property $exceptions</error>
      <error line="27" code="50010">No DocBlock was found for method __construct()</error>
      <error line="29" code="50010">No DocBlock was found for method q()</error>
      <error line="65" code="50010">No DocBlock was found for method commit()</error>
      <error line="77" code="50010">No DocBlock was found for method rollback()</error>
      <error line="84" code="50010">No DocBlock was found for method restore_autocommit_state()</error>
      <error line="106" code="50015">Argument $model_instance is missing from the Docblock of execute()</error>
      <error line="106" code="50015">Argument $method_name is missing from the Docblock of execute()</error>
      <error line="106" code="50015">Argument $method_args is missing from the Docblock of execute()</error>
      <error line="114" code="50010">No DocBlock was found for method execute_model()</error>
      <error line="143" code="50010">No DocBlock was found for method execute_sql()</error>
      <error line="161" code="50010">No DocBlock was found for method summary()</error>
      <error line="183" code="50010">No DocBlock was found for method throw_exception()</error>
      <error line="209" code="50010">No DocBlock was found for method autocommit()</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="lib/Data/Model.php" hash="aeeb34890821fb43601a3fe83deffc5d" package="Default">
    <class final="false" abstract="true" namespace="global" line="18" package="xFreemwork">
      <extends>\xRestElement</extends>
      <name>xModel</name>
      <full_name>\xModel</full_name>
      <docblock line="11">
        <description>Model base class.</description>
        <long-description>&lt;p&gt;Responsibilities:
- deal with database transactions&lt;/p&gt;</long-description>
        <tag line="11" name="package" description="xFreemwork"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="20" namespace="global" package="Default">
        <name>$table</name>
        <default>'sometablename'</default>
      </property>
      <property final="false" static="false" visibility="public" line="29" namespace="global" package="Default">
        <name>$maintable</name>
        <default>null</default>
        <docblock line="22">
          <description>This property is set in the constructor.</description>
          <long-description>&lt;p&gt;Name of the main table:
i.e. the table affected by the default put(),post(),delete() methods (if not overriden).&lt;/p&gt;</long-description>
          <tag line="22" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="36" namespace="global" package="Default">
        <name>$name</name>
        <default>null</default>
        <docblock line="31">
          <description>This property is set in the constructor.</description>
          <long-description>&lt;p&gt;Name of the model (eg. a class name 'SomeModel' becomes 'my').&lt;/p&gt;</long-description>
          <tag line="31" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="51" namespace="global" package="Default">
        <name>$mapping</name>
        <default>array()</default>
        <docblock line="38">
          <description>Params to fields mapping.</description>
          <long-description>&lt;p&gt;This mapping purpose is to abstract table fields names.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;array(
    'id' =&gt; 'id',
    'name' =&gt; 'name',
    'example_name' =&gt; 'another_name_in_table',
    'shortname' =&gt; 'name_in_table'
)
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="38" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="70" namespace="global" package="Default">
        <name>$validation</name>
        <default>array()</default>
        <docblock line="53">
          <description>Fields validation definitions.</description>
          <long-description>&lt;p&gt;This validation puropose is to use the xValidator classes
to ease models validation code.
Also, these can be reused in xForm validation definition.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;array(
    'name' =&gt; array(
        'mandatory',
        'string' =&gt; array(2, 50)
    )
);
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="53" name="see" description="\invalids()" refers="\invalids()"/>
          <tag line="53" name="see" description="\xValidatorStore" refers="\xValidatorStore"/>
          <tag line="53" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="76" namespace="global" package="Default">
        <name>$primary</name>
        <default>array('id')</default>
        <docblock line="72">
          <description>The primary key field names (model field names, defaults to 'id').</description>
          <long-description></long-description>
          <tag line="72" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="90" namespace="global" package="Default">
        <name>$constants</name>
        <default>array()</default>
        <docblock line="78">
          <description>Fields (model) that accept sql constants (e.g.</description>
          <long-description>&lt;p&gt;CURRENT_TIMESTAMP).
These fields value, when provided with a mysql constant or function,
will not be escaped and enquoted.
If empty, any field will accept sql constants.
Example array:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;array('mapping_name')
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="78" name="see" description="\xModel::fields_values()" refers="\xModel::fields_values()"/>
          <tag line="78" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="96" namespace="global" package="Default">
        <name>$get</name>
        <default>array()</default>
        <docblock line="92">
          <description>Mandatory params for get operations (model fields names)</description>
          <long-description></long-description>
          <tag line="92" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="102" namespace="global" package="Default">
        <name>$post</name>
        <default>array()</default>
        <docblock line="98">
          <description>Mandatory params for post operations (model fields names)</description>
          <long-description></long-description>
          <tag line="98" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="108" namespace="global" package="Default">
        <name>$put</name>
        <default>array()</default>
        <docblock line="104">
          <description>Mandatory params for put operations (model fields names)</description>
          <long-description></long-description>
          <tag line="104" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="114" namespace="global" package="Default">
        <name>$delete</name>
        <default>array()</default>
        <docblock line="110">
          <description>Mandatory params for delete operations (model fields names)</description>
          <long-description></long-description>
          <tag line="110" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="123" namespace="global" package="Default">
        <name>$return</name>
        <default>array('*')</default>
        <docblock line="116">
          <description>Fields to return (model fields names).</description>
          <long-description>&lt;p&gt;Contains db fields name(s).
This property will be overridden with the xreturn parameter value.&lt;/p&gt;</long-description>
          <tag line="116" name="see" description="\Model::sql_select()" refers="\Model::sql_select()"/>
          <tag line="116" name="var" description="" type="string|array">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="137" namespace="global" package="Default">
        <name>$joins</name>
        <default>array()</default>
        <docblock line="125">
          <description>Available SQL joins.</description>
          <long-description>&lt;p&gt;Joins MUST must match 0..1 tuple at most.
Array example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;array(
   'foreign_model_name' =&gt; 'LEFT JOIN foreign_table_name ON this_table_id = foreign_table_id'
)
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="125" name="see" description="\xModel::sql_join()" refers="\xModel::sql_join()"/>
          <tag line="125" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="146" namespace="global" package="Default">
        <name>$join</name>
        <default>array()</default>
        <docblock line="139">
          <description>Enabled SQL joins.</description>
          <long-description>&lt;p&gt;Contains model name(s).
This property will be overridden with the xjoin parameter value.&lt;/p&gt;</long-description>
          <tag line="139" name="see" description="\xModel::joins" refers="\xModel::joins"/>
          <tag line="139" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="171" namespace="global" package="Default">
        <name>$wheres</name>
        <default>array()</default>
        <docblock line="148">
          <description>Available SQL where templates.</description>
          <long-description>&lt;p&gt;Associates template files to xwhere label.
When requested using the 'xwhere' parameter, the SQL WHERE clause
is generated by applying the given xwhere template (eg. query-or).
Template files are looked for from the views root directory,
your project/views/ directory.
Templates are given a data array ($d) with two items:
- 'model' contains the model instance
- 'where' contains the parsed fields values
- 'params' contains the model instance parameters
Array example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;array(
   // This targets project/views/xmodel/query-or.tpl, etc.
   'query-or' =&gt; 'xmodel/query-or',
   'query-and' =&gt; 'xmodel/query-and',
   'query-like' =&gt; 'xmodel/query-like'
)
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="148" name="see" description="\xModel::sql_where()" refers="\xModel::sql_where()"/>
          <tag line="148" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="180" namespace="global" package="Default">
        <name>$where</name>
        <default>null</default>
        <docblock line="173">
          <description>Enabled SQL where template.</description>
          <long-description>&lt;p&gt;Contains where template name(s).
This property will be overridden with the xwhere parameter value.&lt;/p&gt;</long-description>
          <tag line="173" name="see" description="\xModel::joins()" refers="\xModel::joins()"/>
          <tag line="173" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="189" namespace="global" package="Default">
        <name>$order_by</name>
        <default>null</default>
        <docblock line="182">
          <description>Result sorting fields (model fields names).</description>
          <long-description>&lt;p&gt;Contains model fields name(s).
This property will be overridden with the xorder_by parameter value.&lt;/p&gt;</long-description>
          <tag line="182" name="see" description="\xModel::sql_order()" refers="\xModel::sql_order()"/>
          <tag line="182" name="var" description="" type="string|array">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="198" namespace="global" package="Default">
        <name>$order</name>
        <default>null</default>
        <docblock line="191">
          <description>Result sorting order.</description>
          <long-description>&lt;p&gt;Accepted values: 'ASC' or 'DESC'.
This property will be overridden with the xorder parameter value.&lt;/p&gt;</long-description>
          <tag line="191" name="see" description="\xModel::sql_order()" refers="\xModel::sql_order()"/>
          <tag line="191" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="207" namespace="global" package="Default">
        <name>$group_by</name>
        <default>null</default>
        <docblock line="200">
          <description>Result group by.</description>
          <long-description>&lt;p&gt;Contains model fields name(s).
This property will be overridden with the xgroup_by parameter value.&lt;/p&gt;</long-description>
          <tag line="200" name="see" description="\xModel::sql_group()" refers="\xModel::sql_group()"/>
          <tag line="200" name="var" description="" type="string|array">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="220" namespace="global" package="Default">
        <name>$allow_html</name>
        <default>array()</default>
        <docblock line="209">
          <description>Specifies which of the fields accept HTML.</description>
          <long-description>&lt;p&gt;Example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;array(
    'field-1' =&gt; null,         // Allows all HTML tags
    'field-2' =&gt; '&lt;p&gt;&lt;b&gt;&lt;br/&gt;' // Allows a set of tags, strips others
)
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="209" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="226" package="xFreemwork">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="222">
          <description>Model classes should only be instanciated through the Model::load() method.</description>
          <long-description></long-description>
          <tag line="222" name="see" description="\Model::load()" refers="\Model::load()"/>
        </docblock>
        <argument line="226">
          <name>$params</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="288" package="xFreemwork">
        <name>load</name>
        <full_name>load</full_name>
        <docblock line="281">
          <description>Loads and returns the model specified object.</description>
          <long-description></long-description>
          <tag line="281" name="param" description="The model to load.&#10;       e.g. item will load the models/item.php file&#10;       and return an instance of the ItemModel class." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="281" name="return" description="" type="\xModel">
            <type by_reference="false">\xModel</type>
          </tag>
        </docblock>
        <argument line="288">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="288">
          <name>$params</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="288">
          <name>$options</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="304" package="xFreemwork">
        <name>scan</name>
        <full_name>scan</full_name>
        <docblock line="300">
          <description>Scans and returns available models.</description>
          <long-description></long-description>
          <tag line="300" name="return" description="An array of available models (filename =&gt; modelname)." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="319" package="xFreemwork">
        <name>dbfield</name>
        <full_name>dbfield</full_name>
        <docblock line="311">
          <description>Returns the database field name from the given model field name.</description>
          <long-description>&lt;p&gt;If the database field is not mapped, returns the given database field name.
FIXME: foreign models fieldnames are not translated.
       This might cause problems in eg. sql_where()?&lt;/p&gt;</long-description>
          <tag line="311" name="param" description="The model field name, or the database field name if not mapped." type="string" variable="$modelfield">
            <type by_reference="false">string</type>
          </tag>
          <tag line="311" name="return" description="The databse field name." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="319">
          <name>$modelfield</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="331" package="xFreemwork">
        <name>modelfield</name>
        <full_name>modelfield</full_name>
        <docblock line="324">
          <description>Returns the model field name from the given database field name.</description>
          <long-description>&lt;p&gt;FIXME: foreign models fieldnames are not translated.
       This might cause problems in eg. sql_where()?&lt;/p&gt;</long-description>
          <tag line="324" name="param" description="The model field name." type="string" variable="$dbfield">
            <type by_reference="false">string</type>
          </tag>
          <tag line="324" name="return" description="The databse field name." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="331">
          <name>$dbfield</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="340" package="xFreemwork">
        <name>primary</name>
        <full_name>primary</full_name>
        <docblock line="336">
          <description>Returns the primary key model field name</description>
          <long-description></long-description>
          <tag line="336" name="return" description="Name of the model id field." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="369" package="xFreemwork">
        <name>fields_values</name>
        <full_name>fields_values</full_name>
        <docblock line="347">
          <description>Returns an associative array contanining params values
with translated keys (e.g.</description>
          <long-description>&lt;p&gt;keys reflect the db fields names).
Return array structure:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;array(
    'db_fieldname_1' =&gt; array(
        'value' =&gt; 'some value',
        'wildcard' =&gt; false
     ),
     'db_fieldname_2' =&gt; array(
        'value' =&gt; '%some value%',
        'wildcard' =&gt; true
     ),
     ...
)
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Only mapped fields are taken into account.&lt;/li&gt;
&lt;li&gt;Wildcard filters patterns are applied to params values if applicable.&lt;/li&gt;
&lt;/ul&gt;</long-description>
          <tag line="347" name="param" description="If true, applies the filters pattern be applied to value" type="bool" variable="$no_primary">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="347" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="369">
          <name>$no_primary</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="390" package="xFreemwork">
        <name>foreign_fields_values</name>
        <full_name>foreign_fields_values</full_name>
        <docblock line="382">
          <description>Returns an array of modelfield =&gt; value containing the subset of fields that belong to the given foreign model name.</description>
          <long-description>&lt;p&gt;FIXME: are the fieldnames translated (eg. reflect the db field names?)
       To be consistent with fields_values, they should be translated.&lt;/p&gt;</long-description>
          <tag line="382" name="param" description="The foreign model(s) name(s). If not given, uses the current $join property value." type="string|array" variable="$foreign_models_names">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="382" name="param" description="True to return fields with their model name as a prefix (defaults to false)." type="bool" variable="">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="382" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="390">
          <name>$foreign_models_names</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="421" package="xFreemwork">
        <name>foreign_mapping</name>
        <full_name>foreign_mapping</full_name>
        <docblock line="416">
          <description>Returns the foreign models mapping according the xjoin defined in parameters.</description>
          <long-description></long-description>
          <tag line="416" name="param" description="If defined, the returned mapping is limited to specified models." type="array" variable="$foreign_models_names">
            <type by_reference="false">array</type>
          </tag>
          <tag line="416" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="421">
          <name>$foreign_models_names</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="442" package="xFreemwork">
        <name>invalids</name>
        <full_name>invalids</full_name>
        <docblock line="435">
          <description>Checks given params values and returns an array containing
the invalid params (fields) as key, and true as value.</description>
          <long-description></long-description>
          <tag line="435" name="param" description="If given, limits validation to the given $fields.&#10;             {@see xValidatorStore::invalids()}" type="array" variable="$fields">
            <type by_reference="false">array</type>
          </tag>
          <tag line="435" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="442">
          <name>$fields</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="455" package="xFreemwork">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="448">
          <description>Implements the REST get method to access data.</description>
          <long-description>&lt;p&gt;Issues a SELECT and returns the result
as an associative array.&lt;/p&gt;</long-description>
          <tag line="448" name="see" description="\xModel::query()" refers="\xModel::query()"/>
          <tag line="448" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="455">
          <name>$rownum</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="466" package="xFreemwork">
        <name>post</name>
        <full_name>post</full_name>
        <docblock line="459">
          <description>Implements the REST post method to access data.</description>
          <long-description>&lt;p&gt;Issues a UPDATE and returns the result
as an associative array.&lt;/p&gt;</long-description>
          <tag line="459" name="see" description="\xModel::query()" refers="\xModel::query()"/>
          <tag line="459" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="477" package="xFreemwork">
        <name>put</name>
        <full_name>put</full_name>
        <docblock line="470">
          <description>Implements the REST put method to access data.</description>
          <long-description>&lt;p&gt;Issues a INSERT and returns the result
as an associative array.&lt;/p&gt;</long-description>
          <tag line="470" name="see" description="\xModel::query()" refers="\xModel::query()"/>
          <tag line="470" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="488" package="xFreemwork">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="481">
          <description>Implements the REST delete method to access data.</description>
          <long-description>&lt;p&gt;Issues a DELETE and returns the result
as an associative array.&lt;/p&gt;</long-description>
          <tag line="481" name="see" description="\xModel::query()" refers="\xModel::query()"/>
          <tag line="481" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="497" package="xFreemwork">
        <name>count</name>
        <full_name>count</full_name>
        <docblock line="492">
          <description>Issues a COUNT and returns the result</description>
          <long-description></long-description>
          <tag line="492" name="see" description="\xModel::query()" refers="\xModel::query()"/>
          <tag line="492" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="508" package="xFreemwork">
        <name>joins</name>
        <full_name>joins</full_name>
        <docblock line="501">
          <description>Returns an array of active joins.</description>
          <long-description></long-description>
          <tag line="501" name="param" description="Joins to use. If not given, uses the current $join property value." type="string|array" variable="$join">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="501" name="see" description="\xModel::$join" refers="\xModel::$join"/>
          <tag line="501" name="see" description="\xModel::$joins" refers="\xModel::$joins"/>
          <tag line="501" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="508">
          <name>$join</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="530" package="xFreemwork">
        <name>escape</name>
        <full_name>escape</full_name>
        <docblock line="520">
          <description>Returns the given value, escaped and quoted.</description>
          <long-description>&lt;p&gt;If the field name (modelfield) is given and the
field is listed in self::constants array,
and the value is a sql constant,
returns the value unquoted and unescaped.&lt;/p&gt;</long-description>
          <tag line="520" name="param" description="The value to escape and enquote" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="520" name="param" description="Optional field name (modelfield)" type="string" variable="$field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="520" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="530">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="530">
          <name>$field</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="536" package="xFreemwork">
        <name>sql_constants</name>
        <full_name>sql_constants</full_name>
        <docblock line="532">
          <description>Returns the allowed SQL constants (eg.</description>
          <long-description>&lt;p&gt;CURRENT_TIMESTAMP).&lt;/p&gt;</long-description>
          <tag line="532" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="542" package="xFreemwork">
        <name>sql_select</name>
        <full_name>sql_select</full_name>
        <docblock line="538">
          <description>Returns a default SQL SELECT clause.</description>
          <long-description></long-description>
          <tag line="538" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="548" package="xFreemwork">
        <name>sql_from</name>
        <full_name>sql_from</full_name>
        <docblock line="544">
          <description>Returns a default SQL FROM clause.</description>
          <long-description></long-description>
          <tag line="544" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="568" package="xFreemwork">
        <name>sql_where_prepare</name>
        <full_name>sql_where_prepare</full_name>
        <docblock line="550">
          <description>Creates a structured where clause content array.</description>
          <long-description>&lt;pre&gt;&lt;code&gt;array(
    array(
        'operator' =&gt; 'AND',
        'comparator' =&gt; '=',
        'table' =&gt; 'tablename',
        'field' =&gt; 'fieldname',
        'value' =&gt; 'somevalue', // or array('value1', 'value2', ...)
    )
);
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="550" name="see" description="\xModel::sql_where()" refers="\xModel::sql_where()"/>
          <tag line="550" name="param" description="True to consider primary key field(s) only" type="bool" variable="$primary_only">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="550" name="param" description="True to consider local fields only (ignoring foreign tables fields)" type="bool" variable="$local_only">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="550" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="568">
          <name>$primary_only</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="568">
          <name>$local_only</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="625" package="xFreemwork">
        <name>sql_where</name>
        <full_name>sql_where</full_name>
        <docblock line="621">
          <description>Returns a default SQL WHERE clause.</description>
          <long-description></long-description>
          <tag line="621" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="625">
          <name>$primary_only</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="631" package="xFreemwork">
        <name>sql_join</name>
        <full_name>sql_join</full_name>
        <docblock line="627">
          <description>Returns a default SQL JOIN clause to be used as a join.</description>
          <long-description></long-description>
          <tag line="627" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="637" package="xFreemwork">
        <name>sql_order</name>
        <full_name>sql_order</full_name>
        <docblock line="633">
          <description>Returns a default SQL ORDER clause.</description>
          <long-description></long-description>
          <tag line="633" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="643" package="xFreemwork">
        <name>sql_group</name>
        <full_name>sql_group</full_name>
        <docblock line="639">
          <description>Returns a default SQL GROUP BY clause.</description>
          <long-description></long-description>
          <tag line="639" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="649" package="xFreemwork">
        <name>sql_limit</name>
        <full_name>sql_limit</full_name>
        <docblock line="645">
          <description>Returns default SQL LIMIT and/or OFFSET clause(s).</description>
          <long-description></long-description>
          <tag line="645" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="666" package="xFreemwork">
        <name>query</name>
        <full_name>query</full_name>
        <docblock line="651">
          <description>Exectues the given sql and returns its query result.</description>
          <long-description>&lt;ul&gt;
&lt;li&gt;If the result is empty, an empty array is returned.

&lt;ul&gt;
&lt;li&gt;If the result is not empty, an 2 dimensional associative array
with mapped array keys containing the result rows is returned.&lt;/li&gt;
&lt;li&gt;If the query didn't return row results
(e.g. insert, update and delete queries),
an informational array is returned, containg&lt;/li&gt;
&lt;li&gt;the last insert id,&lt;/li&gt;
&lt;li&gt;the number of affected rows,&lt;/li&gt;
&lt;li&gt;additional mysql information,&lt;/li&gt;
&lt;li&gt;and the raw mysql result.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;</long-description>
          <tag line="651" name="param" description="The SQL statement to execute." type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="651" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="666">
          <name>$sql</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="668" package="xFreemwork">
        <name>q</name>
        <full_name>q</full_name>
        <argument line="668">
          <name>$sql</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib/Data/Model.php</error>
      <error line="20" code="50018">No DocBlock was found for property $table</error>
      <error line="222" code="50015">Argument $params is missing from the Docblock of __construct()</error>
      <error line="281" code="50015">Argument $params is missing from the Docblock of load()</error>
      <error line="281" code="50015">Argument $options is missing from the Docblock of load()</error>
      <notice line="382" code="50013">Parameter  could not be found in foreign_fields_values()</notice>
      <error line="448" code="50015">Argument $rownum is missing from the Docblock of get()</error>
      <error line="621" code="50015">Argument $primary_only is missing from the Docblock of sql_where()</error>
      <error line="668" code="50010">No DocBlock was found for method q()</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="lib/Data/Validator.php" hash="9715a608217c0e3ce50ec0c15b3b1224" package="Default">
    <class final="false" abstract="false" namespace="global" line="15" package="xValidator">
      <extends/>
      <name>xValidatorStore</name>
      <full_name>\xValidatorStore</full_name>
      <docblock line="11">
        <description>This component is to be used for transforming field(s) value(s).</description>
        <long-description></long-description>
        <tag line="11" name="package" description="xValidator"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="21" namespace="global" package="Default">
        <name>$validators</name>
        <default>array()</default>
        <docblock line="17">
          <description>Array of created xValidator instances.</description>
          <long-description></long-description>
          <tag line="17" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="27" namespace="global" package="Default">
        <name>$params</name>
        <default>array()</default>
        <docblock line="23">
          <description>Parameters (values) to validate</description>
          <long-description></long-description>
          <tag line="23" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="52" package="xValidator">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="29">
          <description>Instanciate a new xValidatorStore,
creating xValidator instances from the given $options</description>
          <long-description></long-description>
          <tag line="29" name="param" description="An array containing validators fieldname =&gt; options:&#10;&lt;code&gt;&#10;array(&#10;    'name' =&gt; array(&#10;        'mandatory',&#10;        'string' =&gt; array(2, 50)&#10;    ),&#10;    'birthyear' =&gt; array(&#10;        'integer' =&gt; array(1900, 2012)&#10;    )&#10;)&#10;&lt;/code&gt;" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="29" name="param" description="An array of fieldname =&gt; value to validate:&#10;&lt;code&gt;&#10;array(&#10;    'name' =&gt; 'King Luis',&#10;    'birthyear' =&gt; '08/04/1901'&#10;)&#10;&lt;/code&gt;" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="52">
          <name>$options</name>
          <default></default>
          <type/>
        </argument>
        <argument line="52">
          <name>$params</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="78" package="xValidator">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="70">
          <description>Returns the given validator.</description>
          <long-description></long-description>
          <tag line="70" name="param" description="Field name." type="string" variable="$field_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="70" name="param" description="Validator name." type="string" variable="$validator_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="70" name="return" description="xValidator instance corresponding&#10;    to the given field and validator names,&#10;    null if not found." type="\xValidator">
            <type by_reference="false">\xValidator</type>
          </tag>
        </docblock>
        <argument line="78">
          <name>$field_name</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="78">
          <name>$validator_name</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="91" package="xValidator">
        <name>invalids</name>
        <full_name>invalids</full_name>
        <docblock line="84">
          <description>Returns an array containing field =&gt; message for each invalid field.</description>
          <long-description></long-description>
          <tag line="84" name="param" description="Array of fields names to validate against.&#10;             If specified, only the given $fields will be validated,&#10;             otherwise every field will be validated." type="array" variable="$fields">
            <type by_reference="false">array</type>
          </tag>
          <tag line="84" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="91">
          <name>$fields</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="true" namespace="global" line="116" package="xValidator">
      <extends/>
      <name>xValidator</name>
      <full_name>\xValidator</full_name>
      <docblock line="112">
        <description>Generic validator.</description>
        <long-description></long-description>
        <tag line="112" name="package" description="xValidator"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="122" namespace="global" package="Default">
        <name>$options</name>
        <default>array()</default>
        <docblock line="118">
          <description>Validation options (e.g.</description>
          <long-description>&lt;p&gt;string min/max length)&lt;/p&gt;</long-description>
          <tag line="118" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="124" package="xValidator">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="124">
          <name>$options</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="133" package="xValidator">
        <name>init</name>
        <full_name>init</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="142" package="xValidator">
        <name>create</name>
        <full_name>create</full_name>
        <docblock line="135">
          <description>Returns an instance of the given $validator
initialized with the given optional $options.</description>
          <long-description></long-description>
          <tag line="135" name="param" description="The validator name" type="string" variable="$validator">
            <type by_reference="false">string</type>
          </tag>
          <tag line="135" name="param" description="Options for the validator instance" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="135" name="return" description="" type="\xValidator">
            <type by_reference="false">\xValidator</type>
          </tag>
        </docblock>
        <argument line="142">
          <name>$validator</name>
          <default></default>
          <type/>
        </argument>
        <argument line="142">
          <name>$options</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="154" package="xValidator">
        <name>invalid</name>
        <full_name>invalid</full_name>
        <docblock line="148">
          <description>Returns a user message if the valid is invalid,
or returns false if the value is valid.</description>
          <long-description></long-description>
          <tag line="148" name="param" description="The value to validate against." type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="148" name="return" description="" type="string|bool">
            <type by_reference="false">string</type>
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="154">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="156" package="xValidator">
        <name>valid</name>
        <full_name>valid</full_name>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="166" package="xValidator">
        <name>message</name>
        <full_name>message</full_name>
        <docblock line="158">
          <description>Returns the validator message.</description>
          <long-description>&lt;p&gt;Used to initialize the validator message
and must be implemented in child classes.&lt;/p&gt;</long-description>
          <tag line="158" name="note" description="Validator message have to be defined here&#10;in order to be able to use the _() function."/>
          <tag line="158" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="173" package="xValidator">
      <extends>\xValidator</extends>
      <name>xValidatorModel</name>
      <full_name>\xValidatorModel</full_name>
      <docblock line="169">
        <description>This validator is made for re-using models validation logic</description>
        <long-description></long-description>
        <tag line="169" name="package" description="xValidator"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="175" namespace="global" package="Default">
        <name>$options</name>
        <default>array('name' =&gt; null, 'field' =&gt; null)</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="180" package="xValidator">
        <name>message</name>
        <full_name>message</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="182" package="xValidator">
        <name>invalid</name>
        <full_name>invalid</full_name>
        <argument line="182">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="true" namespace="global" line="196" package="xValidator">
      <extends>\xValidator</extends>
      <name>xValidatorRegexp</name>
      <full_name>\xValidatorRegexp</full_name>
      <docblock line="192">
        <description>Generic regular expression based validator</description>
        <long-description></long-description>
        <tag line="192" name="package" description="xValidator"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="198" namespace="global" package="Default">
        <name>$regexp</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="200" package="xValidator">
        <name>invalid</name>
        <full_name>invalid</full_name>
        <argument line="200">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="215" package="xValidator">
      <extends>\xValidator</extends>
      <name>xValidatorMandatory</name>
      <full_name>\xValidatorMandatory</full_name>
      <docblock line="211">
        <description>Checks whether a value is present or not</description>
        <long-description></long-description>
        <tag line="211" name="package" description="xValidator"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="217" package="xValidator">
        <name>message</name>
        <full_name>message</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="221" package="xValidator">
        <name>invalid</name>
        <full_name>invalid</full_name>
        <argument line="221">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="231" package="xValidator">
      <extends>\xValidatorRegexp</extends>
      <name>xValidatorEmail</name>
      <full_name>\xValidatorEmail</full_name>
      <docblock line="227">
        <description>Checks whether an email pattern is correct</description>
        <long-description></long-description>
        <tag line="227" name="package" description="xValidator"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="232" namespace="global" package="Default">
        <name>$regexp</name>
        <default>'/^([^\s]+?@[^\s]+?\.[\w]{2,5}){0,1}$/'</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="233" package="xValidator">
        <name>message</name>
        <full_name>message</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="242" package="xValidator">
      <extends>\xValidatorRegexp</extends>
      <name>xValidatorUrl</name>
      <full_name>\xValidatorUrl</full_name>
      <docblock line="238">
        <description>Checks whether a url pattern is correct</description>
        <long-description></long-description>
        <tag line="238" name="package" description="xValidator"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="243" namespace="global" package="Default">
        <name>$regexp</name>
        <default>'/^(([^\s]+\.)+\w{2,4}(\/\S*)?){0,1}$/'</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="244" package="xValidator">
        <name>message</name>
        <full_name>message</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="253" package="xValidator">
      <extends>\xValidator</extends>
      <name>xValidatorMinlength</name>
      <full_name>\xValidatorMinlength</full_name>
      <docblock line="249">
        <description>Checks the minimum length of a string</description>
        <long-description></long-description>
        <tag line="249" name="package" description="xValidator"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="254" namespace="global" package="Default">
        <name>$options</name>
        <default>array('length' =&gt; 0)</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="257" package="xValidator">
        <name>message</name>
        <full_name>message</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="260" package="xValidator">
        <name>invalid</name>
        <full_name>invalid</full_name>
        <argument line="260">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="272" package="xValidator">
      <extends>\xValidator</extends>
      <name>xValidatorMaxlength</name>
      <full_name>\xValidatorMaxlength</full_name>
      <docblock line="268">
        <description>Checks the maximum length of a string</description>
        <long-description></long-description>
        <tag line="268" name="package" description="xValidator"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="273" namespace="global" package="Default">
        <name>$options</name>
        <default>array('length' =&gt; null)</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="276" package="xValidator">
        <name>message</name>
        <full_name>message</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="279" package="xValidator">
        <name>invalid</name>
        <full_name>invalid</full_name>
        <argument line="279">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="291" package="xValidator">
      <extends>\xValidatorRegexp</extends>
      <name>xValidatorInteger</name>
      <full_name>\xValidatorInteger</full_name>
      <docblock line="287">
        <description>Checks whether a value is an integer</description>
        <long-description></long-description>
        <tag line="287" name="package" description="xValidator"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="292" namespace="global" package="Default">
        <name>$regexp</name>
        <default>'/^[0-9]+$/'</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="293" package="xValidator">
        <name>message</name>
        <full_name>message</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="302" package="xValidator">
      <extends>\xValidator</extends>
      <name>xValidatorDate</name>
      <full_name>\xValidatorDate</full_name>
      <docblock line="298">
        <description>Checks whether a value is a valid date</description>
        <long-description></long-description>
        <tag line="298" name="package" description="xValidator"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="303" namespace="global" package="Default">
        <name>$options</name>
        <default>array('format' =&gt; null)</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="308" package="xValidator">
        <name>init</name>
        <full_name>init</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="317" package="xValidator">
        <name>message</name>
        <full_name>message</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="320" package="xValidator">
        <name>invalid</name>
        <full_name>invalid</full_name>
        <argument line="320">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="332" package="xValidator">
        <name>valid_date</name>
        <full_name>valid_date</full_name>
        <docblock line="326">
          <description>Tells whether the given time is valid</description>
          <long-description></long-description>
          <tag line="326" name="see" description="\http://www.php.net/manual/fr/function.strptime.php" refers="\http://www.php.net/manual/fr/function.strptime.php"/>
          <tag line="326" name="param" description="PHP strptime() return value" type="array" variable="$date_info">
            <type by_reference="false">array</type>
          </tag>
          <tag line="326" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="332">
          <name>$date_info</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="345" package="xValidator">
      <extends>\xValidator</extends>
      <name>xValidatorTime</name>
      <full_name>\xValidatorTime</full_name>
      <docblock line="341">
        <description>Checks whether a value is a valid time</description>
        <long-description></long-description>
        <tag line="341" name="package" description="xValidator"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="346" namespace="global" package="Default">
        <name>$options</name>
        <default>array('format' =&gt; null)</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="351" package="xValidator">
        <name>init</name>
        <full_name>init</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="360" package="xValidator">
        <name>message</name>
        <full_name>message</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="363" package="xValidator">
        <name>invalid</name>
        <full_name>invalid</full_name>
        <argument line="363">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="375" package="xValidator">
        <name>valid_time</name>
        <full_name>valid_time</full_name>
        <docblock line="369">
          <description>Tells whether the given time is valid</description>
          <long-description></long-description>
          <tag line="369" name="see" description="\http://www.php.net/manual/fr/function.strptime.php" refers="\http://www.php.net/manual/fr/function.strptime.php"/>
          <tag line="369" name="param" description="PHP strptime() return value" type="array" variable="$date_info">
            <type by_reference="false">array</type>
          </tag>
          <tag line="369" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="375">
          <name>$date_info</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="388" package="xValidator">
      <extends>\xValidator</extends>
      <name>xValidatorDatetime</name>
      <full_name>\xValidatorDatetime</full_name>
      <docblock line="384">
        <description>Checks whether a value is a valid datetime</description>
        <long-description></long-description>
        <tag line="384" name="package" description="xValidator"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="389" namespace="global" package="Default">
        <name>$options</name>
        <default>array('format' =&gt; null)</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="394" package="xValidator">
        <name>init</name>
        <full_name>init</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="403" package="xValidator">
        <name>message</name>
        <full_name>message</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="406" package="xValidator">
        <name>invalid</name>
        <full_name>invalid</full_name>
        <argument line="406">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="421" package="xValidator">
      <extends>\xValidator</extends>
      <name>xValidatorMinvalue</name>
      <full_name>\xValidatorMinvalue</full_name>
      <docblock line="417">
        <description>Checks whether an integer value is equal or greater than a given value</description>
        <long-description></long-description>
        <tag line="417" name="package" description="xValidator"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="422" namespace="global" package="Default">
        <name>$options</name>
        <default>array('value' =&gt; null)</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="425" package="xValidator">
        <name>message</name>
        <full_name>message</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="428" package="xValidator">
        <name>invalid</name>
        <full_name>invalid</full_name>
        <argument line="428">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="440" package="xValidator">
      <extends>\xValidator</extends>
      <name>xValidatorMaxvalue</name>
      <full_name>\xValidatorMaxvalue</full_name>
      <docblock line="436">
        <description>Checks whether an integer value is equal or less than a given value</description>
        <long-description></long-description>
        <tag line="436" name="package" description="xValidator"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="441" namespace="global" package="Default">
        <name>$options</name>
        <default>array('value' =&gt; null)</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="444" package="xValidator">
        <name>message</name>
        <full_name>message</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="447" package="xValidator">
        <name>invalid</name>
        <full_name>invalid</full_name>
        <argument line="447">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="459" package="xValidator">
      <extends>\xValidator</extends>
      <name>xValidatorConfirm</name>
      <full_name>\xValidatorConfirm</full_name>
      <docblock line="455">
        <description>Checks whether two fields values are identical</description>
        <long-description></long-description>
        <tag line="455" name="package" description="xValidator"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="460" namespace="global" package="Default">
        <name>$options</name>
        <default>array('match' =&gt; null, 'label' =&gt; null)</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="464" package="xValidator">
        <name>message</name>
        <full_name>message</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="467" package="xValidator">
        <name>invalid</name>
        <full_name>invalid</full_name>
        <argument line="467">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="479" package="xValidator">
      <extends>\xValidator</extends>
      <name>xValidatorChecked</name>
      <full_name>\xValidatorChecked</full_name>
      <docblock line="475">
        <description>Checks whether a checkbox is checked</description>
        <long-description></long-description>
        <tag line="475" name="package" description="xValidator"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="480" package="xValidator">
        <name>message</name>
        <full_name>message</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="483" package="xValidator">
        <name>invalid</name>
        <full_name>invalid</full_name>
        <argument line="483">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="493" package="xValidator">
      <extends>\xValidator</extends>
      <name>xValidatorUnique</name>
      <full_name>\xValidatorUnique</full_name>
      <docblock line="489">
        <description>Checks whether a value does not already exists in a table row</description>
        <long-description></long-description>
        <tag line="489" name="package" description="xValidator"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="494" namespace="global" package="Default">
        <name>$options</name>
        <default>array('model' =&gt; null, 'field' =&gt; null)</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="498" package="xValidator">
        <name>message</name>
        <full_name>message</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="501" package="xValidator">
        <name>invalid</name>
        <full_name>invalid</full_name>
        <argument line="501">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib/Data/Validator.php</error>
      <error line="124" code="50010">No DocBlock was found for method __construct()</error>
      <error line="133" code="50010">No DocBlock was found for method init()</error>
      <error line="156" code="50010">No DocBlock was found for method valid()</error>
      <error line="175" code="50018">No DocBlock was found for property $options</error>
      <error line="180" code="50010">No DocBlock was found for method message()</error>
      <error line="182" code="50010">No DocBlock was found for method invalid()</error>
      <error line="198" code="50018">No DocBlock was found for property $regexp</error>
      <error line="200" code="50010">No DocBlock was found for method invalid()</error>
      <error line="217" code="50010">No DocBlock was found for method message()</error>
      <error line="221" code="50010">No DocBlock was found for method invalid()</error>
      <error line="232" code="50018">No DocBlock was found for property $regexp</error>
      <error line="233" code="50010">No DocBlock was found for method message()</error>
      <error line="243" code="50018">No DocBlock was found for property $regexp</error>
      <error line="244" code="50010">No DocBlock was found for method message()</error>
      <error line="254" code="50018">No DocBlock was found for property $options</error>
      <error line="257" code="50010">No DocBlock was found for method message()</error>
      <error line="260" code="50010">No DocBlock was found for method invalid()</error>
      <error line="273" code="50018">No DocBlock was found for property $options</error>
      <error line="276" code="50010">No DocBlock was found for method message()</error>
      <error line="279" code="50010">No DocBlock was found for method invalid()</error>
      <error line="292" code="50018">No DocBlock was found for property $regexp</error>
      <error line="293" code="50010">No DocBlock was found for method message()</error>
      <error line="303" code="50018">No DocBlock was found for property $options</error>
      <error line="308" code="50010">No DocBlock was found for method init()</error>
      <error line="317" code="50010">No DocBlock was found for method message()</error>
      <error line="320" code="50010">No DocBlock was found for method invalid()</error>
      <error line="346" code="50018">No DocBlock was found for property $options</error>
      <error line="351" code="50010">No DocBlock was found for method init()</error>
      <error line="360" code="50010">No DocBlock was found for method message()</error>
      <error line="363" code="50010">No DocBlock was found for method invalid()</error>
      <error line="389" code="50018">No DocBlock was found for property $options</error>
      <error line="394" code="50010">No DocBlock was found for method init()</error>
      <error line="403" code="50010">No DocBlock was found for method message()</error>
      <error line="406" code="50010">No DocBlock was found for method invalid()</error>
      <error line="422" code="50018">No DocBlock was found for property $options</error>
      <error line="425" code="50010">No DocBlock was found for method message()</error>
      <error line="428" code="50010">No DocBlock was found for method invalid()</error>
      <error line="441" code="50018">No DocBlock was found for property $options</error>
      <error line="444" code="50010">No DocBlock was found for method message()</error>
      <error line="447" code="50010">No DocBlock was found for method invalid()</error>
      <error line="460" code="50018">No DocBlock was found for property $options</error>
      <error line="464" code="50010">No DocBlock was found for method message()</error>
      <error line="467" code="50010">No DocBlock was found for method invalid()</error>
      <error line="480" code="50010">No DocBlock was found for method message()</error>
      <error line="483" code="50010">No DocBlock was found for method invalid()</error>
      <error line="494" code="50018">No DocBlock was found for property $options</error>
      <error line="498" code="50010">No DocBlock was found for method message()</error>
      <error line="501" code="50010">No DocBlock was found for method invalid()</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="lib/Data/ModelPostgres.php" hash="96d0177086283ccd77799ac4bb1f3e37" package="Default">
    <class final="false" abstract="true" namespace="global" line="16" package="xFreemwork">
      <extends>\xModel</extends>
      <name>xModelPostgres</name>
      <full_name>\xModelPostgres</full_name>
      <docblock line="11">
        <description>Model class.</description>
        <long-description>&lt;p&gt;Deals with database transactions.&lt;/p&gt;</long-description>
        <tag line="11" name="package" description="xFreemwork"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="22" package="xFreemwork">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
          <tag line="18" name="see" description="\xModel::get()" refers="\xModel::get()"/>
          <tag line="18" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="22">
          <name>$rownum</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="44" package="xFreemwork">
        <name>post</name>
        <full_name>post</full_name>
        <docblock line="40">
          <description></description>
          <long-description></long-description>
          <tag line="40" name="see" description="\xModel::post()" refers="\xModel::post()"/>
          <tag line="40" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="78" package="xFreemwork">
        <name>put</name>
        <full_name>put</full_name>
        <docblock line="74">
          <description></description>
          <long-description></long-description>
          <tag line="74" name="see" description="\xModel::put()" refers="\xModel::put()"/>
          <tag line="74" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="111" package="xFreemwork">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="107">
          <description></description>
          <long-description></long-description>
          <tag line="107" name="see" description="\xModel::delete()" refers="\xModel::delete()"/>
          <tag line="107" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="125" package="xFreemwork">
        <name>count</name>
        <full_name>count</full_name>
        <docblock line="121">
          <description></description>
          <long-description></long-description>
          <tag line="121" name="see" description="\xModel::count()" refers="\xModel::count()"/>
          <tag line="121" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="140" package="xFreemwork">
        <name>escape</name>
        <full_name>escape</full_name>
        <docblock line="136">
          <description></description>
          <long-description></long-description>
          <tag line="136" name="see" description="\xModel::escape()" refers="\xModel::escape()"/>
          <tag line="136" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="140">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="140">
          <name>$field</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="148" package="xFreemwork">
        <name>sql_constants</name>
        <full_name>sql_constants</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="161" package="xFreemwork">
        <name>sql_select</name>
        <full_name>sql_select</full_name>
        <docblock line="157">
          <description></description>
          <long-description></long-description>
          <tag line="157" name="see" description="\xModel::sql_select()" refers="\xModel::sql_select()"/>
          <tag line="157" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="193" package="xFreemwork">
        <name>sql_from</name>
        <full_name>sql_from</full_name>
        <docblock line="189">
          <description></description>
          <long-description></long-description>
          <tag line="189" name="see" description="\xModel::sql_from()" refers="\xModel::sql_from()"/>
          <tag line="189" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="201" package="xFreemwork">
        <name>sql_where</name>
        <full_name>sql_where</full_name>
        <docblock line="197">
          <description></description>
          <long-description></long-description>
          <tag line="197" name="see" description="\xModel::sql_where()" refers="\xModel::sql_where()"/>
          <tag line="197" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="201">
          <name>$primary_only</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="257" package="xFreemwork">
        <name>sql_join</name>
        <full_name>sql_join</full_name>
        <docblock line="253">
          <description></description>
          <long-description></long-description>
          <tag line="253" name="see" description="\xModel::sql_join()" refers="\xModel::sql_join()"/>
          <tag line="253" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="266" package="xFreemwork">
        <name>sql_order</name>
        <full_name>sql_order</full_name>
        <docblock line="262">
          <description></description>
          <long-description></long-description>
          <tag line="262" name="see" description="\xModel::sql_order()" refers="\xModel::sql_order()"/>
          <tag line="262" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="281" package="xFreemwork">
        <name>sql_group</name>
        <full_name>sql_group</full_name>
        <docblock line="277">
          <description></description>
          <long-description></long-description>
          <tag line="277" name="see" description="\xModel::sql_group()" refers="\xModel::sql_group()"/>
          <tag line="277" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="295" package="xFreemwork">
        <name>sql_limit</name>
        <full_name>sql_limit</full_name>
        <docblock line="291">
          <description></description>
          <long-description></long-description>
          <tag line="291" name="see" description="\xModel::sql_limit()" refers="\xModel::sql_limit()"/>
          <tag line="291" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="306" package="xFreemwork">
        <name>query</name>
        <full_name>query</full_name>
        <docblock line="302">
          <description></description>
          <long-description></long-description>
          <tag line="302" name="see" description="\xModel::query()" refers="\xModel::query()"/>
          <tag line="302" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="306">
          <name>$sql</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="344" package="xFreemwork">
        <name>q</name>
        <full_name>q</full_name>
        <docblock line="339">
          <description>Executes the given sql and returns the raw result resource, or throws an exception on error.</description>
          <long-description></long-description>
          <tag line="339" name="see" description="\www.php.net/manual/function.mysql-query.php" refers="\www.php.net/manual/function.mysql-query.php"/>
          <tag line="339" name="return" description="" type="resource">
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
        <argument line="344">
          <name>$sql</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="149">to be completed with all mysql constants</todo>
      <todo line="172">the regexp to be able to replace some and somefield without trouble</todo>
      <todo line="328">mysql_insert_id($db),</todo>
      <todo line="329">mysql_insert_id($db),</todo>
      <todo line="331">mysql_info($db),</todo>
    </markers>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib/Data/ModelPostgres.php</error>
      <error line="18" code="50012">No short description for method get()</error>
      <error line="18" code="50015">Argument $rownum is missing from the Docblock of get()</error>
      <error line="40" code="50012">No short description for method post()</error>
      <error line="74" code="50012">No short description for method put()</error>
      <error line="107" code="50012">No short description for method delete()</error>
      <error line="121" code="50012">No short description for method count()</error>
      <error line="136" code="50012">No short description for method escape()</error>
      <error line="136" code="50015">Argument $value is missing from the Docblock of escape()</error>
      <error line="136" code="50015">Argument $field is missing from the Docblock of escape()</error>
      <error line="148" code="50010">No DocBlock was found for method sql_constants()</error>
      <error line="157" code="50012">No short description for method sql_select()</error>
      <error line="189" code="50012">No short description for method sql_from()</error>
      <error line="197" code="50012">No short description for method sql_where()</error>
      <error line="197" code="50015">Argument $primary_only is missing from the Docblock of sql_where()</error>
      <error line="253" code="50012">No short description for method sql_join()</error>
      <error line="262" code="50012">No short description for method sql_order()</error>
      <error line="277" code="50012">No short description for method sql_group()</error>
      <error line="291" code="50012">No short description for method sql_limit()</error>
      <error line="302" code="50012">No short description for method query()</error>
      <error line="302" code="50015">Argument $sql is missing from the Docblock of query()</error>
      <error line="339" code="50015">Argument $sql is missing from the Docblock of q()</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="lib/Data/ModelMysql.php" hash="e3eedd76b26e149db048bd7e223c1460" package="Default">
    <class final="false" abstract="true" namespace="global" line="16" package="xFreemwork">
      <extends>\xModel</extends>
      <name>xModelMysql</name>
      <full_name>\xModelMysql</full_name>
      <docblock line="11">
        <description>Model class.</description>
        <long-description>&lt;p&gt;Deals with database transactions.&lt;/p&gt;</long-description>
        <tag line="11" name="package" description="xFreemwork"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="22" package="xFreemwork">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
          <tag line="18" name="see" description="\xModel::get()" refers="\xModel::get()"/>
          <tag line="18" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="22">
          <name>$rownum</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="44" package="xFreemwork">
        <name>post</name>
        <full_name>post</full_name>
        <docblock line="40">
          <description></description>
          <long-description></long-description>
          <tag line="40" name="see" description="\xModel::post()" refers="\xModel::post()"/>
          <tag line="40" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="83" package="xFreemwork">
        <name>put</name>
        <full_name>put</full_name>
        <docblock line="79">
          <description></description>
          <long-description></long-description>
          <tag line="79" name="see" description="\xModel::put()" refers="\xModel::put()"/>
          <tag line="79" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="121" package="xFreemwork">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="117">
          <description></description>
          <long-description></long-description>
          <tag line="117" name="see" description="\xModel::delete()" refers="\xModel::delete()"/>
          <tag line="117" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="135" package="xFreemwork">
        <name>count</name>
        <full_name>count</full_name>
        <docblock line="131">
          <description></description>
          <long-description></long-description>
          <tag line="131" name="see" description="\xModel::count()" refers="\xModel::count()"/>
          <tag line="131" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="158" package="xFreemwork">
        <name>escape</name>
        <full_name>escape</full_name>
        <docblock line="151">
          <description></description>
          <long-description></long-description>
          <tag line="151" name="param" description="The value to escape." type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="151" name="param" description="The model field name related to the given value." type="string" variable="$field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="151" name="param" description="True to allow SQL constants." type="bool" variable="$allow_constants">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="151" name="see" description="\xModel::escape()" refers="\xModel::escape()"/>
          <tag line="151" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="158">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="158">
          <name>$field</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="158">
          <name>$allow_constants</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="170" package="xFreemwork">
        <name>sql_constants</name>
        <full_name>sql_constants</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="183" package="xFreemwork">
        <name>sql_select</name>
        <full_name>sql_select</full_name>
        <docblock line="179">
          <description></description>
          <long-description></long-description>
          <tag line="179" name="see" description="\xModel::sql_select()" refers="\xModel::sql_select()"/>
          <tag line="179" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="254" package="xFreemwork">
        <name>sql_from</name>
        <full_name>sql_from</full_name>
        <docblock line="250">
          <description></description>
          <long-description></long-description>
          <tag line="250" name="see" description="\xModel::sql_from()" refers="\xModel::sql_from()"/>
          <tag line="250" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="264" package="xFreemwork">
        <name>sql_where</name>
        <full_name>sql_where</full_name>
        <docblock line="258">
          <description></description>
          <long-description></long-description>
          <tag line="258" name="see" description="\xModel::sql_where()" refers="\xModel::sql_where()"/>
          <tag line="258" name="param" description="True to consider primary key field(s) only" type="bool" variable="$primary_only">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="258" name="param" description="True to consider local fields only (ignoring foreign tables fields)" type="bool" variable="$local_only">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="258" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="264">
          <name>$primary_only</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="264">
          <name>$local_only</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="285" package="xFreemwork">
        <name>sql_where_from_template</name>
        <full_name>sql_where_from_template</full_name>
        <argument line="285">
          <name>$primary_only</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="285">
          <name>$local_only</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="300" package="xFreemwork">
        <name>sql_join</name>
        <full_name>sql_join</full_name>
        <docblock line="296">
          <description></description>
          <long-description></long-description>
          <tag line="296" name="see" description="\xModel::sql_join()" refers="\xModel::sql_join()"/>
          <tag line="296" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="309" package="xFreemwork">
        <name>sql_order</name>
        <full_name>sql_order</full_name>
        <docblock line="304">
          <description>TODO: allow to order_by foreign fields</description>
          <long-description></long-description>
          <tag line="304" name="see" description="\xModel::sql_order()" refers="\xModel::sql_order()"/>
          <tag line="304" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="331" package="xFreemwork">
        <name>sql_group</name>
        <full_name>sql_group</full_name>
        <docblock line="326">
          <description>TODO: allow to group_by foreign fields</description>
          <long-description></long-description>
          <tag line="326" name="see" description="\xModel::sql_group()" refers="\xModel::sql_group()"/>
          <tag line="326" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="351" package="xFreemwork">
        <name>sql_limit</name>
        <full_name>sql_limit</full_name>
        <docblock line="347">
          <description></description>
          <long-description></long-description>
          <tag line="347" name="see" description="\xModel::sql_limit()" refers="\xModel::sql_limit()"/>
          <tag line="347" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="362" package="xFreemwork">
        <name>query</name>
        <full_name>query</full_name>
        <docblock line="358">
          <description></description>
          <long-description></long-description>
          <tag line="358" name="see" description="\xModel::query()" refers="\xModel::query()"/>
          <tag line="358" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="362">
          <name>$sql</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="402" package="xFreemwork">
        <name>q</name>
        <full_name>q</full_name>
        <docblock line="397">
          <description>Executes the given sql and returns the raw result resource, or throws an exception on error.</description>
          <long-description></long-description>
          <tag line="397" name="see" description="\www.php.net/manual/function.mysql-query.php" refers="\www.php.net/manual/function.mysql-query.php"/>
          <tag line="397" name="return" description="" type="resource">
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
        <argument line="402">
          <name>$sql</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="171">to be completed with all mysql constants</todo>
    </markers>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib/Data/ModelMysql.php</error>
      <error line="18" code="50012">No short description for method get()</error>
      <error line="18" code="50015">Argument $rownum is missing from the Docblock of get()</error>
      <error line="40" code="50012">No short description for method post()</error>
      <error line="79" code="50012">No short description for method put()</error>
      <error line="117" code="50012">No short description for method delete()</error>
      <error line="131" code="50012">No short description for method count()</error>
      <error line="151" code="50012">No short description for method escape()</error>
      <error line="170" code="50010">No DocBlock was found for method sql_constants()</error>
      <error line="179" code="50012">No short description for method sql_select()</error>
      <error line="250" code="50012">No short description for method sql_from()</error>
      <error line="258" code="50012">No short description for method sql_where()</error>
      <error line="285" code="50010">No DocBlock was found for method sql_where_from_template()</error>
      <error line="296" code="50012">No short description for method sql_join()</error>
      <error line="347" code="50012">No short description for method sql_limit()</error>
      <error line="358" code="50012">No short description for method query()</error>
      <error line="358" code="50015">Argument $sql is missing from the Docblock of query()</error>
      <error line="397" code="50015">Argument $sql is missing from the Docblock of q()</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="lib/Front/JsFront.php" hash="d477f65a887f862bd5151b0649e9d644" package="Default">
    <class final="false" abstract="false" namespace="global" line="19" package="xFreemwork">
      <extends>\xFront</extends>
      <name>xJsFront</name>
      <full_name>\xJsFront</full_name>
      <docblock line="11">
        <description>Front controller for fetching views js files and js context object.</description>
        <long-description>&lt;p&gt;Returns the specified js file content.&lt;/p&gt;</long-description>
        <tag line="11" name="todo" description="Be able to hanlde for multiple files request (comma-separated),&#10;      returning a unique concatenated and minified stream"/>
        <tag line="11" name="package" description="xFreemwork"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="21" namespace="global" package="Default">
        <name>$allowed_mime_types</name>
        <default>array('js' =&gt; 'application/x-javascript', 'css' =&gt; 'text/css')</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="26" package="xFreemwork">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="26">
          <name>$params</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="30" package="xFreemwork">
        <name>handle_error</name>
        <full_name>handle_error</full_name>
        <argument line="30">
          <name>$exception</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="34" package="xFreemwork">
        <name>set_header</name>
        <full_name>set_header</full_name>
        <argument line="34">
          <name>$extension</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="39" package="xFreemwork">
        <name>get</name>
        <full_name>get</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="60" package="xFreemwork">
        <name>get_context_js</name>
        <full_name>get_context_js</full_name>
        <docblock line="55">
          <description>Return partial xContext state for javascript usage.</description>
          <long-description>&lt;p&gt;Careful: do not put sensible information here because it is world readable.&lt;/p&gt;</long-description>
          <tag line="55" name="return" description="Javascript context object" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib/Front/JsFront.php</error>
      <error line="21" code="50018">No DocBlock was found for property $allowed_mime_types</error>
      <error line="26" code="50010">No DocBlock was found for method __construct()</error>
      <error line="30" code="50010">No DocBlock was found for method handle_error()</error>
      <error line="34" code="50010">No DocBlock was found for method set_header()</error>
      <error line="39" code="50010">No DocBlock was found for method get()</error>
    </parse_markers>
    <source>eJx9VW1v2zYQ/u5fcTMMSA5iKe36yV68YFlTrOiKYVs/FYXASLRNhyI1koqVpf7vuyMl+X0CLEv39jx3vDv99HO1qgbp1QCuIM7H8PbmzVv4lZWCK7jXpmKO1Q0qSf/pt/v3n/96T49/r4QFKR4NMy/gH3OuLC+gVgU34FYcPnz+Ah/++ATPPyY3nf6afFmec2vFo+TAHKycq6ZputlskqWqE22WaWts02UlJ+idrFwpicPVVTpArp7Mg9HKQY43o6VEzIXGH3f5SqglPAu+sbC2sBCSW2CqoBey5o0D/bjmuUsozJ/c1UZZz9hWPBcLwYvOMTioYHnndKHhFyRNzJ2GFVOy4B63rKUTFYoDnOH/1Nw6LKguSzaxvGKGOV6Mff7hMh6YuDIsmkAHQsvRTJGpp1wKFfhYZzgrPYuK5U9syaF5MJyXG22eQllyyayF5qMNhcE0uSosmdHr62BAoM/MwIhJqTe8yEpR8sy9VEj4Fpgx7CUetOQgWtsIbucQsarC42BOaJU2kzV7ZjY3onLR9c42t60xFTelN68bzwLoolY5+UOWYYaYSp27eEQlKQlZ1VKOkWAXDhVY8un0jDVGJIvtUVw8iELyjBujTTziTc4rkh8ENQKrsNNN5kvufsc2xFLGF8Ja7rIVZ9jPFBTLaY+CjqiCmMHdyOE4TOanhf26c/w26/3EAmLvO4Y2/vA+NNqEvKbw6rXb4QViSD3e5+HjBQqhTl8j6v/o2+1t1LZ8gue570JXix0dYu8f+N5xj2cHvm09AyjyyVqcbG3jI9PQ6DvZdlc/P2O30NwH5+l09MhoWNwqGaZ+hNPXs4ltT+RrS8FQM9wh7YrfNXhW6SrmTSV1weMoia4Dh/Ee5X48eud+PLIn/mLji4d9Jgh6CpWF2dqxuT4HMj7sjx86kzGuJqM3oPgGmvdd/8bDL4rVbqWN+BdhKInhNby7eXMchjSIIqxD5iHXCwEf6DCUdrjQcIn7aO/2Uwppnx+K2dGgedS+LVSPfdDPfpHT1W1hGn0nmOwbAvce7kK/YXetCDUNbdK53uO6WNRyCriciX1VoxvRoi0tFPqWLGwJbjg88pzVFhWOvlq4PWWBDcoK2ul9yLvQsrR1aT9/3EEffkBa+/RkOg+mYW/qLH33tMowLYMjPIM0hQdMrv0iLhXQmXrWvU/LZTig3d3QtMD37/C6nQ2apKODwv75WJnQSNVGoFE0TI5GDeXJMNq3roxup/LQupUfWeP/Qiz38TvRCY0gT/ySPuPQKv7XLTG80tghanlCL5hN5t5uMu8Nz/JNpD7H2YsvEUBdIvkzlxeh0QJvZHIE6s90H84LToBImmBvGsXK0/qTdjLv1PHYYwy7edr+ByabJC0=</source>
  </file>
  <file path="lib/Front/RssFront.php" hash="8ab86818d2e4b4be3d9062cd9ff621f3" package="Default">
    <class final="false" abstract="false" namespace="global" line="15" package="xFreemwork">
      <extends>\xApiFront</extends>
      <name>xRssFront</name>
      <full_name>\xRssFront</full_name>
      <docblock line="11">
        <description>Front controller class for RSS feed.</description>
        <long-description></long-description>
        <tag line="11" name="package" description="xFreemwork"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="17" namespace="global" package="Default">
        <name>$xml_root_node</name>
        <default>'rss version="2.0"'</default>
      </property>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib/Front/RssFront.php</error>
      <error line="17" code="50018">No DocBlock was found for property $xml_root_node</error>
    </parse_markers>
    <source>eJw1Tm1LwzAQ/p5fcQxhWrSt9Zs6VOY2hDFk1c8jS29tWJqES/oi4n83bfU+HMfzds/jk60sSyIGEVyKK8jS2wxeeS1Rw9KQ5Z43fSAHfvu2XO3y1XB+VNKBkkfi9AXjKVA7LKDRBRL4CmGz+4TN+xbauzj9568HLxcCnZNHhcA9VN7b+yTpui4udRMbKpM/sUtKq26CO658rYYOUZSw0HUssyajPYiwyCgVfgrFnYOTIdjnOZwQi3jQPVsuzrxE6NeEWHeGzmPOJO/3zk1J2HvURUBerJyQb8YgTMsJLvpaHcgYf9CmQFjAnIK5RXLS6MUsi9PZ/IGxH/YL8WBoHw==</source>
  </file>
  <file path="lib/Front/Front.php" hash="c83a31e7f5a105b04b0b95da6b010091" package="Default">
    <class final="false" abstract="true" namespace="global" line="18" package="xFreemwork">
      <extends>\xRestElement</extends>
      <name>xFront</name>
      <full_name>\xFront</full_name>
      <docblock line="11">
        <description>Front controller base class.</description>
        <long-description>&lt;p&gt;Responsibilities
- decorate controllers&lt;/p&gt;</long-description>
        <tag line="11" name="package" description="xFreemwork"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="24" namespace="global" package="Default">
        <name>$http</name>
        <default>array('method' =&gt; null)</default>
        <docblock line="20">
          <description>HTTP Request information.</description>
          <long-description></long-description>
          <tag line="20" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="36" namespace="global" package="Default">
        <name>$method_mapping</name>
        <default>array('GET' =&gt; 'get', 'POST' =&gt; 'post', 'PUT' =&gt; 'put', 'DELETE' =&gt; 'delete')</default>
        <docblock line="28">
          <description>'HTTP Request Method' =&gt; 'xFront Method' mapping.</description>
          <long-description>&lt;p&gt;Since REST specification is subject to interpretation
when it comes to HTTP Method to CRUD mapping,
this mapping array enables to define which
xFront method should be called for each HTTP Request Method.&lt;/p&gt;</long-description>
          <tag line="28" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="48" package="xFreemwork">
        <name>get_request_body</name>
        <full_name>get_request_body</full_name>
        <docblock line="43">
          <description>Returns HTTP request body contents
FIXME: This might cause problems when reading concurrent request (?)</description>
          <long-description></long-description>
          <tag line="43" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="57" package="xFreemwork">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="52">
          <description>Sets up:
- sessionned i18n
- HTTP information (defaults to GET)</description>
          <long-description></long-description>
        </docblock>
        <argument line="57">
          <name>$params</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="72" package="xFreemwork">
        <name>setup_i18n</name>
        <full_name>setup_i18n</full_name>
        <docblock line="68">
          <description>Sets up the Gettext locale and domain according the selected/guessed language.</description>
          <long-description></long-description>
          <tag line="68" name="see" description="\xBootstrap::setup_i18n()" refers="\xBootstrap::setup_i18n()"/>
        </docblock>
        <argument line="72">
          <name>$lang</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="122" package="xFreemwork">
        <name>handle</name>
        <full_name>handle</full_name>
        <docblock line="115">
          <description>Entry point for Front controller.</description>
          <long-description>&lt;p&gt;This method call the method related
to the HTTP status.
This is part of the REST orientation of the framework.&lt;/p&gt;</long-description>
          <tag line="115" name="return" description="Response contents." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="132" package="xFreemwork">
        <name>handle_error</name>
        <full_name>handle_error</full_name>
        <docblock line="128">
          <description>Returns an error message in case of an error.</description>
          <long-description></long-description>
          <tag line="128" name="return" description="The error message to output." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="132">
          <name>$exception</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="145" package="xFreemwork">
        <name>load</name>
        <full_name>load</full_name>
        <docblock line="134">
          <description>Loads and returns the specified front element.</description>
          <long-description>&lt;p&gt;For example, the following code will
load the fronts/web.php file.
and return an instance of the WebFront class:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;xFront::load('web');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="134" name="param" description="The front to load." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="134" name="return" description="" type="\xFront">
            <type by_reference="false">\xFront</type>
          </tag>
        </docblock>
        <argument line="145">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="145">
          <name>$params</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib/Front/Front.php</error>
      <error line="52" code="50015">Argument $params is missing from the Docblock of __construct()</error>
      <error line="68" code="50015">Argument $lang is missing from the Docblock of setup_i18n()</error>
      <error line="128" code="50015">Argument $exception is missing from the Docblock of handle_error()</error>
      <error line="134" code="50015">Argument $params is missing from the Docblock of load()</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="lib/Front/WebFront.php" hash="1b250e5cbe9b976b7c38568e4cdb05f8" package="Default">
    <class final="false" abstract="false" namespace="global" line="16" package="xFreemwork">
      <extends>\xFront</extends>
      <name>xWebFront</name>
      <full_name>\xWebFront</full_name>
      <docblock line="11">
        <description>Front controller class, web flavour.</description>
        <long-description>&lt;p&gt;Deals with controller output decoration for producing a web page.&lt;/p&gt;</long-description>
        <tag line="11" name="package" description="xFreemwork"/>
      </docblock>
      <property final="false" static="true" visibility="public" line="22" namespace="global" package="Default">
        <name>$history</name>
        <default></default>
        <docblock line="18">
          <description>The url history.</description>
          <long-description></long-description>
          <tag line="18" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="24" package="xFreemwork">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="24">
          <name>$params</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="31" package="xFreemwork">
        <name>handle_error</name>
        <full_name>handle_error</full_name>
        <argument line="31">
          <name>$exception</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="43" package="xFreemwork">
        <name>get</name>
        <full_name>get</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="55" package="xFreemwork">
        <name>post</name>
        <full_name>post</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="63" package="xFreemwork">
        <name>setup_history</name>
        <full_name>setup_history</full_name>
        <docblock line="59">
          <description>Setups the url history.</description>
          <long-description></long-description>
          <tag line="59" name="see" description="\xWebFront::history" refers="\xWebFront::history"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="75" package="xFreemwork">
        <name>previous_url</name>
        <full_name>previous_url</full_name>
        <docblock line="71">
          <description>Return the last called page url if applicable, otherwise returns the site root page</description>
          <long-description></long-description>
          <tag line="71" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="92" package="xFreemwork">
        <name>messages</name>
        <full_name>messages</full_name>
        <docblock line="79">
          <description>Add/retrieve messages in the web messages stack.</description>
          <long-description></long-description>
          <tag line="79" name="param" description="Depending on the expected result:&#10;    - The message to display&#10;    - If false, the messages stack is returned as an array.&#10;    - If not defined or null, the messages stack is returned as an array and the stack is reset." type="string|false|null" variable="$text">
            <type by_reference="false">string</type>
            <type by_reference="false">false</type>
            <type by_reference="false">null</type>
          </tag>
          <tag line="79" name="param" description="The type of the message to add to the stack (ignored if $text is not a string).&#10;    - The value depends on the CSS you're using (eg. bootstrap.css: http://twitter.github.com/bootstrap/components.html#alerts),&#10;    - If null, the view that parses and displays messages should decide of a $type." type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="79" name="return" description="Depending on the given arguments:&#10;    - Null if $text is given,&#10;    - An array containing the stored messages if $text is empty." type="array|null">
            <type by_reference="false">array</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="92">
          <name>$text</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="92">
          <name>$type</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib/Front/WebFront.php</error>
      <error line="24" code="50010">No DocBlock was found for method __construct()</error>
      <error line="31" code="50010">No DocBlock was found for method handle_error()</error>
      <error line="43" code="50010">No DocBlock was found for method get()</error>
      <error line="55" code="50010">No DocBlock was found for method post()</error>
    </parse_markers>
    <source>eJy1Vm1v2zYQ/p5fcc2MSQ5sK+2+DMqcpEhfUKDIhrrZPgSBQUu0TFQWBZKynTX577sjZZmS7SIbMH2wJfK5u+deeLzfrspFeRKdncAZhEkf3py/fgPv2FLwAm6kKplh1QY3af/zp5v3t5P39Pp1ITTkYqaYegT7mvBC8xSqIuUKzILDx9s7+PjHZ1j9Mjrf7g9IliUJ11rMcg7MwMKYMo6i9Xo9yopqJFUW1WAdZWU+ROnRwixz4nB2Fp0gV0vmg5KFgQR/lMxztJnkTOsBrPkM5jlbyUqNCPeOs1zDWpiFD5aVKSsDKU+kYkbIAuZSQalkWiWiyIBZPSXLuFVyXbLkG37A5oPifLmW6pslY23C5i8+c3T4xvAi1QSjz+8nJ4CPZUwPxY1DpXLA8BmpHkfb9esVU8CUYo/1SmT/tUFyCfRq+IXTN6+KxHKeTtElbVSVmLBXMsWWGsZQVHneR9tQP2IO4StNIZfFVKRhvw/bL9SvTNi/aLA9g6aGl5qbqpzWVv19NMILE8cHLHuoBWdYBeHpDQYB4cOvjyWPwWB0IkrlBSQLptDG+O7rh+Gvp7Xkc8e7BSvSnE+5UlKFPb5JeEnrvmsVlgkScKQdjftgs8Qs5jx48P2yWqZeBYxhY+lt0Jsers9FNry0qOGlB7tqVNDzIpEYArsY7IW1SdHmzog8jm3Cp0uuMt52YuBqIWwZDzY7IwGML1/EZtBRwWxsrXiQ8jmrchN0ME2kLWoX+AbV3y8Yl6vwSCYzTJKftt6O37RgS44Rue4m0fP14aJVy3vQJt+HFJ9+PwZ/jrrw04tDFLel4r7iOJcsDbuig3aO/Qil2ENRh8tod+M+oBMRPNwHiTsswQNiPe2YTJbn+07XifSLPIrgC6f+qwHTse1x1IvrPof92XPLaQBiseOUs0eUI5f/FHxdOxu41cj9BQNH3XfF7Qwvl9z6eqi+fcig7SEt+U1GCWyetcDhiiql7pSUC4+ttJaI13wn1NW0DcjBHqw53/XyOK73Ww25IdDpkN12e92bTt5PJp9+v8VUUXYbvfRRi9mKfRHuUPlons/x5NcYRPz8Ml0XHaZtPffnD/D0BPuLr5qsJpWiS2CKMcS7pNU7XMKxKy/E3IRtJYPD8j9wyGnTNA7s6TofwOvzo5n+gtlRhc003tA4JuARwuKn+9ymHj1nZYmKGU4hA5AIVGuhOSgr6GpEC4MLUhor11SJg+DVjFWaHbqtd0Wq+ErISjtPvRKpVVx7xdaE+vUDXMGRjdhv+TOmeaXEsRC8TdMI7SjBVxyWeN+jDxqECwoNN80a0k6+7U6B7TC1e09zHJ74E00UOEiV2FxoOJJOCd+UPKGeorjGayTeaqBnaCed2gQYCanQZd5MNzXm0xysgYHV1yZEU6WLE1pg1NFcPYz2VBSSBrm5ICAOcUT23yi0vdLme4fC0304INYtg+MMyLlvg1xkaUp/O1WhyAqp0BqWW4+yRsqJLau19Uf7MVuxvKKGXdpBsg71zWQC2AwDheWriUbIsxHMsDZREStHidbxdpI2OOsarkYZjrzVbJTIZdQAI/wqZYGnT9uh+ieG/dfo/mA/qE0UV3gP4AujY4BDm7tb6nRqL8YLWeUp3TQitdFh6DMGatQ9ODboR0oqEytOiKxaEsdOSd2SjB9LC+9wf7tNK10wTBSk3aXEpmJ3Ejw9fFmaprAOn+WtXOiExnWArItHZu4aOR67Ive36ek1VPz7UvzNwx9fHlux1tXvdZW2rsaKB34GjnyIotBTYu6o9v93hi+UOnTb/QcHu968zPj9znxLnJ6Asu2mYnobHABgHGsAvrX2fX51z34++Qf6R8Bj</source>
  </file>
  <file path="lib/Front/ModelFront.php" hash="7a7b4d85146fd21df399839546cfa3cd" package="Default">
    <class final="false" abstract="false" namespace="global" line="16" package="xFreemwork">
      <extends>\xRestFront</extends>
      <name>xModelFront</name>
      <full_name>\xModelFront</full_name>
      <docblock line="11">
        <description>Front controller class, rest flavour.</description>
        <long-description>&lt;p&gt;Deals with model output formatting.&lt;/p&gt;</long-description>
        <tag line="11" name="package" description="xFreemwork"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="18" package="xFreemwork">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="18">
          <name>$params</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="22" package="xFreemwork">
        <name>get</name>
        <full_name>get</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="27" package="xFreemwork">
        <name>post</name>
        <full_name>post</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="32" package="xFreemwork">
        <name>put</name>
        <full_name>put</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="37" package="xFreemwork">
        <name>delete</name>
        <full_name>delete</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib/Front/ModelFront.php</error>
      <error line="18" code="50010">No DocBlock was found for method __construct()</error>
      <error line="22" code="50010">No DocBlock was found for method get()</error>
      <error line="27" code="50010">No DocBlock was found for method post()</error>
      <error line="32" code="50010">No DocBlock was found for method put()</error>
      <error line="37" code="50010">No DocBlock was found for method delete()</error>
    </parse_markers>
    <source>eJytkU9r3DAQxe/+FHNYiHfZtdPk5rRpIP8opCG06amEoMgT20SWxGgUu4T97hnbm7SFFkJYHYTQe/PeT/bHz772Sb5IYAGpnsPe7oc9OFFtgxaOHXnFKvYiDvrFl+PTy++nw/G6bgKY5o4U/YLxqNEGLCHaEgm4Rji//AHnVxfwuJ/tvujLYVZpjSE0dwZBMdTMvsjzruuyysbMUZVvzCGvvFnJdFZzawaGxSJPhHWEOSNnGbRs5IyRTm1UCEsgDAz3Rj26SNlgPEFlAnQN19C6Eg24yD6Kx1GrmBtbjbYjr/SDqhD6M0JsO0cPY98YC/3XYXTqxJ7RlnL3Taqmq6ckAVmeHKNm+Qz30WpunIXbW0EMTFFzOvOKVBvgE9hozFymYLNEQMtF8Q/3/GB0raeG19wKOf0zYUYSO1EWhXGqTI9mLD9pdTjF/Nzpx9fv3CzhL2G+OhyzDn7DUCNP2pjQahlLZ/QfDu/C9kCmsPeSxC2CxPdzSCQybg3lJe7NNOtnvmEqFw==</source>
  </file>
  <file path="lib/Front/ApiFront.php" hash="3efc0488e2d7e051cba8a2b1afb0880b" package="Default">
    <class final="false" abstract="false" namespace="global" line="17" package="xFreemwork">
      <extends>\xRestFront</extends>
      <name>xApiFront</name>
      <full_name>\xApiFront</full_name>
      <docblock line="11">
        <description>Front controller class, api flavour.</description>
        <long-description>&lt;p&gt;Implements API features and session initialization.&lt;/p&gt;</long-description>
        <tag line="11" name="package" description="xFreemwork"/>
        <tag line="11" name="todo" description="Implement API Key mechanism."/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="19" package="xFreemwork">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="19">
          <name>$params</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="33" package="xFreemwork">
        <name>handle_request</name>
        <full_name>handle_request</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="37" package="xFreemwork">
        <name>get</name>
        <full_name>get</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="38" package="xFreemwork">
        <name>put</name>
        <full_name>put</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="39" package="xFreemwork">
        <name>post</name>
        <full_name>post</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="40" package="xFreemwork">
        <name>delete</name>
        <full_name>delete</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="46" package="xFreemwork">
        <name>call_method</name>
        <full_name>call_method</full_name>
        <docblock line="42">
          <description>Calls a controller method and return its response.</description>
          <long-description></long-description>
          <tag line="42" name="return" description="Controller response." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
    </class>
    <markers>
      <todo line="20">check for API key?</todo>
      <todo line="25">check this code</todo>
    </markers>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib/Front/ApiFront.php</error>
      <error line="19" code="50010">No DocBlock was found for method __construct()</error>
      <error line="33" code="50010">No DocBlock was found for method handle_request()</error>
      <error line="37" code="50010">No DocBlock was found for method get()</error>
      <error line="38" code="50010">No DocBlock was found for method put()</error>
      <error line="39" code="50010">No DocBlock was found for method post()</error>
      <error line="40" code="50010">No DocBlock was found for method delete()</error>
    </parse_markers>
    <source>eJyVVm2P2jgQ/s6vmCIkAgJCe/eJvd1uRbe91e21q3bvvlQn5HUGYq1j52ynZA/x32+cFwgBumokoiSel2eemcfmt7dpnHbCYQeGEPABvJm+fgPvWSJQwVyblDmW5bTo1+9u5zefvt74x4dYWJDi0TDzDMUjR2UxgkxFaMDFCB8//QUf7+/g+y+Tab0+8r6Mc7RWPEoE5iB2Lp2F4Xq9nqxUNtFmFVbGNlylckzek9gl0mMYDsMOYS3AfDBaOeB0M1pKyskls3YELBWwlOy7zszE290mqcQElbPw7v4WlshcZtACUxFYj0MrEEo4waT4jzl6LdyuU8af2Aoh/2AQk7U2T8VnpyO9j1mE/AOfIUEeMyVsMilAFlggf5eKEibmDlVEX76gdeWnTacDdC0zxX1SWCyoFutMxl3QS5lhiYVLUJmUA7KF6gpDePj8/vMMeIz8CZbaFBCe8PntzkYsIXhVlbYQUTBoBtgZXFdJvvXJuf9P22ZnFyOjjtqFpXJ9qDqwdczQh4sDry2gtHgiVAu38+PDdYRHhg3cLYAXZ21PQ+kcP1FAqmI2O8F15b1tdYWaGklcGPw3o84FTZZSI6iNPV/K+AqVryao3jiTcpGgi7Vn/3TkFRbh6gDtRBcV7J19mv2kvbY/5xChRIcvuRQ+hQT9NYQ5lUpiagqxLLwQmEESG+mLxEeaS4l0nNSe19ViInLaN+Z7/7ZleIjzgNxDaXxFSuT3Hm9DQWsknGsTCbUq1n5/eLiHL2VN8DeaRz/nStfGNkUulgKjQz1dV5zUM5mX5l4451ZIvrWX3+S+9euFiybmuReEhYToYk7TblrGeSH7nm6PwMVGr0HhGvKbnGPqeQr6DUoLP2Ka9KJW/RH8Op025PJSgafD/1ny9ePQVOBN7gzjzjZHxM9GGX9n2av4vwQSJs1cKhnHoD+mkH36nUV3WEYVZTPdwuUl9Bf9M+i7FfpN5bD1h5jSjlAxUrXT8FhPUdfX9LqRp7cvZKFYggT5R+3ZO+a+I3QUzGY9qVfjK7oF3bmhE8nPZoOeTTvFtlsx0Cr3uGk6yiQWU3mMsrs5Z74N2+bdgx7eaRY1AI4Kauyx0ssm+8P2FFsEId8P5WwmKWrQTtxq9eAl+giIZ++YsvHVrrm0T5RPZ2h8Va4uMBfW2SakUT2Xg3ODND/a+PwYLTX9EZrtx6vbFka1+TVSja969a5Wnxjbzv8U/P4f</source>
  </file>
  <file path="lib/Front/RestFront.php" hash="b5f246f4d29b739be01170526d7771f3" package="Default">
    <class final="false" abstract="true" namespace="global" line="16" package="xFreemwork">
      <extends>\xFront</extends>
      <name>xRestFront</name>
      <full_name>\xRestFront</full_name>
      <docblock line="11">
        <description>Front controller class, rest flavour.</description>
        <long-description>&lt;p&gt;Deals with model output formatting.&lt;/p&gt;</long-description>
        <tag line="11" name="package" description="xFreemwork"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="18" namespace="global" package="Default">
        <name>$encoding</name>
        <default>'UTF-8'</default>
      </property>
      <property final="false" static="false" visibility="public" line="20" namespace="global" package="Default">
        <name>$xml_root_node</name>
        <default>'resultset'</default>
      </property>
      <property final="false" static="false" visibility="public" line="21" namespace="global" package="Default">
        <name>$xml_default_node</name>
        <default>'item'</default>
      </property>
      <property final="false" static="false" visibility="public" line="23" namespace="global" package="Default">
        <name>$params</name>
        <default>array('xformat' =&gt; 'xml')</default>
      </property>
      <property final="false" static="false" visibility="public" line="30" namespace="global" package="Default">
        <name>$mimetypes</name>
        <default>array('html' =&gt; 'text/html', 'php' =&gt; 'text/x-php', 'xml' =&gt; 'text/xml', 'json' =&gt; 'application/json', 'csv' =&gt; 'text/csv')</default>
        <docblock line="27">
          <description>Mime types definition for each format</description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="38" package="xFreemwork">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="38">
          <name>$params</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="53" package="xFreemwork">
        <name>handle_request_body_params</name>
        <full_name>handle_request_body_params</full_name>
        <docblock line="50">
          <description>Merges the HTTP Request body paramters with the the instance parameters.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="66" package="xFreemwork">
        <name>handle_error</name>
        <full_name>handle_error</full_name>
        <docblock line="61">
          <description>Returns prints an encoded error structure,
or plain text error message if encoder is unavailable.</description>
          <long-description></long-description>
          <tag line="61" name="param" description="" type="\xException|\Exception" variable="$exception">
            <type by_reference="false">\xException</type>
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="66">
          <name>$exception</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="84" package="xFreemwork">
        <name>decode</name>
        <full_name>decode</full_name>
        <docblock line="79">
          <description>Decodes and returns the given data into a PHP array or scalar type.</description>
          <long-description></long-description>
          <tag line="79" name="param" description="PHP variable to decode." type="mixed" variable="$data">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="79" name="return" description="Decoded data" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="84">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="93" package="xFreemwork">
        <name>decode_php</name>
        <full_name>decode_php</full_name>
        <argument line="93">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="96" package="xFreemwork">
        <name>decode_json</name>
        <full_name>decode_json</full_name>
        <argument line="96">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="100" package="xFreemwork">
        <name>decode_xml</name>
        <full_name>decode_xml</full_name>
        <argument line="100">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="104" package="xFreemwork">
        <name>decode_xmlrpc</name>
        <full_name>decode_xmlrpc</full_name>
        <argument line="104">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="108" package="xFreemwork">
        <name>decode_csv</name>
        <full_name>decode_csv</full_name>
        <argument line="108">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="118" package="xFreemwork">
        <name>encode</name>
        <full_name>encode</full_name>
        <docblock line="113">
          <description>Encodes and returns the given data into the format specified by the xformat parameter.</description>
          <long-description></long-description>
          <tag line="113" name="param" description="PHP variable to encode." type="mixed" variable="$data">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="113" name="return" description="Encoded data" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="118">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="130" package="xFreemwork">
        <name>encode_php</name>
        <full_name>encode_php</full_name>
        <argument line="130">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="133" package="xFreemwork">
        <name>encode_json</name>
        <full_name>encode_json</full_name>
        <argument line="133">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="138" package="xFreemwork">
        <name>encode_xml</name>
        <full_name>encode_xml</full_name>
        <argument line="138">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="149" package="xFreemwork">
        <name>encode_xml_nodes</name>
        <full_name>encode_xml_nodes</full_name>
        <argument line="149">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="166" package="xFreemwork">
        <name>encode_xmlrpc</name>
        <full_name>encode_xmlrpc</full_name>
        <argument line="166">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="170" package="xFreemwork">
        <name>encode_csv</name>
        <full_name>encode_csv</full_name>
        <argument line="170">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="85">parse extension (prioritary before xformat parameter)</todo>
      <todo line="89">Recodes input stream if necessary</todo>
      <todo line="135">manage 'invalid UTF-8 sequence' case (PHP Warning issue)</todo>
    </markers>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib/Front/RestFront.php</error>
      <error line="18" code="50018">No DocBlock was found for property $encoding</error>
      <error line="20" code="50018">No DocBlock was found for property $xml_root_node</error>
      <error line="21" code="50018">No DocBlock was found for property $xml_default_node</error>
      <error line="23" code="50018">No DocBlock was found for property $params</error>
      <error line="38" code="50010">No DocBlock was found for method __construct()</error>
      <error line="93" code="50010">No DocBlock was found for method decode_php()</error>
      <error line="96" code="50010">No DocBlock was found for method decode_json()</error>
      <error line="100" code="50010">No DocBlock was found for method decode_xml()</error>
      <error line="104" code="50010">No DocBlock was found for method decode_xmlrpc()</error>
      <error line="108" code="50010">No DocBlock was found for method decode_csv()</error>
      <error line="130" code="50010">No DocBlock was found for method encode_php()</error>
      <error line="133" code="50010">No DocBlock was found for method encode_json()</error>
      <error line="138" code="50010">No DocBlock was found for method encode_xml()</error>
      <error line="149" code="50010">No DocBlock was found for method encode_xml_nodes()</error>
      <error line="166" code="50010">No DocBlock was found for method encode_xmlrpc()</error>
      <error line="170" code="50010">No DocBlock was found for method encode_csv()</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="lib/Core/Util.php" hash="5d46e2997e287f523da018dd0f709381" package="Default">
    <class final="false" abstract="false" namespace="global" line="15" package="xFreemwork">
      <extends/>
      <name>xUtil</name>
      <full_name>\xUtil</full_name>
      <docblock line="11">
        <description>This class contains utility functions.</description>
        <long-description></long-description>
        <tag line="11" name="package" description="xFreemwork"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="22" package="xFreemwork">
        <name>pre</name>
        <full_name>pre</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="39" package="xFreemwork">
        <name>copy</name>
        <full_name>copy</full_name>
        <docblock line="29">
          <description>Filesystem: copies the given source to the given destination, using the given options.</description>
          <long-description>&lt;p&gt;Useful for recursive file copy.&lt;/p&gt;</long-description>
          <tag line="29" name="param" description="The source file or directory." type="string" variable="$source">
            <type by_reference="false">string</type>
          </tag>
          <tag line="29" name="param" description="The destination file or directory." type="string" variable="$destination">
            <type by_reference="false">string</type>
          </tag>
          <tag line="29" name="param" description="Options (defaults to 'rf'), valid options are:&#10;              - r: recursive&#10;              - f: force" type="string" variable="$options">
            <type by_reference="false">string</type>
          </tag>
          <tag line="29" name="return" description="True if success, false otherwise." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="39">
          <name>$source</name>
          <default></default>
          <type/>
        </argument>
        <argument line="39">
          <name>$destination</name>
          <default></default>
          <type/>
        </argument>
        <argument line="39">
          <name>$options</name>
          <default>'rf'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="60" package="xFreemwork">
        <name>remove</name>
        <full_name>remove</full_name>
        <docblock line="51">
          <description>Filesystem: removes the given location
Useful for non-empty directory removal.</description>
          <long-description></long-description>
          <tag line="51" name="param" description="The location (file or directory) to remove." type="string" variable="$location">
            <type by_reference="false">string</type>
          </tag>
          <tag line="51" name="param" description="Options (defaults to 'rf'), valid options are:&#10;              - r: recursive&#10;              - f: force" type="string" variable="$options">
            <type by_reference="false">string</type>
          </tag>
          <tag line="51" name="return" description="True if success, false otherwise." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="60">
          <name>$location</name>
          <default></default>
          <type/>
        </argument>
        <argument line="60">
          <name>$options</name>
          <default>'rf'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="79" package="xFreemwork">
        <name>cascade_dir</name>
        <full_name>cascade_dir</full_name>
        <docblock line="71">
          <description>Filesystem: Returns all absolute file names with the given $extension
contained in the given $dir (recursive lookup).</description>
          <long-description></long-description>
          <tag line="71" name="param" description="The directory to cascade (e.g. /some/path)." type="string" variable="$dir">
            <type by_reference="false">string</type>
          </tag>
          <tag line="71" name="param" description="The extension of the file (e.g. php)." type="string" variable="$extension">
            <type by_reference="false">string</type>
          </tag>
          <tag line="71" name="param" description="Array of initial filenames (optional, used for recursive calls)." type="array" variable="">
            <type by_reference="false">array</type>
          </tag>
          <tag line="71" name="return" description="Array of absolute filenames." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="79">
          <name>$dir</name>
          <default></default>
          <type/>
        </argument>
        <argument line="79">
          <name>$extension</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="107" package="xFreemwork">
        <name>arrize</name>
        <full_name>arrize</full_name>
        <docblock line="99">
          <description>Make sure the given value is an array by returning an array of the given value.</description>
          <long-description>&lt;p&gt;If the given value is NULL, returns an empty array.
If the given value is a scalar, returns an array containing the value.
If the given value is already an array, returns the given value without transformation.&lt;/p&gt;</long-description>
          <tag line="99" name="param" description="The value" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="99" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="107">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="177" package="xFreemwork">
        <name>array_merge</name>
        <full_name>array_merge</full_name>
        <docblock line="113">
          <description>Merges arrays recursively, replacing existing keys.</description>
          <long-description>&lt;p&gt;Priority is given to the last given array parameter.&lt;/p&gt;

&lt;p&gt;Careful: This algorythm differs from PHP array_merge_recursive
in the sense that merging array with same-level-same-keyname
will remain unique when using xUtil::array_merge().&lt;/p&gt;

&lt;p&gt;Merge example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;print_r(xUtil::array_merge(array(
    'Index content',
    'assoc' =&gt; array(
        'a_key' =&gt; 'a_content',
        'b_key' =&gt; 'b_content',
        '2nd level index content'
    ),
    array(
        'key' =&gt; 'value'
    ),
    'this-key' =&gt; 'remains-unique',
), array(
    'assoc' =&gt; array(
        'a_key' =&gt; 'a_content_modified',
        'c_key' =&gt; 'c_content',
    ),
    array(
        'key' =&gt; 'value'
    ),
    'Index content 2',
    'this-key' =&gt; 'remains-unique'
)));
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;will output:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Array
(
    [0] =&gt; Index content
    [assoc] =&gt; Array
        (
            [a_key] =&gt; a_content_modified
            [b_key] =&gt; b_content
            [0] =&gt; 2nd level index content
            [c_key] =&gt; c_content
        )

    [1] =&gt; Array
        (
            [key] =&gt; value
        )

    [2] =&gt; Array
        (
            [key] =&gt; value
        )

   [3] =&gt; Index content 2
   [this-key] =&gt; remains-unique
)
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="113" name="param" description="unlimited optional Arrays to merge." type="array" variable="$array1,...">
            <type by_reference="false">array</type>
          </tag>
          <tag line="113" name="return" description="Merged array." type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="113" name="todo" description="Write unit tests (use the above example for one of the tests)."/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="203" package="xFreemwork">
        <name>array_clone</name>
        <full_name>array_clone</full_name>
        <docblock line="197">
          <description>Returns a deep clone of the given array.</description>
          <long-description></long-description>
          <tag line="197" name="param" description="The array to clone." type="array" variable="$array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="197" name="return" description="The clone of the given array." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="203">
          <name>$array</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="229" package="xFreemwork">
        <name>filter_keys</name>
        <full_name>filter_keys</full_name>
        <docblock line="222">
          <description>Filters and returns the given array, keeping only the given keys.</description>
          <long-description></long-description>
          <tag line="222" name="param" description="The array to filter." type="array" variable="$array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="222" name="param" description="The key(s) to keep." type="array|string" variable="$keys">
            <type by_reference="false">array</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="222" name="param" description="If true, the filter is inverted. Defaults to false." type="bool" variable="$invert_filter">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="222" name="return" description="The filtered array" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="229">
          <name>$array</name>
          <default></default>
          <type/>
        </argument>
        <argument line="229">
          <name>$keys</name>
          <default></default>
          <type/>
        </argument>
        <argument line="229">
          <name>$invert_filter</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="249" package="xFreemwork">
        <name>in_array</name>
        <full_name>in_array</full_name>
        <docblock line="240">
          <description>Returns true if the given needle(s) exist in the given haystack.</description>
          <long-description>&lt;p&gt;Note that multiple needles can be given.&lt;/p&gt;</long-description>
          <tag line="240" name="param" description="Haystack." type="array" variable="$needles">
            <type by_reference="false">array</type>
          </tag>
          <tag line="240" name="param" description="Needle(s). Multiple needles can be provided within a array." type="mixed" variable="$haystack">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="240" name="param" description="And search. False to perform an OR search (default), true to perform an AND search." type="bool" variable="$and_search">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="240" name="param" description="Strict. True to also check types." type="bool" variable="$strict">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="240" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="249">
          <name>$needles</name>
          <default></default>
          <type/>
        </argument>
        <argument line="249">
          <name>$haystack</name>
          <default></default>
          <type/>
        </argument>
        <argument line="249">
          <name>$and_search</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="249">
          <name>$strict</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="262" package="xFreemwork">
        <name>get_calling_class</name>
        <full_name>get_calling_class</full_name>
        <docblock line="258">
          <description>Returns the last class called, null if last call is not a class.</description>
          <long-description></long-description>
          <tag line="258" name="return" description="The name of the last called class (null if not a class)" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="272" package="xFreemwork">
        <name>get_calling_function</name>
        <full_name>get_calling_function</full_name>
        <docblock line="268">
          <description>Returns the last function called, null if last call is not a function.</description>
          <long-description></long-description>
          <tag line="268" name="return" description="The name of the last called class (null if not a class)" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="285" package="xFreemwork">
        <name>strip_tags</name>
        <full_name>strip_tags</full_name>
        <docblock line="278">
          <description>Returns the given $string with HTML tags stripped,
preserving null value for $string.</description>
          <long-description></long-description>
          <tag line="278" name="param" description="The string (or array of string) to strip." type="string|array" variable="$string">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="278" name="param" description="Allowable HTML tags (those will not be stripped)." type="string" variable="$allowable_tags">
            <type by_reference="false">string</type>
          </tag>
          <tag line="278" name="return" description="The stripped string (or array is $string is an array)." type="string|array">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="285">
          <name>$string</name>
          <default></default>
          <type/>
        </argument>
        <argument line="285">
          <name>$allowable_tags</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="307" package="xFreemwork">
        <name>trim_text</name>
        <full_name>trim_text</full_name>
        <docblock line="299">
          <description>Returns the given $text trimmed to $max_characters,
taking care not to truncate words.</description>
          <long-description></long-description>
          <tag line="299" name="param" description="The text to be trimmed." type="string" variable="$text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="299" name="param" description="Max characters allowed." type="int" variable="$max_characters">
            <type by_reference="false">int</type>
          </tag>
          <tag line="299" name="param" description="Optionnal suffix to append if text was trimmed." type="string" variable="$suffix">
            <type by_reference="false">string</type>
          </tag>
          <tag line="299" name="return" description="The trimmed text." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="307">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
        <argument line="307">
          <name>$max_characters</name>
          <default></default>
          <type/>
        </argument>
        <argument line="307">
          <name>$suffix</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="329" package="xFreemwork">
        <name>redirect</name>
        <full_name>redirect</full_name>
        <docblock line="325">
          <description>Issues cross-browser header for page redirection.</description>
          <long-description></long-description>
          <tag line="325" name="param" description="url to redirect to." type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="329">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="329">
          <name>$exit</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="347" package="xFreemwork">
        <name>url</name>
        <full_name>url</full_name>
        <docblock line="336">
          <description>Returns document root relative url with the given url suffix.</description>
          <long-description>&lt;p&gt;Example: the following code returns
'/path/to/site/some_controller/some_action'&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;print url('some_controller/some_action');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="336" name="param" description="Suffix of the url." type="string" variable="$suffix">
            <type by_reference="false">string</type>
          </tag>
          <tag line="336" name="param" description="If true, prepends protocol and hostname to the url" type="bool" variable="$full">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="336" name="return" description="Asbolute path url" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="347">
          <name>$suffix</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="347">
          <name>$full</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="365" package="xFreemwork">
        <name>current_url</name>
        <full_name>current_url</full_name>
        <docblock line="357">
          <description>Returns the current full url.</description>
          <long-description></long-description>
          <tag line="357" name="param" description="If true (default), query string is appended to returned url.&#10;                  If false,no query string is appended to returned url.&#10;                  If an array, the given associative array is merged into the current query string.&#10;                  If a string, the given query string is used as is." type="bool|array|string" variable="$query_string">
            <type by_reference="false">bool</type>
            <type by_reference="false">array</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="357" name="return" description="Current url." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="365">
          <name>$query_string</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="387" package="xFreemwork">
        <name>extension</name>
        <full_name>extension</full_name>
        <docblock line="382">
          <description>Returns the extension of the given file.</description>
          <long-description></long-description>
          <tag line="382" name="param" description="A filename." type="string" variable="$file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="382" name="return" description="The extension." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="387">
          <name>$file</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="391" package="xFreemwork">
        <name>valid_email</name>
        <full_name>valid_email</full_name>
        <argument line="391">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="392" package="xFreemwork">
        <name>valid_phone</name>
        <full_name>valid_phone</full_name>
        <argument line="392">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="393" package="xFreemwork">
        <name>valid_url</name>
        <full_name>valid_url</full_name>
        <argument line="393">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="394" package="xFreemwork">
        <name>valid_integer</name>
        <full_name>valid_integer</full_name>
        <argument line="394">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="395" package="xFreemwork">
        <name>valid_length</name>
        <full_name>valid_length</full_name>
        <argument line="395">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="395">
          <name>$min_length</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="395">
          <name>$max_length</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="397" package="xFreemwork">
        <name>format_phone</name>
        <full_name>format_phone</full_name>
        <argument line="397">
          <name>$number</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="406" package="xFreemwork">
        <name>format_money</name>
        <full_name>format_money</full_name>
        <argument line="406">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="409" package="xFreemwork">
        <name>round_money</name>
        <full_name>round_money</full_name>
        <argument line="409">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="419" package="xFreemwork">
        <name>dateparts</name>
        <full_name>dateparts</full_name>
        <docblock line="413">
          <description>Returns an array containing date components from a ISO/US date.</description>
          <long-description>&lt;p&gt;Useful for parsing mysql date fields values.&lt;/p&gt;</long-description>
          <tag line="413" name="param" description="ISO/US formatted date (yyyy-mm-dd hh:mm:ss)." type="string" variable="$mysql_date">
            <type by_reference="false">string</type>
          </tag>
          <tag line="413" name="return" description="The corresponding date components array." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="419">
          <name>$mysql_date</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="441" package="xFreemwork">
        <name>timestamp</name>
        <full_name>timestamp</full_name>
        <docblock line="435">
          <description>Returns a timestamp from a ISO/US date.</description>
          <long-description>&lt;p&gt;Useful for parsing mysql date fields values.&lt;/p&gt;</long-description>
          <tag line="435" name="param" description="ISO/US formatted date (yyyy-mm-dd hh:mm:ss)." type="string" variable="$mysql_date">
            <type by_reference="false">string</type>
          </tag>
          <tag line="435" name="return" description="The corresponding timestamp." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="441">
          <name>$mysql_date</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="464" package="xFreemwork">
        <name>ustime</name>
        <full_name>ustime</full_name>
        <docblock line="458">
          <description>Returns a ISO/US formatted date from a unix timestamp.</description>
          <long-description>&lt;p&gt;Useful for mysql inserts.&lt;/p&gt;</long-description>
          <tag line="458" name="param" description="A unix timestamp." type="string" variable="$timestamp">
            <type by_reference="false">string</type>
          </tag>
          <tag line="458" name="return" description="The corresponding ISO/US date (yyyy-mm-dd hh:mm:ss)." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="464">
          <name>$timestamp</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="475" package="xFreemwork">
        <name>date</name>
        <full_name>date</full_name>
        <docblock line="469">
          <description>Returns a formatted date from the given timestamp or ISO/US date.</description>
          <long-description></long-description>
          <tag line="469" name="param" description="Timestamp." type="int" variable="$timestamp">
            <type by_reference="false">int</type>
          </tag>
          <tag line="469" name="param" description="Value to return if timestamp is null." type="string" variable="$null">
            <type by_reference="false">string</type>
          </tag>
          <tag line="469" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="475">
          <name>$timestamp</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="475">
          <name>$null</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="496" package="xFreemwork">
        <name>time</name>
        <full_name>time</full_name>
        <docblock line="490">
          <description>Returns a formatted time from the given timestamp or ISO/US date.</description>
          <long-description></long-description>
          <tag line="490" name="param" description="Timestamp or ISO/US date." type="int" variable="$timestamp">
            <type by_reference="false">int</type>
          </tag>
          <tag line="490" name="param" description="Value to return if timestamp is null." type="string" variable="$null">
            <type by_reference="false">string</type>
          </tag>
          <tag line="490" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="496">
          <name>$timestamp</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="496">
          <name>$null</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="508" package="xFreemwork">
        <name>datetime</name>
        <full_name>datetime</full_name>
        <docblock line="502">
          <description>Returns a formatted date and time from the given timestamp or ISO/US date.</description>
          <long-description></long-description>
          <tag line="502" name="param" description="Timestamp or ISO/US date." type="int" variable="$timestamp">
            <type by_reference="false">int</type>
          </tag>
          <tag line="502" name="param" description="Value to return if timestamp is null." type="string" variable="$null">
            <type by_reference="false">string</type>
          </tag>
          <tag line="502" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="508">
          <name>$timestamp</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="508">
          <name>$null</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="520" package="xFreemwork">
        <name>timeago</name>
        <full_name>timeago</full_name>
        <docblock line="515">
          <description>Returns the timespan between the given timestamp and now.</description>
          <long-description></long-description>
          <tag line="515" name="param" description="Timestamp (if not given, now is considered)." type="int" variable="$timestamp">
            <type by_reference="false">int</type>
          </tag>
          <tag line="515" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="520">
          <name>$timestamp</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="588" package="xFreemwork">
        <name>generatePsw</name>
        <full_name>generatePsw</full_name>
        <docblock line="585">
          <description></description>
          <long-description></long-description>
          <tag line="585" name="deprecated" description=""/>
        </docblock>
        <argument line="588">
          <name>$size</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="602" package="xFreemwork">
        <name>mail</name>
        <full_name>mail</full_name>
        <docblock line="592">
          <description>Redefines the mail php function with encoding.</description>
          <long-description></long-description>
          <tag line="592" name="param" description="Recipient email address." type="string" variable="$to">
            <type by_reference="false">string</type>
          </tag>
          <tag line="592" name="param" description="Mail subject." type="string" variable="$subject">
            <type by_reference="false">string</type>
          </tag>
          <tag line="592" name="param" description="Mail body." type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="592" name="param" description="Sender email address." type="string" variable="$from">
            <type by_reference="false">string</type>
          </tag>
          <tag line="592" name="param" description="Encoding (eg. UTF-8, iso-8859-1)." type="string" variable="$encoding">
            <type by_reference="false">string</type>
          </tag>
          <tag line="592" name="param" description="" type="string" variable="">
            <type by_reference="false">string</type>
          </tag>
          <tag line="592" name="return" description="The PHP mail function return value." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="602">
          <name>$to</name>
          <default></default>
          <type/>
        </argument>
        <argument line="602">
          <name>$subject</name>
          <default></default>
          <type/>
        </argument>
        <argument line="602">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
        <argument line="602">
          <name>$from</name>
          <default></default>
          <type/>
        </argument>
        <argument line="602">
          <name>$encoding</name>
          <default>'utf-8'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="616" package="xFreemwork">
        <name>distance</name>
        <full_name>distance</full_name>
        <docblock line="608">
          <description>Returns distance in meters between two points</description>
          <long-description></long-description>
          <tag line="608" name="param" description="Longitude 1, in degrees" type="float" variable="$lon1">
            <type by_reference="false">float</type>
          </tag>
          <tag line="608" name="param" description="Lattitude 1, in degrees" type="float" variable="$lat1">
            <type by_reference="false">float</type>
          </tag>
          <tag line="608" name="param" description="Longitude 2, in degrees" type="float" variable="$lon2">
            <type by_reference="false">float</type>
          </tag>
          <tag line="608" name="param" description="Lattitude 2, in degrees" type="float" variable="$lat2">
            <type by_reference="false">float</type>
          </tag>
          <tag line="608" name="return" description="" type="float">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
        <argument line="616">
          <name>$lon1</name>
          <default></default>
          <type/>
        </argument>
        <argument line="616">
          <name>$lat1</name>
          <default></default>
          <type/>
        </argument>
        <argument line="616">
          <name>$lon2</name>
          <default></default>
          <type/>
        </argument>
        <argument line="616">
          <name>$lat2</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib/Core/Util.php</error>
      <error line="22" code="50010">No DocBlock was found for method pre()</error>
      <notice line="71" code="50013">Parameter  could not be found in cascade_dir()</notice>
      <notice line="113" code="50013">Parameter $array1,... could not be found in array_merge()</notice>
      <error line="325" code="50015">Argument $exit is missing from the Docblock of redirect()</error>
      <error line="391" code="50010">No DocBlock was found for method valid_email()</error>
      <error line="392" code="50010">No DocBlock was found for method valid_phone()</error>
      <error line="393" code="50010">No DocBlock was found for method valid_url()</error>
      <error line="394" code="50010">No DocBlock was found for method valid_integer()</error>
      <error line="395" code="50010">No DocBlock was found for method valid_length()</error>
      <error line="397" code="50010">No DocBlock was found for method format_phone()</error>
      <error line="406" code="50010">No DocBlock was found for method format_money()</error>
      <error line="409" code="50010">No DocBlock was found for method round_money()</error>
      <error line="585" code="50012">No short description for method generatePsw()</error>
      <error line="585" code="50015">Argument $size is missing from the Docblock of generatePsw()</error>
      <notice line="592" code="50013">Parameter  could not be found in mail()</notice>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="lib/Core/Logger.php" hash="1ce29439d9a30b52ceb97c93183acf27" package="Default">
    <class final="false" abstract="false" namespace="global" line="15" package="xFreemwork">
      <extends/>
      <name>xLogger</name>
      <full_name>\xLogger</full_name>
      <docblock line="11">
        <description>This class is used for logging information into the text log file.</description>
        <long-description></long-description>
        <tag line="11" name="package" description="xFreemwork"/>
      </docblock>
      <constant namespace="global" line="17" package="xFreemwork">
        <name>DEBUG</name>
        <full_name>DEBUG</full_name>
        <value>0</value>
      </constant>
      <constant namespace="global" line="18" package="xFreemwork">
        <name>INFO</name>
        <full_name>INFO</full_name>
        <value>1</value>
      </constant>
      <constant namespace="global" line="19" package="xFreemwork">
        <name>NOTICE</name>
        <full_name>NOTICE</full_name>
        <value>2</value>
      </constant>
      <constant namespace="global" line="20" package="xFreemwork">
        <name>WARNING</name>
        <full_name>WARNING</full_name>
        <value>3</value>
      </constant>
      <constant namespace="global" line="21" package="xFreemwork">
        <name>ERROR</name>
        <full_name>ERROR</full_name>
        <value>4</value>
      </constant>
      <constant namespace="global" line="22" package="xFreemwork">
        <name>FATAL</name>
        <full_name>FATAL</full_name>
        <value>5</value>
      </constant>
      <constant namespace="global" line="23" package="xFreemwork">
        <name>NONE</name>
        <full_name>NONE</full_name>
        <value>6</value>
      </constant>
      <property final="false" static="false" visibility="public" line="29" namespace="global" package="Default">
        <name>$labels</name>
        <default>array(0 =&gt; 'DEBUG', 1 =&gt; 'INFO', 2 =&gt; 'NOTICE', 3 =&gt; 'WARNING', 4 =&gt; 'ERROR', 5 =&gt; 'FATAL', 6 =&gt; 'NONE')</default>
        <docblock line="25">
          <description>Logger levels labels.</description>
          <long-description></long-description>
          <tag line="25" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="43" namespace="global" package="Default">
        <name>$level</name>
        <default></default>
        <docblock line="39">
          <description>The minimum log level to be written in the log file.</description>
          <long-description></long-description>
          <tag line="39" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="58" namespace="global" package="Default">
        <name>$classes</name>
        <default>array()</default>
        <docblock line="45">
          <description>The class names to be logged.</description>
          <long-description>&lt;p&gt;Structure:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;array(
    array(
         'class' =&gt; 'ClassName',
         'method' =&gt; 'MethodName'
    )
)
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="45" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="64" namespace="global" package="Default">
        <name>$file</name>
        <default></default>
        <docblock line="60">
          <description>The path and filename to active log file.</description>
          <long-description></long-description>
          <tag line="60" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="70" namespace="global" package="Default">
        <name>$start_time</name>
        <default></default>
        <docblock line="66">
          <description>The microtimestamp of the logger instanciation time.</description>
          <long-description></long-description>
          <tag line="66" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="72" package="xFreemwork">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="72">
          <name>$filename</name>
          <default></default>
          <type/>
        </argument>
        <argument line="72">
          <name>$level</name>
          <default></default>
          <type/>
        </argument>
        <argument line="72">
          <name>$classes</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="94" package="xFreemwork">
        <name>__destruct</name>
        <full_name>__destruct</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="107" package="xFreemwork">
        <name>is_log</name>
        <full_name>is_log</full_name>
        <docblock line="101">
          <description>Returns true if the given level and class has to be written into logfile</description>
          <long-description></long-description>
          <tag line="101" name="param" description="The log level" type="int" variable="$level">
            <type by_reference="false">int</type>
          </tag>
          <tag line="101" name="param" description="The class name" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="101" name="return" description="True if the log has to be written into logfile, false otherwise" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="107">
          <name>$level</name>
          <default></default>
          <type/>
        </argument>
        <argument line="107">
          <name>$class</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="135" package="xFreemwork">
        <name>log</name>
        <full_name>log</full_name>
        <docblock line="127">
          <description>Writes a log line into the log file.</description>
          <long-description></long-description>
          <tag line="127" name="param" description="Content (or array of content) to log.&#10;       If the content is not scalar, print_r is applied." type="string|mixed|array" variable="$msgs">
            <type by_reference="false">string</type>
            <type by_reference="false">mixed</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="127" name="param" description="The instance that produces the log.&#10;       Useful for tracing the class name of the object." type="Object|string" variable="$instance">
            <type by_reference="false">Object</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="127" name="param" description="The log level for the log line." type="integer" variable="$level">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="135">
          <name>$msgs</name>
          <default></default>
          <type/>
        </argument>
        <argument line="135">
          <name>$instance</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="135">
          <name>$level</name>
          <default>self::DEBUG</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="150" package="xFreemwork">
        <name>debug</name>
        <full_name>debug</full_name>
        <argument line="150">
          <name>$msgs</name>
          <default></default>
          <type/>
        </argument>
        <argument line="150">
          <name>$instance</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="151" package="xFreemwork">
        <name>info</name>
        <full_name>info</full_name>
        <argument line="151">
          <name>$msgs</name>
          <default></default>
          <type/>
        </argument>
        <argument line="151">
          <name>$instance</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="152" package="xFreemwork">
        <name>notice</name>
        <full_name>notice</full_name>
        <argument line="152">
          <name>$msgs</name>
          <default></default>
          <type/>
        </argument>
        <argument line="152">
          <name>$instance</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="153" package="xFreemwork">
        <name>warning</name>
        <full_name>warning</full_name>
        <argument line="153">
          <name>$msgs</name>
          <default></default>
          <type/>
        </argument>
        <argument line="153">
          <name>$instance</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="154" package="xFreemwork">
        <name>error</name>
        <full_name>error</full_name>
        <argument line="154">
          <name>$msgs</name>
          <default></default>
          <type/>
        </argument>
        <argument line="154">
          <name>$instance</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="155" package="xFreemwork">
        <name>fatal</name>
        <full_name>fatal</full_name>
        <argument line="155">
          <name>$msgs</name>
          <default></default>
          <type/>
        </argument>
        <argument line="155">
          <name>$instance</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib/Core/Logger.php</error>
      <error line="72" code="50010">No DocBlock was found for method __construct()</error>
      <error line="94" code="50010">No DocBlock was found for method __destruct()</error>
      <error line="150" code="50010">No DocBlock was found for method debug()</error>
      <error line="151" code="50010">No DocBlock was found for method info()</error>
      <error line="152" code="50010">No DocBlock was found for method notice()</error>
      <error line="153" code="50010">No DocBlock was found for method warning()</error>
      <error line="154" code="50010">No DocBlock was found for method error()</error>
      <error line="155" code="50010">No DocBlock was found for method fatal()</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="lib/Core/WebController.php" hash="84132f46556402854d500ee27ddd9351" package="Default">
    <class final="false" abstract="true" namespace="global" line="16" package="xFreemwork">
      <extends>\xController</extends>
      <name>xWebController</name>
      <full_name>\xWebController</full_name>
      <docblock line="11">
        <description>Base controller class with web niceties.</description>
        <long-description>&lt;p&gt;Deals with caller interactions (request &amp;amp; response).&lt;/p&gt;</long-description>
        <tag line="11" name="package" description="xFreemwork"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="22" namespace="global" package="Default">
        <name>$meta</name>
        <default>array()</default>
        <docblock line="18">
          <description>Controller instance metadata (associative array).</description>
          <long-description></long-description>
          <tag line="18" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="38" package="xFreemwork">
        <name>add_meta</name>
        <full_name>add_meta</full_name>
        <docblock line="24">
          <description>Convenience method for merging this instance metadata
with additional metadata.</description>
          <long-description>&lt;p&gt;The given metadata will erase this instance metadata.
The merged metadata array replaces this instance metadata
and is also returned.
Metadata name format can be:
 - plain: eg. somename
 - hirearchic: eg. some/meta/name, which will result in an
   array('some' =&gt; array('meta' =&gt; array('name' =&gt; $contents)))&lt;/p&gt;</long-description>
          <tag line="24" name="param" description="Metadata array | Metadata name." type="array|string" variable="$meta">
            <type by_reference="false">array</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="24" name="param" description="(Mandatory if 1st param is a string) The metadata contents." type="mixed" variable="$contents">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="24" name="return" description="Merged metadata array." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="38">
          <name>$meta</name>
          <default></default>
          <type/>
        </argument>
        <argument line="38">
          <name>$contents</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="64" package="xFreemwork">
        <name>session</name>
        <full_name>session</full_name>
        <docblock line="52">
          <description>Save/retrieve value(s) in controller session.</description>
          <long-description>&lt;p&gt;Parameter behave as follows:
- If only key param given, the corresponding stored value is returned (null if key does not exist)
- If both key and value are given, the value is stored in session.
- If no argument given, return the session array of the controller.&lt;/p&gt;</long-description>
          <tag line="52" name="param" description="The key identifier." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="52" name="param" description="The value to store. If null or not provided, the" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="52" name="return" description="- The stored session array for the controller if $key is not provided or null&#10;    - The stored value if a valid key is given without value." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="64">
          <name>$key</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="64">
          <name>$value</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="76" package="xFreemwork">
        <name>previous_url</name>
        <full_name>previous_url</full_name>
        <docblock line="73">
          <description></description>
          <long-description></long-description>
          <tag line="73" name="see" description="\xWebFront::previous_url()" refers="\xWebFront::previous_url()"/>
        </docblock>
      </method>
    </class>
    <markers>
      <todo line="44">avoid eval</todo>
    </markers>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib/Core/WebController.php</error>
      <error line="73" code="50012">No short description for method previous_url()</error>
    </parse_markers>
    <source>eJytVt9P4zgQfu9fMULVNUHQAPdWjl10wK6QFlgJVvfAospNpq1Faudspy1i+d9vxnZK2ivH3unyAKln5ptvfjq/faymVSfb7cAuJHkKRweHR3AuZhIVnGlTCSfqJQlZ/uXy7OL69oJf76bSQilHRpgn8K85KosF1KpAA26K8Pn6G3z++gXmv/YPGvke24o8R2vlqEQQDqbOVYMsWywW/Ymq+9pMsqhss0lV7pN1f+pmJXPY3c06xNWT+V1YhFwrZ3RZksu8FNbCQropLHAEijCcRNtn3XMUZZTlwmtL5dCI3EmtLCQG/6zROvgFDNqKjjD1dqeVyB/FBGH5ySDOFto8eg5iZB1bR6fLP3B09soElw5VQcets+dOB+jx3PnZhZZQKuuEyhFm6ERBGYeEYHUuhZNzSpIx4okJBcPTuTDhLJ5k/j+fdhkAToI0SY+3OZ2jotoGZ1NdwFgbejUTqSZUNirl39g0xj5/oigkZ02UK/mK2R1VfUKM1WsgC1mWQJmmWm0HXzNmHtRDK2sfB9WkKgW1zDv0hCq4E6nSmkxcbRQWK/SrBlKJGXLMM2q9XCgY4aDRgX0gR1INACd9sHqGrNySTqVBYfKpzF9VMqaRseIeLEgyDSFTH9WlI7JEa4UAsTA9NuzByYfmN2O0fzOc/93lBkflbJqmq/pXwohZUP1BfciFu1rP2I/1ePsbpjO5pCwnV5Qx4TQP8BgOqf2DlHMIATeNVYlYDZlXvJDn6PVqW/X6a006rpWfOW6jISsmvmX3XgOl7lV1WaY0MRAfYpdIOwy58fppW8xP5NHlDtn/EKdg+c3JcjDwdkPfWklLYS9MCw1JA/ICWFpkbxR9pW3DrZf1Ujg5OYEx9Rb+L65bsWyUeZPOhrcsg7ub85sBiLmWBeBclGty6mwU1IQJLqtSF5gQ+SZSEBa6VGOXwmlXQP8Edu57z/7kpfewc7wG1J2190hbwj6Tne/d2XNXvJDS9xX7450N1f9YlnYSOuHv5iK7FXPMCN5IpA1JjGpMbMrz1roSLF8zWq3a9Sv3N9Lip6mfCt6slhJWlnphV0tgHy7HoFX5BI/4FCfC77Q9f6nl2oQrouCxszQ91PHePc9Ns3Yg4R7mxmWQQtPuUtrRxSCtS9c8jTTtVFbi7RVwhMG2xxV4dEYhbsblkZQmy0lNS8s15jH9jBJN4qTqcQymSdXmhohrhaefycmCUOVY/qNiIOp0INr3nDgLdL9w8JXRc8IpfFSbC8RvpNaepJAYMoa8Tp4vrHX2nOiu52nXXHnXROFN4JjbMS08eqV5iiDhEuP7TtcuaL2xxyK1xLsPq4s6OOBu32RsOlT1jPbZxCa8WOAgbUp12h3eXtzeXt5c3/eWvYf7Cbqh/8YII5I+HL+HdfjzWPdMuoXYbL8tqEebWy/uZA4wCeHSTq7pw8klP+d2c6nwqvt3xCm/wfP72+LUIvqvtE+GmmYwqAzOpa7tsDZlkm6v7LpOK/yGZQuvS7T4Ir0/fICP8IZgED4I6euQzkf0RVQbeRwJv/wFNqyLBA==</source>
  </file>
  <file path="lib/Core/Config.php" hash="f07e007164c246e2a4af2b7320f40689" package="Default">
    <class final="false" abstract="false" namespace="global" line="32" package="xFreemwork">
      <extends/>
      <implements>\Countable</implements>
      <implements>\Iterator</implements>
      <name>xZend_Config</name>
      <full_name>\xZend_Config</full_name>
      <docblock line="26">
        <description></description>
        <long-description></long-description>
        <tag line="26" name="package" description="xFreemwork"/>
        <tag line="26" name="version" description="$Id: Config.php 23775 2011-03-01 17:25:24Z ralph $"/>
        <tag line="26" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="26" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="39" namespace="global" package="Default">
        <name>$_allowModifications</name>
        <default></default>
        <docblock line="34">
          <description>Whether in-memory modifications to configuration data are allowed</description>
          <long-description></long-description>
          <tag line="34" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="46" namespace="global" package="Default">
        <name>$_index</name>
        <default></default>
        <docblock line="41">
          <description>Iteration index</description>
          <long-description></long-description>
          <tag line="41" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="53" namespace="global" package="Default">
        <name>$_count</name>
        <default></default>
        <docblock line="48">
          <description>Number of elements in configuration data</description>
          <long-description></long-description>
          <tag line="48" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="60" namespace="global" package="Default">
        <name>$_data</name>
        <default></default>
        <docblock line="55">
          <description>Contains array of configuration data</description>
          <long-description></long-description>
          <tag line="55" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="68" namespace="global" package="Default">
        <name>$_skipNextIteration</name>
        <default></default>
        <docblock line="62">
          <description>Used when unsetting values during iteration to ensure we do not skip
the next element</description>
          <long-description></long-description>
          <tag line="62" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="77" namespace="global" package="Default">
        <name>$_loadedSection</name>
        <default></default>
        <docblock line="70">
          <description>Contains which config file sections were loaded.</description>
          <long-description>&lt;p&gt;This is null
if all sections were loaded, a string name if one section is loaded
and an array of string names if multiple sections were loaded.&lt;/p&gt;</long-description>
          <tag line="70" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="85" namespace="global" package="Default">
        <name>$_extends</name>
        <default>array()</default>
        <docblock line="79">
          <description>This is used to track section inheritance.</description>
          <long-description>&lt;p&gt;The keys are names of sections that
extend other sections, and the values are the extended sections.&lt;/p&gt;</long-description>
          <tag line="79" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="94" namespace="global" package="Default">
        <name>$_loadFileErrorStr</name>
        <default>null</default>
        <docblock line="87">
          <description>Load file error string.</description>
          <long-description>&lt;p&gt;Is null if there was no error while file loading&lt;/p&gt;</long-description>
          <tag line="87" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="108" package="xFreemwork">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="96">
          <description>xZend_Config provides a property based interface to
an array.</description>
          <long-description>&lt;p&gt;The data are read-only unless $allowModifications
is set to true on construction.&lt;/p&gt;

&lt;p&gt;xZend_Config also implements Countable and Iterator to
facilitate easy access to the data.&lt;/p&gt;</long-description>
          <tag line="96" name="param" description="" type="array" variable="$array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="96" name="param" description="" type="boolean" variable="$allowModifications">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="96" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="108">
          <name>$array</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="108">
          <name>$allowModifications</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="131" package="xFreemwork">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="124">
          <description>Retrieve a value and return $default if there is no element set.</description>
          <long-description></long-description>
          <tag line="124" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="124" name="param" description="" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="124" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="131">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="131">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="146" package="xFreemwork">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="140">
          <description>Magic function so that $obj-&gt;value will work.</description>
          <long-description></long-description>
          <tag line="140" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="140" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="146">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="160" package="xFreemwork">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="151">
          <description>Only allow setting of a property if $allowModifications
was set to true on construction.</description>
          <long-description>&lt;p&gt;Otherwise, throw an exception.&lt;/p&gt;</long-description>
          <tag line="151" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="151" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="151" name="throws" description="" type="\xException">
            <type by_reference="false">\xException</type>
          </tag>
          <tag line="151" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="160">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="160">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="180" package="xFreemwork">
        <name>__clone</name>
        <full_name>__clone</full_name>
        <docblock line="174">
          <description>Deep clone of this instance to ensure that nested xZend_Configs
are also cloned.</description>
          <long-description></long-description>
          <tag line="174" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="198" package="xFreemwork">
        <name>toArray</name>
        <full_name>toArray</full_name>
        <docblock line="193">
          <description>Return an associative array of the stored data.</description>
          <long-description></long-description>
          <tag line="193" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="218" package="xFreemwork">
        <name>__isset</name>
        <full_name>__isset</full_name>
        <docblock line="212">
          <description>Support isset() overloading on PHP 5.1</description>
          <long-description></long-description>
          <tag line="212" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="212" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="218">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="230" package="xFreemwork">
        <name>__unset</name>
        <full_name>__unset</full_name>
        <docblock line="223">
          <description>Support unset() overloading on PHP 5.1</description>
          <long-description></long-description>
          <tag line="223" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="223" name="throws" description="" type="\xException">
            <type by_reference="false">\xException</type>
          </tag>
          <tag line="223" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="230">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="247" package="xFreemwork">
        <name>count</name>
        <full_name>count</full_name>
        <docblock line="242">
          <description>Defined by Countable interface</description>
          <long-description></long-description>
          <tag line="242" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="257" package="xFreemwork">
        <name>current</name>
        <full_name>current</full_name>
        <docblock line="252">
          <description>Defined by Iterator interface</description>
          <long-description></long-description>
          <tag line="252" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="268" package="xFreemwork">
        <name>key</name>
        <full_name>key</full_name>
        <docblock line="263">
          <description>Defined by Iterator interface</description>
          <long-description></long-description>
          <tag line="263" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="277" package="xFreemwork">
        <name>next</name>
        <full_name>next</full_name>
        <docblock line="273">
          <description>Defined by Iterator interface</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="291" package="xFreemwork">
        <name>rewind</name>
        <full_name>rewind</full_name>
        <docblock line="287">
          <description>Defined by Iterator interface</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="303" package="xFreemwork">
        <name>valid</name>
        <full_name>valid</full_name>
        <docblock line="298">
          <description>Defined by Iterator interface</description>
          <long-description></long-description>
          <tag line="298" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="313" package="xFreemwork">
        <name>getSectionName</name>
        <full_name>getSectionName</full_name>
        <docblock line="308">
          <description>Returns the section name(s) loaded.</description>
          <long-description></long-description>
          <tag line="308" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="326" package="xFreemwork">
        <name>areAllSectionsLoaded</name>
        <full_name>areAllSectionsLoaded</full_name>
        <docblock line="321">
          <description>Returns true if all sections were loaded</description>
          <long-description></long-description>
          <tag line="321" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="340" package="xFreemwork">
        <name>merge</name>
        <full_name>merge</full_name>
        <docblock line="332">
          <description>Merge another xZend_Config with this one.</description>
          <long-description>&lt;p&gt;The items
in $merge will override the same named items in
the current config.&lt;/p&gt;</long-description>
          <tag line="332" name="param" description="" type="\xZend_Config" variable="$merge">
            <type by_reference="false">\xZend_Config</type>
          </tag>
          <tag line="332" name="return" description="" type="\xZend_Config">
            <type by_reference="false">\xZend_Config</type>
          </tag>
        </docblock>
        <argument line="340">
          <name>$merge</name>
          <default></default>
          <type>\xZend_Config</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="367" package="xFreemwork">
        <name>setReadOnly</name>
        <full_name>setReadOnly</full_name>
        <docblock line="361">
          <description>Prevent any more modifications being made to this instance.</description>
          <long-description>&lt;p&gt;Useful
after merge() has been used to merge multiple xZend_Config objects
into one object which should then not be modified again.&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="382" package="xFreemwork">
        <name>readOnly</name>
        <full_name>readOnly</full_name>
        <docblock line="377">
          <description>Returns if this xZend_Config object is read only or not.</description>
          <long-description></long-description>
          <tag line="377" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="392" package="xFreemwork">
        <name>getExtends</name>
        <full_name>getExtends</full_name>
        <docblock line="387">
          <description>Get the current extends</description>
          <long-description></long-description>
          <tag line="387" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="404" package="xFreemwork">
        <name>setExtend</name>
        <full_name>setExtend</full_name>
        <docblock line="397">
          <description>Set an extend for xZend_Config_Writer</description>
          <long-description></long-description>
          <tag line="397" name="param" description="" type="string" variable="$extendingSection">
            <type by_reference="false">string</type>
          </tag>
          <tag line="397" name="param" description="" type="string" variable="$extendedSection">
            <type by_reference="false">string</type>
          </tag>
          <tag line="397" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="404">
          <name>$extendingSection</name>
          <default></default>
          <type/>
        </argument>
        <argument line="404">
          <name>$extendedSection</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="422" package="xFreemwork">
        <name>_assertValidExtend</name>
        <full_name>_assertValidExtend</full_name>
        <docblock line="413">
          <description>Throws an exception if $extendingSection may not extend $extendedSection,
and tracks the section extension if it is valid.</description>
          <long-description></long-description>
          <tag line="413" name="param" description="" type="string" variable="$extendingSection">
            <type by_reference="false">string</type>
          </tag>
          <tag line="413" name="param" description="" type="string" variable="$extendedSection">
            <type by_reference="false">string</type>
          </tag>
          <tag line="413" name="throws" description="" type="\xException">
            <type by_reference="false">\xException</type>
          </tag>
          <tag line="413" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="422">
          <name>$extendingSection</name>
          <default></default>
          <type/>
        </argument>
        <argument line="422">
          <name>$extendedSection</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="444" package="xFreemwork">
        <name>_loadFileErrorHandler</name>
        <full_name>_loadFileErrorHandler</full_name>
        <docblock line="436">
          <description>Handle any errors from simplexml_load_file or parse_ini_file</description>
          <long-description></long-description>
          <tag line="436" name="param" description="" type="integer" variable="$errno">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="436" name="param" description="" type="string" variable="$errstr">
            <type by_reference="false">string</type>
          </tag>
          <tag line="436" name="param" description="" type="string" variable="$errfile">
            <type by_reference="false">string</type>
          </tag>
          <tag line="436" name="param" description="" type="integer" variable="$errline">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="444">
          <name>$errno</name>
          <default></default>
          <type/>
        </argument>
        <argument line="444">
          <name>$errstr</name>
          <default></default>
          <type/>
        </argument>
        <argument line="444">
          <name>$errfile</name>
          <default></default>
          <type/>
        </argument>
        <argument line="444">
          <name>$errline</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="461" package="xFreemwork">
        <name>_arrayMergeRecursive</name>
        <full_name>_arrayMergeRecursive</full_name>
        <docblock line="453">
          <description>Merge two arrays recursively, overwriting keys of the same name
in $firstArray with the value in $secondArray.</description>
          <long-description></long-description>
          <tag line="453" name="param" description="First array" type="mixed" variable="$firstArray">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="453" name="param" description="Second array to merge into first array" type="mixed" variable="$secondArray">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="453" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="461">
          <name>$firstArray</name>
          <default></default>
          <type/>
        </argument>
        <argument line="461">
          <name>$secondArray</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="492" package="xFreemwork">
      <extends>\xZend_Config</extends>
      <name>xZend_Config_Ini</name>
      <full_name>\xZend_Config_Ini</full_name>
      <docblock line="485">
        <description></description>
        <long-description></long-description>
        <tag line="485" name="category" description="Zend"/>
        <tag line="485" name="package" description="xFreemwork"/>
        <tag line="485" name="version" description="$Id: Ini.php 23775 2011-03-01 17:25:24Z ralph $"/>
        <tag line="485" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="485" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="499" namespace="global" package="Default">
        <name>$_nestSeparator</name>
        <default>'.'</default>
        <docblock line="494">
          <description>String that separates nesting levels of configuration data identifiers</description>
          <long-description></long-description>
          <tag line="494" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="506" namespace="global" package="Default">
        <name>$_sectionSeparator</name>
        <default>':'</default>
        <docblock line="501">
          <description>String that separates the parent section name</description>
          <long-description></long-description>
          <tag line="501" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="513" namespace="global" package="Default">
        <name>$_skipExtends</name>
        <default>false</default>
        <docblock line="508">
          <description>Whether to skip extends or not</description>
          <long-description></long-description>
          <tag line="508" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="557" package="xFreemwork">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="515">
          <description>Loads the section $section from the config file $filename for
access facilitated by nested object properties.</description>
          <long-description>&lt;p&gt;If the section name contains a ":" then the section name to the right
is loaded and included into the properties. Note that the keys in
this $section will override any keys of the same
name in the sections that have been included via ":".&lt;/p&gt;

&lt;p&gt;If the $section is null, then all sections in the ini file are loaded.&lt;/p&gt;

&lt;p&gt;If any key includes a ".", then this will act as a separator to
create a sub-property.&lt;/p&gt;

&lt;p&gt;example ini file:
     [all]
     db.connection = database
     hostname = live&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; [staging : all]
 hostname = staging
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;after calling $data = new xZend_Config_Ini($file, 'staging'); then
     $data-&gt;hostname === "staging"
     $data-&gt;db-&gt;connection === "database"&lt;/p&gt;

&lt;p&gt;The $options parameter may be provided as either a boolean or an array.
If provided as a boolean, this sets the $allowModifications option of
xZend_Config. If provided as an array, there are two configuration
directives that may be set. For example:&lt;/p&gt;

&lt;p&gt;$options = array(
    'allowModifications' =&gt; false,
    'nestSeparator'      =&gt; '-&gt;'
     );&lt;/p&gt;</long-description>
          <tag line="515" name="param" description="" type="string" variable="$filename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="515" name="param" description="" type="string|null" variable="$section">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
          <tag line="515" name="param" description="" type="boolean|array" variable="$options">
            <type by_reference="false">boolean</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="515" name="throws" description="" type="\xException">
            <type by_reference="false">\xException</type>
          </tag>
          <tag line="515" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="557">
          <name>$filename</name>
          <default></default>
          <type/>
        </argument>
        <argument line="557">
          <name>$section</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="557">
          <name>$options</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="618" package="xFreemwork">
        <name>_parseIniFile</name>
        <full_name>_parseIniFile</full_name>
        <docblock line="610">
          <description>Load the INI file from disk using parse_ini_file().</description>
          <long-description>&lt;p&gt;Use a private error
handler to convert any loading errors into a xException&lt;/p&gt;</long-description>
          <tag line="610" name="param" description="" type="string" variable="$filename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="610" name="throws" description="" type="\xException">
            <type by_reference="false">\xException</type>
          </tag>
          <tag line="610" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="618">
          <name>$filename</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="644" package="xFreemwork">
        <name>_loadIniFile</name>
        <full_name>_loadIniFile</full_name>
        <docblock line="632">
          <description>Load the ini file and preprocess the section separator (':' in the
section name (that is used for section extension) so that the resultant
array has the correct section names and the extension information is
stored in a sub-key called ';extends'.</description>
          <long-description>&lt;p&gt;We use ';extends' as this can
never be a valid key name in an INI file that has been loaded using
parse_ini_file().&lt;/p&gt;</long-description>
          <tag line="632" name="param" description="" type="string" variable="$filename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="632" name="throws" description="" type="\xException">
            <type by_reference="false">\xException</type>
          </tag>
          <tag line="632" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="644">
          <name>$filename</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="681" package="xFreemwork">
        <name>_processSection</name>
        <full_name>_processSection</full_name>
        <docblock line="670">
          <description>Process each element in the section and handle the ";extends" inheritance
key.</description>
          <long-description>&lt;p&gt;Passes control to _processKey() to handle the nest separator
sub-property syntax that may be used within the key name.&lt;/p&gt;</long-description>
          <tag line="670" name="param" description="" type="array" variable="$iniArray">
            <type by_reference="false">array</type>
          </tag>
          <tag line="670" name="param" description="" type="string" variable="$section">
            <type by_reference="false">string</type>
          </tag>
          <tag line="670" name="param" description="" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
          <tag line="670" name="throws" description="" type="\xException">
            <type by_reference="false">\xException</type>
          </tag>
          <tag line="670" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="681">
          <name>$iniArray</name>
          <default></default>
          <type/>
        </argument>
        <argument line="681">
          <name>$section</name>
          <default></default>
          <type/>
        </argument>
        <argument line="681">
          <name>$config</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="713" package="xFreemwork">
        <name>_processKey</name>
        <full_name>_processKey</full_name>
        <docblock line="703">
          <description>Assign the key's value to the property list.</description>
          <long-description>&lt;p&gt;Handles the
nest separator for sub-properties.&lt;/p&gt;</long-description>
          <tag line="703" name="param" description="" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
          <tag line="703" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="703" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="703" name="throws" description="" type="\xException">
            <type by_reference="false">\xException</type>
          </tag>
          <tag line="703" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="713">
          <name>$config</name>
          <default></default>
          <type/>
        </argument>
        <argument line="713">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="713">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="747" package="xFreemwork">
      <extends>\xZend_Config_Ini</extends>
      <name>xConfig</name>
      <full_name>\xConfig</full_name>
      <docblock line="741">
        <description>This class reads and parses .ini config file.</description>
        <long-description>&lt;p&gt;Taken from Zend Framework&lt;/p&gt;</long-description>
        <tag line="741" name="see" description="\global\http://framework.zend.com/manual/en/zend.config.adapters.ini.html" refers="\global\http://framework.zend.com/manual/en/zend.config.adapters.ini.html"/>
        <tag line="741" name="package" description="xFreemwork"/>
      </docblock>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib/Core/Config.php</error>
      <critical line="26" code="50005">No short description for class \xZend_Config</critical>
      <critical line="485" code="50005">No short description for class \xZend_Config_Ini</critical>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="lib/Core/Element.php" hash="34086b23b8aac2d8c7f2ce999d9bbf95" package="Default">
    <include line="83" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="true" namespace="global" line="19" package="xFreemwork">
      <extends/>
      <name>xElement</name>
      <full_name>\xElement</full_name>
      <docblock line="12">
        <description>Famework elements base class.</description>
        <long-description>&lt;p&gt;This clas implements:
- parameters array construction
- loader logic&lt;/p&gt;</long-description>
        <tag line="12" name="package" description="xFreemwork"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="25" namespace="global" package="Default">
        <name>$params</name>
        <default>array()</default>
        <docblock line="21">
          <description>Instance parameters (associative array).</description>
          <long-description></long-description>
          <tag line="21" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="32" namespace="global" package="Default">
        <name>$plugins</name>
        <default>array()</default>
        <docblock line="27">
          <description>Plugins instances.</description>
          <long-description></long-description>
          <tag line="27" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="27" name="see" description="\xPlugin" refers="\xPlugin"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="39" package="xFreemwork">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="34">
          <description>Class constructor.</description>
          <long-description>&lt;p&gt;Classes must be instanciated using xElement::load().&lt;/p&gt;</long-description>
          <tag line="34" name="see" description="\load()" refers="\load()"/>
        </docblock>
        <argument line="39">
          <name>$params</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="52" package="xFreemwork">
        <name>load_plugin</name>
        <full_name>load_plugin</full_name>
        <docblock line="45">
          <description>Loads and stores and activates an instance of the specified plugin with the given params.</description>
          <long-description>&lt;pre&gt;&lt;code&gt;$this-&gt;loadplugin('test', array('text' =&gt; 'Sample text.'));
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="45" name="return" description="The stored plugin instance" type="\xPlugin">
            <type by_reference="false">\xPlugin</type>
          </tag>
        </docblock>
        <argument line="52">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="52">
          <name>$params</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="60" package="xFreemwork">
        <name>load</name>
        <full_name>load</full_name>
        <docblock line="56">
          <description>Loads and returns an instance of the specified xElement.</description>
          <long-description></long-description>
          <tag line="56" name="return" description="An new instance of the specified xElement." type="\xElement">
            <type by_reference="false">\xElement</type>
          </tag>
        </docblock>
        <argument line="60">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="60">
          <name>$params</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="74" package="xFreemwork">
        <name>load_these</name>
        <full_name>load_these</full_name>
        <docblock line="64">
          <description>Helper method for loading and instanciating an xElement.</description>
          <long-description>&lt;p&gt;This method takes an associative array of classname =&gt; filename.
The method will try to load and instanciate each of the
given set of classname =&gt; filename. The first set to load
and instanciate successfully will be returned.&lt;/p&gt;</long-description>
          <tag line="64" name="param" description="Array of classname =&gt; filename to load." type="array" variable="$items">
            <type by_reference="false">array</type>
          </tag>
          <tag line="64" name="param" description="Array of parrameters to pass to the created xEelement instance." type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="64" name="return" description="An xElement instance with the given parameters set." type="\xElement">
            <type by_reference="false">\xElement</type>
          </tag>
        </docblock>
        <argument line="74">
          <name>$items</name>
          <default></default>
          <type/>
        </argument>
        <argument line="74">
          <name>$params</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="true" namespace="global" line="98" package="xFreemwork">
      <extends>\xElement</extends>
      <name>xRestElement</name>
      <full_name>\xRestElement</full_name>
      <docblock line="93">
        <description>Framework RESTful elements base class.</description>
        <long-description>&lt;p&gt;This clas implements the default responses for HTTP methods (get, post, put, delete)&lt;/p&gt;</long-description>
        <tag line="93" name="package" description="xFreemwork"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="105" package="xFreemwork">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="100">
          <description>Default behaviour</description>
          <long-description></long-description>
          <tag line="100" name="throws" description="" type="\xException">
            <type by_reference="false">\xException</type>
          </tag>
          <tag line="100" name="return" description="" type="null">
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="114" package="xFreemwork">
        <name>post</name>
        <full_name>post</full_name>
        <docblock line="109">
          <description>Default behaviour</description>
          <long-description></long-description>
          <tag line="109" name="throws" description="" type="\xException">
            <type by_reference="false">\xException</type>
          </tag>
          <tag line="109" name="return" description="" type="null">
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="123" package="xFreemwork">
        <name>put</name>
        <full_name>put</full_name>
        <docblock line="118">
          <description>Default behaviour</description>
          <long-description></long-description>
          <tag line="118" name="throws" description="" type="\xException">
            <type by_reference="false">\xException</type>
          </tag>
          <tag line="118" name="return" description="" type="null">
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="132" package="xFreemwork">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="127">
          <description>Default behaviour</description>
          <long-description></long-description>
          <tag line="127" name="throws" description="" type="\xException">
            <type by_reference="false">\xException</type>
          </tag>
          <tag line="127" name="return" description="" type="null">
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
    </class>
    <markers>
      <fixme line="86">This doesn't work (plain classes are said not instantiable)</fixme>
    </markers>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib/Core/Element.php</error>
      <error line="34" code="50015">Argument $params is missing from the Docblock of __construct()</error>
      <error line="45" code="50015">Argument $name is missing from the Docblock of load_plugin()</error>
      <error line="45" code="50015">Argument $params is missing from the Docblock of load_plugin()</error>
      <error line="56" code="50015">Argument $name is missing from the Docblock of load()</error>
      <error line="56" code="50015">Argument $params is missing from the Docblock of load()</error>
    </parse_markers>
    <source>eJzVVl1v2zYUffevuA2MWg4SO+26F7fJUrhOayALgiQFBgyDQUvXNhFZ0kjKdtbmv+9ekpKl2I4bDHuoHmyJ5P069/CQH37LZlmj0T1swCEEYRvenrx5C5/EXGIC/VRlwoh8RZM8fznsD65uB/x6N5MaYjlWQj2AfQ0x0RhBnkSowMwQPl99hc/Xl7D4pXNSzB+xrQhD1FqOYwRhYGZM1ut2l8tlZ5rknVRNu36x7k6z+JisOzMzjzmHw8Mu52qTuRBzXKbqHjDGOSZGw1hohDAWWnfKFPkT5Dzza3o8cQyZUGRtUGkQSokHCNNEG5WHRqaJWxKngguJ06kMeeQ8E+G9mCKsLhTinCPTcLchxmQoQuMCw2rgIsG3RgPoscnycwhDCiGSEKvRA7JJQymMXKBLpd0p1p8vhHJjfqRr/3m0aV1oOHXzQfv9RrTrOJ/KhGr3UfVuv3CukepyFltieU/PBOvb2ksQU9WpzaCGea4NjLFIhypmrmiZTEvIej3GPKgAwGm5sVpWmUoNhuxgkie2ZTAalcGDNThJHsdt6gT4p9uFQaJzRfkwQacEegJ+NXFFJFVY6JETCF5JPWI/hds2vH4NPOjAKEbblZ6svhoZ93q0QP6D5Yr3pdumIWYen21ZLx5Gc1RTMqouOYK6j8cN/C8JJM4/Ak3go3slUsoF4WwLK2gA6cTWrjMM5UQShq69sJRmtoFK2YoPYRrhWfHls+PWOOugRWFM68gzhL5WpgWnZ9C6Fbz3gAc6rXYBAjns1jyeKzS5SgoS0t5FV0qZX1HAPiZwUiOfVTOhfVaid+rpW2WED1vA7Zj+51/cFJeJJ2Xd0w/0wTneA33B/M4GDIWKfEwgweULXDhcaLWRYR2UJzVs2R5mptKljbcarELM2DRoXaVmLaAYHVFDkIW2HKPsIJzJOHISiJp48OvJm50gfcE4I2UlBZyl1LhU2fRYCRi4tUC4kU2QrK57ayPuHb83dJShsvlw1UzFiYyR3yt+sHCzlHEMhk4yk9pknmSCgCKcefALc7dPNJrdkWyIiVQkfbzOOy8cPI2hc3suTqgrDy4j0ktHCIzWFLHt8zV+fLbSIuAe24y//XlEFhlLOf0zz0KFVqhXAyx77Zj4LGXL95K329TFRSRgOjv29DYWj8iJJn2UBivCuIXMzYWIZeQn1tpLdLO99B6IN9B0JzcB12Tkqk74WfXThOWr12vSZYBVbxoc3KkHpqcHuOcsD46gVZTequh9cZTwmhGupDY6cKHaMKZ07utLMabdVSTlPG+U8Vg/o/zq79/hla9h114GB4t16rOn7fru5B1haRGp5L218ku3V/eUrPDvXCocpdR8X+sev8Pqvu/5+ne5p4O8P8PwXnP5jmRGCr5QjpE77LcNt6h+bjjbi+Efvw96TkiiFHXSMmCvkkEWC1Yzf2kR5EkLgitJTS1Mu+KtqUJuDyF9g5MYLVXtrSdwNdTSdt1S4fHZUA8rDvlU2tqyg75I1tGdUHxzjh8PaoDbXcjWbjZ4elY9rm/Oqrg63wxu70hvXnSFtts4wonIY0NhdZbyVd3q+Je7u2svqXS1naKhwyLV/JvTT0RRDEP345fpG7pVFFpChMEkevaG/clnNcaZWMg0V6VIWWx1Bdin8sXbqyZDpepQGcGLT8k9R+D/kihD/ZNkmv8kiTrK/udcH/8FLtO2jA==</source>
  </file>
  <file path="lib/Core/Bootstrap.php" hash="9efd97158665f393abfd59bf796c02b9" package="Default">
    <include line="101" type="Require Once" package="Default">
      <name>Core/Logger.php</name>
    </include>
    <include line="102" type="Require Once" package="Default">
      <name>Core/Util.php</name>
    </include>
    <include line="103" type="Require Once" package="Default">
      <name>Core/Exception.php</name>
    </include>
    <include line="104" type="Require Once" package="Default">
      <name>Core/Context.php</name>
    </include>
    <include line="105" type="Require Once" package="Default">
      <name>Core/Config.php</name>
    </include>
    <include line="106" type="Require Once" package="Default">
      <name>Core/Bootstrap.php</name>
    </include>
    <include line="107" type="Require Once" package="Default">
      <name>Core/Element.php</name>
    </include>
    <include line="108" type="Require Once" package="Default">
      <name>Core/Controller.php</name>
    </include>
    <include line="109" type="Require Once" package="Default">
      <name>Core/WebController.php</name>
    </include>
    <include line="110" type="Require Once" package="Default">
      <name>Front/Front.php</name>
    </include>
    <include line="111" type="Require Once" package="Default">
      <name>Front/WebFront.php</name>
    </include>
    <include line="112" type="Require Once" package="Default">
      <name>Front/RestFront.php</name>
    </include>
    <include line="113" type="Require Once" package="Default">
      <name>Front/ApiFront.php</name>
    </include>
    <include line="114" type="Require Once" package="Default">
      <name>Front/JsFront.php</name>
    </include>
    <include line="115" type="Require Once" package="Default">
      <name>Front/ModelFront.php</name>
    </include>
    <include line="116" type="Require Once" package="Default">
      <name>Front/RssFront.php</name>
    </include>
    <include line="117" type="Require Once" package="Default">
      <name>Util/Router.php</name>
    </include>
    <include line="118" type="Require Once" package="Default">
      <name>Util/Script.php</name>
    </include>
    <include line="119" type="Require Once" package="Default">
      <name>Util/Auth.php</name>
    </include>
    <include line="120" type="Require Once" package="Default">
      <name>Util/Form.php</name>
    </include>
    <include line="121" type="Require Once" package="Default">
      <name>Data/Validator.php</name>
    </include>
    <include line="122" type="Require Once" package="Default">
      <name>Data/Model.php</name>
    </include>
    <include line="123" type="Require Once" package="Default">
      <name>Data/ModelPostgres.php</name>
    </include>
    <include line="124" type="Require Once" package="Default">
      <name>Data/ModelMysql.php</name>
    </include>
    <include line="125" type="Require Once" package="Default">
      <name>Data/Transaction.php</name>
    </include>
    <include line="126" type="Require Once" package="Default">
      <name>View/View.php</name>
    </include>
    <include line="127" type="Require Once" package="Default">
      <name>Misc/Helpers/FormHelper.php</name>
    </include>
    <include line="128" type="Require Once" package="Default">
      <name>Misc/Helpers/ValidatorHelper.php</name>
    </include>
    <function namespace="global" line="238" package="Default">
      <name>myErrorHandler</name>
      <full_name>\myErrorHandler</full_name>
      <argument line="238">
        <name>$errno</name>
        <default></default>
        <type/>
      </argument>
      <argument line="238">
        <name>$errstr</name>
        <default></default>
        <type/>
      </argument>
      <argument line="238">
        <name>$errfile</name>
        <default></default>
        <type/>
      </argument>
      <argument line="238">
        <name>$errline</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="320" package="Default">
      <name>_</name>
      <full_name>\_</full_name>
      <argument line="320">
        <name>$str</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <class final="false" abstract="false" namespace="global" line="16" package="xFreemwork">
      <extends/>
      <name>xDummyLogger</name>
      <full_name>\xDummyLogger</full_name>
      <docblock line="11">
        <description>This class is a dummy logger.</description>
        <long-description>&lt;p&gt;Used for early stage bootstrap setup.&lt;/p&gt;</long-description>
        <tag line="11" name="package" description="xFreemwork"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="17" package="xFreemwork">
        <name>__call</name>
        <full_name>__call</full_name>
        <argument line="17">
          <name>$m</name>
          <default></default>
          <type/>
        </argument>
        <argument line="17">
          <name>$a</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="28" package="xFreemwork">
      <extends/>
      <name>xBootstrap</name>
      <full_name>\xBootstrap</full_name>
      <docblock line="20">
        <description>This class creates the application context and launches the router.</description>
        <long-description>&lt;p&gt;Responsibilities
- create application context (environment variables, configuration, database, etc)
- launch the router and output the HTTP response body&lt;/p&gt;</long-description>
        <tag line="20" name="package" description="xFreemwork"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="30" package="xFreemwork">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="48" package="xFreemwork">
        <name>handle_exception</name>
        <full_name>handle_exception</full_name>
        <docblock line="42">
          <description>Called when an exception is catched by the bootstrap.</description>
          <long-description>&lt;p&gt;This method handles exceptions
and outputs the HTTP response body.&lt;/p&gt;</long-description>
          <tag line="42" name="param" description="The catched exception." type="\Exception" variable="$exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="48">
          <name>$exception</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="64" package="xFreemwork">
        <name>setup</name>
        <full_name>setup</full_name>
        <docblock line="61">
          <description>Setups the application context.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="87" package="xFreemwork">
        <name>run</name>
        <full_name>run</full_name>
        <docblock line="84">
          <description>Runs the application and outputs the HTTP response body.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="98" package="xFreemwork">
        <name>setup_includes</name>
        <full_name>setup_includes</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="131" package="xFreemwork">
        <name>setup_dummy_log</name>
        <full_name>setup_dummy_log</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="136" package="xFreemwork">
        <name>setup_includes_externals</name>
        <full_name>setup_includes_externals</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="141" package="xFreemwork">
        <name>setup_config</name>
        <full_name>setup_config</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="203" package="xFreemwork">
        <name>get_config_files</name>
        <full_name>get_config_files</full_name>
        <docblock line="197">
          <description>Returns an array containing the existing additional configuration files,
in alphabetical order.</description>
          <long-description></long-description>
          <tag line="197" name="param" description="The path(s) to process, relative to config/ directory." type="string|array" variable="$paths">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="197" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="203">
          <name>$paths</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="228" package="xFreemwork">
        <name>setup_error_reporting</name>
        <full_name>setup_error_reporting</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="236" package="xFreemwork">
        <name>setup_error_handler</name>
        <full_name>setup_error_handler</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="247" package="xFreemwork">
        <name>setup_log</name>
        <full_name>setup_log</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="254" package="xFreemwork">
        <name>setup_db</name>
        <full_name>setup_db</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="260" package="xFreemwork">
        <name>create_db</name>
        <full_name>create_db</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="268" package="xFreemwork">
        <name>create_db_mysql</name>
        <full_name>create_db_mysql</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="293" package="xFreemwork">
        <name>create_db_postgres</name>
        <full_name>create_db_postgres</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="305" package="xFreemwork">
        <name>setup_auth</name>
        <full_name>setup_auth</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="315" package="xFreemwork">
        <name>setup_i18n</name>
        <full_name>setup_i18n</full_name>
        <docblock line="310">
          <description>Sets up the default language.</description>
          <long-description>&lt;p&gt;Persistant language selection and gettext setup is done xWebFront controller.&lt;/p&gt;</long-description>
          <tag line="310" name="see" description="\xFront::setup_i18n()" refers="\xFront::setup_i18n()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="327" package="xFreemwork">
        <name>setup_router</name>
        <full_name>setup_router</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="341" package="xFreemwork">
        <name>setup_addons</name>
        <full_name>setup_addons</full_name>
      </method>
    </class>
    <markers>
      <todo line="145">Allow Bootstrap user to switch profile and re-setup</todo>
      <todo line="243">this should catch all errors excpet notices and warnings</todo>
    </markers>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib/Core/Bootstrap.php</error>
      <error line="238" code="50009">No DocBlock was found for function \myErrorHandler()</error>
      <error line="320" code="50009">No DocBlock was found for function \_()</error>
      <error line="17" code="50010">No DocBlock was found for method __call()</error>
      <error line="30" code="50010">No DocBlock was found for method __construct()</error>
      <error line="98" code="50010">No DocBlock was found for method setup_includes()</error>
      <error line="131" code="50010">No DocBlock was found for method setup_dummy_log()</error>
      <error line="136" code="50010">No DocBlock was found for method setup_includes_externals()</error>
      <error line="141" code="50010">No DocBlock was found for method setup_config()</error>
      <error line="228" code="50010">No DocBlock was found for method setup_error_reporting()</error>
      <error line="236" code="50010">No DocBlock was found for method setup_error_handler()</error>
      <error line="247" code="50010">No DocBlock was found for method setup_log()</error>
      <error line="254" code="50010">No DocBlock was found for method setup_db()</error>
      <error line="260" code="50010">No DocBlock was found for method create_db()</error>
      <error line="268" code="50010">No DocBlock was found for method create_db_mysql()</error>
      <error line="293" code="50010">No DocBlock was found for method create_db_postgres()</error>
      <error line="305" code="50010">No DocBlock was found for method setup_auth()</error>
      <error line="327" code="50010">No DocBlock was found for method setup_router()</error>
      <error line="341" code="50010">No DocBlock was found for method setup_addons()</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="lib/Core/Context.php" hash="403718c1f649520f8e611a608afe1c78" package="Default">
    <class final="false" abstract="false" namespace="global" line="17" package="xFreemwork">
      <extends/>
      <name>xContext</name>
      <full_name>\xContext</full_name>
      <docblock line="11">
        <description>This class contains the application context.</description>
        <long-description>&lt;p&gt;It is a globally accessible static class that contains application-wide
settings and tools&lt;/p&gt;</long-description>
        <tag line="11" name="package" description="xFreemwork"/>
      </docblock>
      <property final="false" static="true" visibility="public" line="29" namespace="global" package="Default">
        <name>$profile</name>
        <default></default>
        <docblock line="19">
          <description>Application profile: used to determine in what environement the application runs.</description>
          <long-description>&lt;p&gt;Should be defined by the bootstrap or by the main php file (index.php).&lt;/p&gt;

&lt;p&gt;Typically used to determine what configuration section should be used
from application .ini file.&lt;/p&gt;</long-description>
          <tag line="19" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="35" namespace="global" package="Default">
        <name>$basepath</name>
        <default></default>
        <docblock line="31">
          <description>The base path of the application (absolute form).</description>
          <long-description></long-description>
          <tag line="31" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="41" namespace="global" package="Default">
        <name>$configpath</name>
        <default></default>
        <docblock line="37">
          <description>The config path of the application (absolute form).</description>
          <long-description></long-description>
          <tag line="37" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="47" namespace="global" package="Default">
        <name>$libpath</name>
        <default></default>
        <docblock line="43">
          <description>The base path of the xfreemwork library (absolute form).</description>
          <long-description></long-description>
          <tag line="43" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="53" namespace="global" package="Default">
        <name>$baseuri</name>
        <default></default>
        <docblock line="49">
          <description>The base uri of the application.</description>
          <long-description></long-description>
          <tag line="49" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="59" namespace="global" package="Default">
        <name>$baseurl</name>
        <default></default>
        <docblock line="55">
          <description>The base url of the application (including http://domaine.tld/baseuri).</description>
          <long-description></long-description>
          <tag line="55" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="65" namespace="global" package="Default">
        <name>$lang</name>
        <default></default>
        <docblock line="61">
          <description>The current language (as defined in config i18n.lang.alias directive).</description>
          <long-description></long-description>
          <tag line="61" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="71" namespace="global" package="Default">
        <name>$config</name>
        <default></default>
        <docblock line="67">
          <description>The application configuration data object.</description>
          <long-description></long-description>
          <tag line="67" name="var" description="" type="\Zend_Config_Ini">
            <type by_reference="false">\Zend_Config_Ini</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="78" namespace="global" package="Default">
        <name>$error_reporting</name>
        <default></default>
        <docblock line="73">
          <description>The numeric value of the PHP reporting level,
as set in the bootstrap from config file.</description>
          <long-description></long-description>
          <tag line="73" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="84" namespace="global" package="Default">
        <name>$log</name>
        <default></default>
        <docblock line="80">
          <description>The application-wide logger object.</description>
          <long-description></long-description>
          <tag line="80" name="var" description="" type="\xLogger">
            <type by_reference="false">\xLogger</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="92" namespace="global" package="Default">
        <name>$bootstrap</name>
        <default></default>
        <docblock line="86">
          <description>The application-wide bootstrap object.</description>
          <long-description>&lt;p&gt;Set by xBootstrap.&lt;/p&gt;</long-description>
          <tag line="86" name="var" description="" type="\xBootstrap">
            <type by_reference="false">\xBootstrap</type>
          </tag>
          <tag line="86" name="see" description="\xBootstrap" refers="\xBootstrap"/>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="100" namespace="global" package="Default">
        <name>$router</name>
        <default></default>
        <docblock line="94">
          <description>The application-wide router object.</description>
          <long-description>&lt;p&gt;Set by xBootstrap.&lt;/p&gt;</long-description>
          <tag line="94" name="var" description="" type="\xRouter">
            <type by_reference="false">\xRouter</type>
          </tag>
          <tag line="94" name="see" description="\xBootstrap" refers="\xBootstrap"/>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="108" namespace="global" package="Default">
        <name>$front</name>
        <default></default>
        <docblock line="102">
          <description>The application-wide front object.</description>
          <long-description>&lt;p&gt;As instanciated by the xRouter.&lt;/p&gt;</long-description>
          <tag line="102" name="var" description="" type="\xBootstrap">
            <type by_reference="false">\xBootstrap</type>
          </tag>
          <tag line="102" name="see" description="\xRouter::route()" refers="\xRouter::route()"/>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="114" namespace="global" package="Default">
        <name>$db</name>
        <default></default>
        <docblock line="110">
          <description>The application-wide database object.</description>
          <long-description></long-description>
          <tag line="110" name="var" description="" type="\ressource">
            <type by_reference="false">\ressource</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="120" namespace="global" package="Default">
        <name>$auth</name>
        <default></default>
        <docblock line="116">
          <description>The application-wide auth object.</description>
          <long-description></long-description>
          <tag line="116" name="var" description="" type="\xAuth">
            <type by_reference="false">\xAuth</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="132" package="xFreemwork">
        <name>dump</name>
        <full_name>dump</full_name>
        <docblock line="128">
          <description>Returns a text dump of the context object for inspection.</description>
          <long-description></long-description>
          <tag line="128" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib/Core/Context.php</error>
    </parse_markers>
    <source>eJytVk1v2zgQvftXDIo92EYq9+NSpAtss9luGyAogia97MWgpbHMLUUKQ9J2UOS/d4b6iGOribNYHWKF5Lz35pEz4u9/1Kt6NJuOYArjfAJvXr1+A3+pSqOFc0e1CipueVLmLy/OP365/iivNyvtwegFKbqF9Jqj9VhAtAUShBXCpy/f4NPVJazfZq+6+ROJVXmO3uuFQVABViHUp7PZZrPJShszR+WsXexnZW1ecnS2CpURDdPpbMRap72C3CjPf50NSlufaFVdc7wK2tk0gduQyfqLIDoVlMYtlDG3uzJ84PV5ixZWrKqH3IF7udEFCpTHELQtedIWEJwzXkY/1Cr/rkqE7d+EWG0cfefh2ahB3Z43WuDHaAT8pCzkmcLZjuKa3FIbPIUoZgYHBQakSlsEbWEj0tCuNTmLFdpwkDFF67MWuMO/XrloClgggy0ZiV9vU+DCueADqRocdWMVZw18JEBkwFjzdm4z/n+yj3pzWzOpGHkoddNauNRlpEaYx7z57cVIWAe2JFc9yCPTVicJ+7Qf1op4v4j9b4dm6bfdwt9aA98fuHwjCSuPwEd6BW55YN1YLbwzMSAsHVV9vk8yCqhgDlM2LvzvpA3sr2kPMt0uu0PZl+1/5eb4J4gj6YFkn+UoQzxKYAbd1DY3sWDcrq0UTg40ZsEUsxb2eTvLTL/Y2EgkFWiULaOU/Vj5vsC07TZev35nM1mTKaNlhSaphDU+w2+OHtaw1+t2yq3gvg1u8S9zPeT5B20xP09r5xdWP3K4hiltrJB40VqZiN0eXH2+AsLakbRFMLhGc9IFcc7cL8WRhy0nlXxr0m6hNzK1DYPSkMjRvOd60pbUs8G4suSv0pAf28s0N2y8O5Zgp5M+5Ljm1Lmzbv/sFuyx9+P9sEc8HN47l93skerIcZEfpP+UtK8p6jm6Gp4jRfH+c/XsaTrzvPMMZ3Otwv2HqtVynHfN2tPTpGY8GVSayI8UKqWUms7Q8SG+QrhIOQ7SFIsjOVSUTj10PM94ZhBbQhh9H/6KuPps6K5G927uNOAGqCa9VtL8o20+zfM5lyMbGvMwnsCPuwPsrxgiyZ0I0k2miFXddYD2ptXmIB8Uoa6bj/59SpQQHml2vRgBFxXNIn7aUFZtw5zGJYZ5SnHONvnxi+5+9WJyApwCTt6nyLvR3egn+k07XQ==</source>
  </file>
  <file path="lib/Core/Exception.php" hash="704efc474e0cd267ab9c275c00ce9b4c" package="Default">
    <class final="false" abstract="false" namespace="global" line="15" package="xFreemwork">
      <extends>\Exception</extends>
      <name>xException</name>
      <full_name>\xException</full_name>
      <docblock line="11">
        <description>This class enhances the native PHP Exception with xFreemwork specific information.</description>
        <long-description></long-description>
        <tag line="11" name="package" description="xFreemwork"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="21" namespace="global" package="Default">
        <name>$status</name>
        <default></default>
        <docblock line="17">
          <description>The HTTP status to be associated with the exception, if applicable.</description>
          <long-description></long-description>
          <tag line="17" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="29" namespace="global" package="Default">
        <name>$statuses</name>
        <default>array(200 =&gt; 'HTTP/1.0 200 OK', 201 =&gt; 'HTTP/1.0 201 Created', 202 =&gt; 'HTTP/1.0 202 Accepted', 400 =&gt; 'HTTP/1.0 400 Bad Request', 401 =&gt; 'HTTP/1.0 401 Unauthorized', 403 =&gt; 'HTTP/1.0 403 Forbidden', 404 =&gt; 'HTTP/1.0 404 Not Found', 405 =&gt; 'HTTP/1.0 405 Method Not Allowed', 500 =&gt; 'HTTP/1.0 500 Internal Server Error', 501 =&gt; 'HTTP/1.0 501 Not Implemented')</default>
        <docblock line="23">
          <description>Static definition of possible HTTP statues
with their associated text header definition.</description>
          <long-description></long-description>
          <tag line="23" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="23" name="todo" description="fixme: successful 2xx responses do not belong to an exception,"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="49" namespace="global" package="Default">
        <name>$data</name>
        <default>array()</default>
        <docblock line="45">
          <description>Additional data about exception</description>
          <long-description></long-description>
          <tag line="45" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="51" package="xFreemwork">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="51">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
        <argument line="51">
          <name>$status</name>
          <default>500</default>
          <type/>
        </argument>
        <argument line="51">
          <name>$data</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="68" package="xFreemwork">
        <name>__toString</name>
        <full_name>__toString</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib/Core/Exception.php</error>
      <error line="51" code="50010">No DocBlock was found for method __construct()</error>
      <error line="68" code="50010">No DocBlock was found for method __toString()</error>
    </parse_markers>
    <source>eJyFVd9v2jAQfuevOFWVBogSSuEl27ox1nbVuq4a7G1SZZIjsRbszHZKtqr/+86GECftND8AOn939333w7x5l6d5J+h3oA/dqAfj0ekYPrINRwFzqXJmWFHSpb2/uZ5f3C4u7M9lyjVkfKWY+g3uZ4RCYwyFiFGBSRGubr/D1d0NPJwNR9X9wPqyKEKt+SpDYAZSY/IwCLbb7TARxVCqJNiDdZDk2Ql5D1OzySyHfj/oENf+gUGUMa0BRcoExXRpBTP8AeHu0x1clBHmhksBW25SKC8V4mYr1U/QOUZ8zSPgYi3VhlnQ0EZ9n7PoJ0vQA7usu0RlHRFLgyLWXo7HTgfoOHr2WIoIn5bLO9CGmYLoSViRZq1lxJmhYjlaljRWUQbA18DynErAqEDDKtT7B6aIrMEE1d4WuG9rP97Ff/2MwILsJDLGNRfckZRryOW++DU11JVHxYgrn6chtZAis62tgzXJMaXY74PFyFjCmpcbDEEXruHrIoNxWYJCnUvbXiCIkIZqkkmR2Oow4VWiIVPvlOyVku/bXcLuDmVlB7AovDyHi/FoBG/P4ZWVG5zSLFrD18+vBh7itI04hblCq70BG7dhY5hFlm8DR0zmGe2PAVRKKph4ZCZtMtbwgcXwDX9RG4wXZtJmZQ3fBStMKhX/00g5GZ21sWdwKdWKxzGKBnDSBk7glppwKWlzG8BpGziFL0i5Y4efZZnctmUvUD3QiOxkTz3Z07Zsa7imcVaCZZXbhXXzAk7bBbAGm/t6k2e4oQJTfofuPR/9WRy7IaXwMb1hwFayMPV0/XN0va1yftWcVSnWhYjcJt3fRzTFRhWR6R5vaO7o1RhUA0pupHDQjtGjR6JSlzNFCsLwpTiUrIIdG3rnTs4PYQ+73gLsE7mE9WU5l8IubxgeZzI5OaePemPsaS1RdY5ucVsXC7qPDRpPvRAeK65PR4Pn7guHs6iG30vQL7sw/4v4kXSFcDTw9b4AWyoWoY9L0DjbTC+M4iLp9hpOvWYM59Q0lTcyoUc3DC9ny9nN4WrfoqdnU2FklchrtkJTKOH13EMN4eiH+CHqP5J4J5UucoKYe9X1NQONCtbZn/4CnA4khQ==</source>
  </file>
  <file path="lib/Core/Controller.php" hash="5a06cae0b99270fb2203cd92e8222264" package="Default">
    <class final="false" abstract="true" namespace="global" line="21" package="xFreemwork">
      <extends>\xRestElement</extends>
      <name>xController</name>
      <full_name>\xController</full_name>
      <docblock line="11">
        <description>Base controller class.</description>
        <long-description>&lt;p&gt;Deals with caller interactions (request &amp;amp; response).&lt;/p&gt;

&lt;p&gt;Responsibilities
- expose user actions
- manage user inputs
- output user data&lt;/p&gt;</long-description>
        <tag line="11" name="package" description="xFreemwork"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="34" package="xFreemwork">
        <name>load</name>
        <full_name>load</full_name>
        <docblock line="23">
          <description>Loads and returns the controller specified object.</description>
          <long-description>&lt;p&gt;For example, the following code will
load the controllers/entry.php file.
and return an instance of the EntryController class:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;xController::load('entry');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="23" name="param" description="The controller to load." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="23" name="return" description="" type="\xController">
            <type by_reference="false">\xController</type>
          </tag>
        </docblock>
        <argument line="34">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="34">
          <name>$params</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="45" package="xFreemwork">
        <name>scan</name>
        <full_name>scan</full_name>
        <docblock line="41">
          <description>Scans and returns available controllers.</description>
          <long-description></long-description>
          <tag line="41" name="return" description="An array of available models (filename =&gt; controllername)." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="56" package="xFreemwork">
        <name>call</name>
        <full_name>call</full_name>
        <docblock line="52">
          <description>Calls a controller action and returns its output.</description>
          <long-description></long-description>
          <tag line="52" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="56">
          <name>$action</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib/Core/Controller.php</error>
      <error line="23" code="50015">Argument $params is missing from the Docblock of load()</error>
      <error line="52" code="50015">Argument $action is missing from the Docblock of call()</error>
    </parse_markers>
    <source>eJx9VV2v2jgQfedXTBFqkitIbrt9ouX2g9Jqpapa9eNtJWSSCbh17NR2CleI/75jO4Tkcrt5CGbGM3PmnLHz6nW9q0fZzQhuIM4TeH777Dm8ZxVHCUula2ZZcyCn83/6e7n6/HXllt923IDgG830PfhljtJgAY0sUIPdIXz8/B0+/vMJfv+V3p79UxfL8hyN4RuBwCzsrK3nWbbf79OtbFKlt1m72WTbWswoOt3ZSjgMNzfZiLB6MO+YQciVtFoJQSVzwYxJnec9MmFgz+0OcuZ9XFrULLdcSQOxxl8NGgtPQaOpyYRJ2nb4JRj4hgtuORpnmwEeakXFGkOp2izBUTHJtq2Dy7qxrV01lv4Ee0EMOuubmuU/3e7DB41Y7ZX+6fthG2MdttAAHJaXlvBgURZkI1h2JbBCaeE4GgE9ngX3kCyK0SYmC+rHNppadPT3qDE15rzkpI7a/MDcpufID8oVYVUtcOqDSgpQey63FF4gcSjEea+gKg8Sm4wA6fuUJghKLrDLe8FCS2LGWCZzBFX6BCsXtHyg3Pwc+8pVvjv/69ExnzsIceRrRsnLLiAbRBDPmlVApLo2vg2ZsMr30QF906LslWldmf8l4JbnUDbSy+6D44lkFfE18YUMLEA2QiQkDLTPxJHhHExrdh939pBRrzXWguUYB3eURVOIUveaudc6SuhNK18nSccXbGNY3AWsNBrz+WRDZ4BO6C4dZ31Vjj7y5HQZd8XPhNHTNm1QlIHUNcliMA64u87aiNPVwH3NmRwOHPvNuGDuRPdwXLHs+4W35wWNwyWuIg3p1MYOgkPvOr3kCkz8rzSGQMWPquA8BdfxY8RFfeKiHkdDDdcFL8uOn1Y3L1maRsljYbXGbSd0lP3rxJg4pd2wTNt915oE+5+IX9J1RmT3JzrcRwMxuDXtDXSlQDgVAx47At1dGU9CvgGPbYkFPMGqtveXPa873xyiAkvWCBu9fBi4rtDuVOGE6M1+mHU35W22NHrrF70EvIRzsePtCRYLfzjoDtFqDxL3cFgdcqydPx6HaDi2ASf3VZLKQoWMbk06+BsMn4NiPIUXt8963PcGQ6jt7I5e8dhxHS7CjuvjsKMTjVtYUcaJpS9iMsT+JHjXeODGmthvmT6gJflTP8srjV03paIP7PzSpe/lxSNz5GrN7oa14u5En/4D9GpzzA==</source>
  </file>
  <file path="lib/Util/Script.php" hash="76786d507ac08369fb2dfd7b260659a4" package="Default">
    <include line="67" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="true" namespace="global" line="15" package="xFreemwork">
      <extends/>
      <name>xScript</name>
      <full_name>\xScript</full_name>
      <docblock line="11">
        <description>This class is used to create command line scripts</description>
        <long-description></long-description>
        <tag line="11" name="package" description="xFreemwork"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="17" namespace="global" package="Default">
        <name>$timer_start</name>
        <default>null</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="23" package="xFreemwork">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="19">
          <description>Setups script components.</description>
          <long-description></long-description>
          <tag line="19" name="param" description="If true, calls the run() method automatically from constructor." type="bool" variable="$autorun">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="23">
          <name>$autorun</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="29" package="xFreemwork">
        <name>timer_start</name>
        <full_name>timer_start</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="32" package="xFreemwork">
        <name>timer_lapse</name>
        <full_name>timer_lapse</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="40" package="xFreemwork">
        <name>setup</name>
        <full_name>setup</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="66" package="xFreemwork">
        <name>setup_bootstrap</name>
        <full_name>setup_bootstrap</full_name>
        <docblock line="62">
          <description>Setups Bootstrap.</description>
          <long-description>&lt;p&gt;You might want to refine this method if you are using a custom bootstrap.&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="71" package="xFreemwork">
        <name>print_profile_information</name>
        <full_name>print_profile_information</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="85" package="xFreemwork">
        <name>init</name>
        <full_name>init</full_name>
        <docblock line="82">
          <description>Hook for initializing specific things.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="87" package="xFreemwork">
        <name>autorun</name>
        <full_name>autorun</full_name>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="106" package="xFreemwork">
        <name>run</name>
        <full_name>run</full_name>
        <docblock line="102">
          <description>The actual user script logic.</description>
          <long-description>&lt;p&gt;This method is to be defined in child class.&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="114" package="xFreemwork">
        <name>log</name>
        <full_name>log</full_name>
        <docblock line="108">
          <description>Outputs a string on stdout, optionally indenting it</description>
          <long-description></long-description>
          <tag line="108" name="param" description="The string to output" type="string" variable="$msg">
            <type by_reference="false">string</type>
          </tag>
          <tag line="108" name="param" description="The indentation level" type="int" variable="$indent_level">
            <type by_reference="false">int</type>
          </tag>
          <tag line="108" name="param" description="The indentation symbol to use" type="string" variable="$indent_symbol">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="114">
          <name>$msg</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="114">
          <name>$indent_level</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="114">
          <name>$indent_symbol</name>
          <default>'*'</default>
          <type/>
        </argument>
        <argument line="114">
          <name>$newline</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="122" package="xFreemwork">
        <name>prompt</name>
        <full_name>prompt</full_name>
        <argument line="122">
          <name>$msg</name>
          <default></default>
          <type/>
        </argument>
        <argument line="122">
          <name>$indent_level</name>
          <default>1</default>
          <type/>
        </argument>
        <argument line="122">
          <name>$indent_symbol</name>
          <default>'&gt;'</default>
          <type/>
        </argument>
        <argument line="122">
          <name>$newline</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="129" package="xFreemwork">
        <name>confirm</name>
        <full_name>confirm</full_name>
        <argument line="129">
          <name>$msg</name>
          <default></default>
          <type/>
        </argument>
        <argument line="129">
          <name>$indent_level</name>
          <default>1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="143" package="xFreemwork">
        <name>opt</name>
        <full_name>opt</full_name>
        <docblock line="134">
          <description>Returns information about the given option:
- false: option is not found
- true: option is found with no value
- mixed: option is found with the given value</description>
          <long-description></long-description>
          <tag line="134" name="see" description="\http://php.net/manual/en/function.getopt.php" refers="\http://php.net/manual/en/function.getopt.php"/>
          <tag line="134" name="param" description="Options string as defined in PHP getopt()" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="134" name="return" description="Information about the given option" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="143">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="151" package="xFreemwork">
        <name>display_help</name>
        <full_name>display_help</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="157" package="xFreemwork">
        <name>help</name>
        <full_name>help</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib/Util/Script.php</error>
      <error line="17" code="50018">No DocBlock was found for property $timer_start</error>
      <error line="29" code="50010">No DocBlock was found for method timer_start()</error>
      <error line="32" code="50010">No DocBlock was found for method timer_lapse()</error>
      <error line="40" code="50010">No DocBlock was found for method setup()</error>
      <error line="71" code="50010">No DocBlock was found for method print_profile_information()</error>
      <error line="87" code="50010">No DocBlock was found for method autorun()</error>
      <error line="108" code="50015">Argument $newline is missing from the Docblock of log()</error>
      <error line="122" code="50010">No DocBlock was found for method prompt()</error>
      <error line="129" code="50010">No DocBlock was found for method confirm()</error>
      <error line="151" code="50010">No DocBlock was found for method display_help()</error>
      <error line="157" code="50010">No DocBlock was found for method help()</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="lib/Util/Auth.php" hash="22ac93e219ee59ee3de6fe4eb6ae9adb" package="Default">
    <class final="false" abstract="false" namespace="global" line="19" package="xFreemwork">
      <extends/>
      <name>xAuth</name>
      <full_name>\xAuth</full_name>
      <docblock line="11">
        <description>Auth container interface.</description>
        <long-description>&lt;p&gt;Session infos structure:
- username: username of the authenticted user
- roles: csv roles&lt;/p&gt;</long-description>
        <tag line="11" name="package" description="xFreemwork"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="21" namespace="global" package="Default">
        <name>$role_separator</name>
        <default>','</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="23" package="xFreemwork">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="32" package="xFreemwork">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="25">
          <description>Sets auth information.</description>
          <long-description>&lt;p&gt;To be used upon successful authentication.&lt;/p&gt;</long-description>
          <tag line="25" name="param" description="Username" type="string" variable="$username">
            <type by_reference="false">string</type>
          </tag>
          <tag line="25" name="param" description="Comma-separated roles names" type="string" variable="$roles">
            <type by_reference="false">string</type>
          </tag>
          <tag line="25" name="param" description="Additional user information" type="array" variable="$info">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="32">
          <name>$username</name>
          <default></default>
          <type/>
        </argument>
        <argument line="32">
          <name>$roles</name>
          <default></default>
          <type/>
        </argument>
        <argument line="32">
          <name>$info</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="39" package="xFreemwork">
        <name>clear</name>
        <full_name>clear</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="47" package="xFreemwork">
        <name>username</name>
        <full_name>username</full_name>
        <docblock line="43">
          <description>Returns the authenticated user username.</description>
          <long-description></long-description>
          <tag line="43" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="55" package="xFreemwork">
        <name>roles</name>
        <full_name>roles</full_name>
        <docblock line="51">
          <description>Returns an array containing the authenticated user roles.</description>
          <long-description></long-description>
          <tag line="51" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="67" package="xFreemwork">
        <name>info</name>
        <full_name>info</full_name>
        <docblock line="61">
          <description>Returns an array containing the authenticated user additional information.</description>
          <long-description>&lt;p&gt;If a key is given, returns the corresponding value, or null if key is invalid.&lt;/p&gt;</long-description>
          <tag line="61" name="param" description="Optional array key" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="61" name="return" description="" type="array|\scalar">
            <type by_reference="false">array</type>
            <type by_reference="false">\scalar</type>
          </tag>
        </docblock>
        <argument line="67">
          <name>$key</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="76" package="xFreemwork">
        <name>logintime</name>
        <full_name>logintime</full_name>
        <docblock line="72">
          <description>Returns the timestamp of the login point in time.</description>
          <long-description></long-description>
          <tag line="72" name="return" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="85" package="xFreemwork">
        <name>is_role</name>
        <full_name>is_role</full_name>
        <docblock line="80">
          <description>Returns true if the authenticated user has the given role(s).</description>
          <long-description></long-description>
          <tag line="80" name="param" description="rolename(s) to check" type="string|array" variable="$rolenames">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="80" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="85">
          <name>$rolenames</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="96" package="xFreemwork">
        <name>is_user</name>
        <full_name>is_user</full_name>
        <docblock line="91">
          <description>Returns true if the authenticated username is the given username.</description>
          <long-description></long-description>
          <tag line="91" name="param" description="rolename" type="string" variable="$username">
            <type by_reference="false">string</type>
          </tag>
          <tag line="91" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="96">
          <name>$username</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib/Util/Auth.php</error>
      <error line="21" code="50018">No DocBlock was found for property $role_separator</error>
      <error line="23" code="50010">No DocBlock was found for method __construct()</error>
      <error line="39" code="50010">No DocBlock was found for method clear()</error>
    </parse_markers>
    <source>eJyVVslu2zAQvfsr5mDAUuDYXW5u0yZI0yJAkRZ1cyoCg6FpmzBFCiSVuEv+vTOkJEuJHDs6JISGb+bNm0V+/zFf5b3xUQ+OIOEpvHn1+g18YpkUGs6NzZlnxQaNZP96eX5xNb2g48+VdKDkrWX2N4QjF9qJORR6Liz4lYAvV9fw5ftXuHs7elXZh4RlnAvn5K0SwDysvM8n4/H9/f1oqYuRsctxedmNl7k6RvRo5TNFHI6Oxj3kGsicFX4F3GjPpMaIUnthF4yLUUl2SjGMRsPCOHDeFtwXVkzIdgyFE1azTEzqE5hFoM3Qr9Beck/ZoDECrFHCTYC7u3ikt6c542u2FLD5bIXI7o1d4+txjyvmHGwCw7+9HuCTW+NFcNkn+MyJnFnmjYUTGAwH7+KtRaG5J9KzGWYWOScp/H2I5pA5PZSdd4FqyM9mjGCjyvrTwK0g8phBju5cESRfFGqbXhtxSnQykknqJVyXmnRbz02WseMyAwwR9AC67x4BmLXsN5zN55KCMRX0bDIu74/b2Tvhk35Vl2FUzOF/AqJewWuSoi4Rjk9/Nr2YTi+/Xf0abAY3+Ie0p0PlZXCDwNrnu/3AEDOiwvEACNGLCDodAFBmiW0rS3an2ZrOSRqRD49agivBbNJMutBBqG7vbS+NzvkhcAy0a/c6q5q9HodtZ9gAKIvfXbAK1KJX4k4PqM0+rkyXrVTOO3XhDv6hWE/IB3Q39wDoIh4ws4VUuFiS2khPtGQsTwYoSjYYgtjkysxF0ve4F48/tEd8+IwGZZulaR1gb+FeIAbbTl7XmrhcAIO1CAt8Ke+EHpa5x+7gxlrhcH/MKcQdUwUOI24sXSj0t6iQUqNJzneskm95SSByRkxnbf45zhSz3SUi7kmfwp2E4M1iIY9gSvf3W5zPX3T7ZjudQjlxKPaQmaIZdp5lefVBCVMOucFRx0yC/Ul/0tdrKXakX6+Jl41XY7vs5W0LQUruaKMVi6mFHgkDk7i0u97/YpnpTlgILgVvgK8EXz/O+dYYtaPebhaC9Cs3rrXr67fYDptrL9VkglHlnxagsX4ph/iNwtW8HVCXNC61Zj78lnD4uW44HDb87N+tz+oZfm3IpqRPl25rhioSL1KQfG6/oh2dU9vg5KQWZrvJqxwf/gPxfxXM</source>
  </file>
  <file path="lib/Util/Router.php" hash="d074b7987174bac116648c5bf35e7a2c" package="Default">
    <class final="false" abstract="false" namespace="global" line="20" package="xFreemwork">
      <extends/>
      <name>xRouter</name>
      <full_name>\xRouter</full_name>
      <docblock line="11">
        <description>Manages HTTP Requests routing.</description>
        <long-description>&lt;p&gt;Responsibilities:
- parse the URL,
- instantiate the requested controller
- call the requested action (controller method) through the front controller&lt;/p&gt;</long-description>
        <tag line="11" name="package" description="xFreemwork"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="27" namespace="global" package="Default">
        <name>$fragments</name>
        <default>array()</default>
        <docblock line="22">
          <description>The route fragments of the called uri.</description>
          <long-description></long-description>
          <tag line="22" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="22" name="internal" description=""/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="34" namespace="global" package="Default">
        <name>$routes</name>
        <default>array()</default>
        <docblock line="29">
          <description>Routes patterns and params for route matching.</description>
          <long-description></long-description>
          <tag line="29" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="29" name="internal" description=""/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="41" namespace="global" package="Default">
        <name>$matched_route</name>
        <default>null</default>
        <docblock line="36">
          <description>One a route has been matched,
this property is set with the route information.</description>
          <long-description></long-description>
          <tag line="36" name="see" description="\match_route" refers="\match_route"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="47" namespace="global" package="Default">
        <name>$params</name>
        <default>array()</default>
        <docblock line="43">
          <description>Generated params from route config, route arguments and post/get params.</description>
          <long-description></long-description>
          <tag line="43" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="52" package="xFreemwork">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="49">
          <description></description>
          <long-description></long-description>
          <tag line="49" name="param" description="Default route params." type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="52">
          <name>$params</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="65" package="xFreemwork">
        <name>add</name>
        <full_name>add</full_name>
        <docblock line="56">
          <description>Adds a route pattern and params for route matching process.</description>
          <long-description></long-description>
          <tag line="56" name="param" description="A rails-like route pattern, made of:&#10;       - static keywords (e.g. somekeyword)&#10;       - variable parameters, those will be set as parameters assigned&#10;         with the route fragment value when calling the controller&#10;         (e.g. :aparameter)&#10;       Example: /somekeyword/:controller/:action/:page" type="string" variable="$pattern">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="65">
          <name>$pattern</name>
          <default></default>
          <type/>
        </argument>
        <argument line="65">
          <name>$params</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="72" package="xFreemwork">
        <name>process_uri</name>
        <full_name>process_uri</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="83" package="xFreemwork">
        <name>match_route</name>
        <full_name>match_route</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="106" package="xFreemwork">
        <name>route</name>
        <full_name>route</full_name>
        <docblock line="100">
          <description>Calls controller action and outputs HTTP response body.</description>
          <long-description>&lt;p&gt;Controller actions are called through a front controller.
The front controllers acts as a Decorator.
(see Decorator design pattern)&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="144" package="xFreemwork">
        <name>url_from</name>
        <full_name>url_from</full_name>
        <docblock line="133">
          <description>Creates and returns an URL using the given $route pattern,
substituting the given $parameters to $route pattern variables.</description>
          <long-description></long-description>
          <tag line="133" name="param" description="Value to substitute route variables (:var_name)." type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="133" name="param" description="A route definition structured as in $this-&gt;routes,&#10;             or null to use the xRouter::matched_route." type="array" variable="$route">
            <type by_reference="false">array</type>
          </tag>
          <tag line="133" name="param" description="URL suffix as in xUtil::url()." type="string" variable="$suffix">
            <type by_reference="false">string</type>
          </tag>
          <tag line="133" name="param" description="Full URL as in xUtil::url()." type="string" variable="$full">
            <type by_reference="false">string</type>
          </tag>
          <tag line="133" name="return" description="The generated URL." type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="133" name="see" description="\xUtil::url()" refers="\xUtil::url()"/>
        </docblock>
        <argument line="144">
          <name>$params</name>
          <default></default>
          <type/>
        </argument>
        <argument line="144">
          <name>$route</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="144">
          <name>$suffix</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="144">
          <name>$full</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="119">asses security analysis on this priorities choice</todo>
    </markers>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib/Util/Router.php</error>
      <error line="49" code="50012">No short description for method __construct()</error>
      <error line="56" code="50015">Argument $params is missing from the Docblock of add()</error>
      <error line="72" code="50010">No DocBlock was found for method process_uri()</error>
      <error line="83" code="50010">No DocBlock was found for method match_route()</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="lib/Util/Form.php" hash="bb6d70dddcd234bb6c26e24aff5b650b" package="Default">
    <class final="false" abstract="false" namespace="global" line="16" package="xForm">
      <extends/>
      <name>xFormTemplate</name>
      <full_name>\xFormTemplate</full_name>
      <docblock line="11">
        <description>xFormTemplate class.</description>
        <long-description>&lt;p&gt;Manages for templates processing.&lt;/p&gt;</long-description>
        <tag line="11" name="package" description="xForm"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="35" package="xForm">
        <name>apply</name>
        <full_name>apply</full_name>
        <docblock line="18">
          <description>Applies the given data on the given template and returns the result.</description>
          <long-description>&lt;p&gt;Templates are in the following form:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;The value type is {type} and its value is {value}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Data are in the following structure:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;array(
    'type' =&gt; 'integer',
    'value' =&gt; 12
)
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="18" name="param" description="A template string" type="string" variable="$template">
            <type by_reference="false">string</type>
          </tag>
          <tag line="18" name="param" description="An associative array containing the template data" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="18" name="return" description="The processed template output" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="35">
          <name>$template</name>
          <default></default>
          <type/>
        </argument>
        <argument line="35">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="true" namespace="global" line="50" package="xForm">
      <extends/>
      <name>xForm</name>
      <full_name>\xForm</full_name>
      <docblock line="45">
        <description>xForm class.</description>
        <long-description>&lt;p&gt;Deals with form creation, validation and HTML generation.&lt;/p&gt;</long-description>
        <tag line="45" name="package" description="xForm"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="70" namespace="global" package="Default">
        <name>$fields_options</name>
        <default></default>
        <docblock line="52">
          <description>An array of fields options.</description>
          <long-description>&lt;p&gt;Populated from fields_options().&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;array(
   'fieldname' =&gt; array(
       'name' =&gt; 'field name',
       'value' =&gt; 'field value(s)',
       'validation' =&gt; array(
           'validator' =&gt; array('validator', 'arguments'),
           'validator_without_options'
       )
   )
)
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="52" name="see" description="\fields_options()" refers="\fields_options()"/>
          <tag line="52" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="84" namespace="global" package="Default">
        <name>$form_options</name>
        <default></default>
        <docblock line="72">
          <description>An array of form options.</description>
          <long-description>&lt;p&gt;Populated from form_options().&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;array(
   'action' =&gt; 'field action url',
   'method' =&gt; 'post or get'
)
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="72" name="see" description="\form_options()" refers="\form_options()"/>
          <tag line="72" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="90" namespace="global" package="Default">
        <name>$fields</name>
        <default>array()</default>
        <docblock line="86">
          <description>Array containing the created xFormField instances.</description>
          <long-description></long-description>
          <tag line="86" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="97" namespace="global" package="Default">
        <name>$validator</name>
        <default></default>
        <docblock line="92">
          <description>Singleton for generated form validator</description>
          <long-description></long-description>
          <tag line="92" name="see" description="\validator()" refers="\validator()"/>
          <tag line="92" name="var" description="" type="null|\xValidatorStore">
            <type by_reference="false">null</type>
            <type by_reference="false">\xValidatorStore</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="103" namespace="global" package="Default">
        <name>$template_form</name>
        <default>'&lt;form action="{action}" method="{method}"&gt;&lt;table&gt;{content}&lt;/table&gt;&lt;/table&gt;&lt;/form&gt;'</default>
        <docblock line="99">
          <description>HTML Form template (xFormTemplate format)</description>
          <long-description></long-description>
          <tag line="99" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="109" namespace="global" package="Default">
        <name>$template_row</name>
        <default>'&lt;tr&gt;&lt;th&gt;{label}&lt;/th&gt;&lt;td&gt;{field} {message}&lt;/td&gt;&lt;/tr&gt;'</default>
        <docblock line="105">
          <description>HTML Form row template (xFormTemplate format)</description>
          <long-description></long-description>
          <tag line="105" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="115" namespace="global" package="Default">
        <name>$template_row_mandatory</name>
        <default>'&lt;tr&gt;&lt;th&gt;{label}&lt;span style="font-size:bold;color:red"&gt;*&lt;/span&gt;&lt;/th&gt;&lt;td&gt;{field} {message}&lt;/td&gt;&lt;/tr&gt;'</default>
        <docblock line="111">
          <description>HTML Form row template for mandatory fields (xFormTemplate format)</description>
          <long-description></long-description>
          <tag line="111" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="117" package="xForm">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="130" package="xForm">
        <name>fields_options</name>
        <full_name>fields_options</full_name>
        <docblock line="123">
          <description>Returns the form fields definition.</description>
          <long-description>&lt;p&gt;This method must be implemented in child classes and return
the form fields definition according the xFormField::options() format.&lt;/p&gt;</long-description>
          <tag line="123" name="return" description="Fields definitions." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="132" package="xForm">
        <name>form_options</name>
        <full_name>form_options</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="139" package="xForm">
        <name>create_fields</name>
        <full_name>create_fields</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="151" package="xForm">
        <name>add_field</name>
        <full_name>add_field</full_name>
        <argument line="151">
          <name>$options</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="155" package="xForm">
        <name>render</name>
        <full_name>render</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="177" package="xForm">
        <name>validator</name>
        <full_name>validator</full_name>
        <docblock line="173">
          <description>Returns a xValidatorStore singleton from fields 'validator' option.</description>
          <long-description></long-description>
          <tag line="173" name="return" description="" type="\xValidatorStore">
            <type by_reference="false">\xValidatorStore</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="187" package="xForm">
        <name>invalids</name>
        <full_name>invalids</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="203" package="xForm">
        <name>valid</name>
        <full_name>valid</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="215" package="xForm">
      <extends>\xFormField</extends>
      <name>xFormFieldFree</name>
      <full_name>\xFormFieldFree</full_name>
      <docblock line="211">
        <description></description>
        <long-description></long-description>
        <tag line="211" name="package" description="xForm"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="216" package="xForm">
        <name>options</name>
        <full_name>options</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="221" package="xForm">
        <name>render_field</name>
        <full_name>render_field</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="230" package="xForm">
      <extends>\xFormField</extends>
      <name>xFormFieldView</name>
      <full_name>\xFormFieldView</full_name>
      <docblock line="226">
        <description></description>
        <long-description></long-description>
        <tag line="226" name="package" description="xForm"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="231" package="xForm">
        <name>options</name>
        <full_name>options</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="240" package="xForm">
        <name>render_field</name>
        <full_name>render_field</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="250" package="xForm">
      <extends>\xFormField</extends>
      <name>xFormFieldText</name>
      <full_name>\xFormFieldText</full_name>
      <docblock line="246">
        <description></description>
        <long-description></long-description>
        <tag line="246" name="package" description="xForm"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="251" namespace="global" package="Default">
        <name>$template_field</name>
        <default>'&lt;input type="{type}" name="{name}" id="{name}" value="{value}" class="{state_current}"/&gt;'</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="252" package="xForm">
        <name>options</name>
        <full_name>options</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="263" package="xForm">
      <extends>\xFormField</extends>
      <name>xFormFieldTextarea</name>
      <full_name>\xFormFieldTextarea</full_name>
      <docblock line="259">
        <description></description>
        <long-description></long-description>
        <tag line="259" name="package" description="xForm"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="264" namespace="global" package="Default">
        <name>$template_field</name>
        <default>'&lt;textarea name="{name}" id="{name}" rows="{rows}" cols="{cols}" class="{state_current}"&gt;{value}&lt;/textarea&gt;'</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="265" package="xForm">
        <name>options</name>
        <full_name>options</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="278" package="xForm">
      <extends>\xFormField</extends>
      <name>xFormFieldPassword</name>
      <full_name>\xFormFieldPassword</full_name>
      <docblock line="274">
        <description></description>
        <long-description></long-description>
        <tag line="274" name="package" description="xForm"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="279" namespace="global" package="Default">
        <name>$template_field</name>
        <default>'&lt;input type="{type}" name="{name}" id="{name}" value="{value} class="{state_current}""/&gt;'</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="280" package="xForm">
        <name>options</name>
        <full_name>options</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="286" package="xForm">
        <name>init</name>
        <full_name>init</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="296" package="xForm">
      <extends>\xFormField</extends>
      <name>xFormFieldCheckbox</name>
      <full_name>\xFormFieldCheckbox</full_name>
      <docblock line="292">
        <description></description>
        <long-description></long-description>
        <tag line="292" name="package" description="xForm"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="297" namespace="global" package="Default">
        <name>$template_field</name>
        <default>'&lt;input type="{type}" name="{name}" id="{name}" class="{state_current}" {selected}/&gt;'</default>
      </property>
      <property final="false" static="false" visibility="public" line="298" namespace="global" package="Default">
        <name>$template_selected</name>
        <default>'checked="checked"'</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="299" package="xForm">
        <name>options</name>
        <full_name>options</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="306" package="xForm">
        <name>init</name>
        <full_name>init</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="317" package="xForm">
      <extends>\xFormField</extends>
      <name>xFormFieldSelect</name>
      <full_name>\xFormFieldSelect</full_name>
      <docblock line="313">
        <description></description>
        <long-description></long-description>
        <tag line="313" name="package" description="xForm"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="318" namespace="global" package="Default">
        <name>$template_field</name>
        <default>'&lt;select name="{name}" id="{name}" value="{value}" class="{state_current}"&gt;{options}&lt;/select&gt;'</default>
      </property>
      <property final="false" static="false" visibility="public" line="319" namespace="global" package="Default">
        <name>$items</name>
        <default>array()</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="320" package="xForm">
        <name>options</name>
        <full_name>options</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="328" package="xForm">
        <name>init</name>
        <full_name>init</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="340" package="xForm">
        <name>render_field</name>
        <full_name>render_field</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="354" package="xForm">
      <extends>\xFormField</extends>
      <name>xFormFieldOption</name>
      <full_name>\xFormFieldOption</full_name>
      <docblock line="349">
        <description></description>
        <long-description></long-description>
        <tag line="349" name="package" description="xForm"/>
        <tag line="349" name="see" description="\global\xFormFieldSelect" refers="\global\xFormFieldSelect"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="355" namespace="global" package="Default">
        <name>$template_field</name>
        <default>'&lt;option id="option_{name}_{value}" value="{value}" {selected}&gt;{label}&lt;/option&gt;'</default>
      </property>
      <property final="false" static="false" visibility="public" line="356" namespace="global" package="Default">
        <name>$template_selected</name>
        <default>'selected="selected"'</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="357" package="xForm">
        <name>options</name>
        <full_name>options</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="365" package="xForm">
        <name>render_label</name>
        <full_name>render_label</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="366" package="xForm">
        <name>render_message</name>
        <full_name>render_message</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="373" package="xForm">
      <extends>\xFormFieldSelect</extends>
      <name>xFormFieldSelectNumeric</name>
      <full_name>\xFormFieldSelectNumeric</full_name>
      <docblock line="369">
        <description></description>
        <long-description></long-description>
        <tag line="369" name="package" description="xForm"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="374" package="xForm">
        <name>init</name>
        <full_name>init</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="388" package="xForm">
      <extends>\xFormField</extends>
      <name>xFormFieldSubmit</name>
      <full_name>\xFormFieldSubmit</full_name>
      <docblock line="384">
        <description></description>
        <long-description></long-description>
        <tag line="384" name="package" description="xForm"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="389" namespace="global" package="Default">
        <name>$template_field</name>
        <default>'&lt;input type="{type}" class="button" name="{name}" id="{name}" value="{value}" {selected}/&gt;'</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="390" package="xForm">
        <name>options</name>
        <full_name>options</full_name>
      </method>
    </class>
    <class final="false" abstract="true" namespace="global" line="403" package="xForm">
      <extends/>
      <name>xFormField</name>
      <full_name>\xFormField</full_name>
      <docblock line="399">
        <description>Generic form field.</description>
        <long-description></long-description>
        <tag line="399" name="package" description="xForm"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="409" namespace="global" package="Default">
        <name>$template_label</name>
        <default>'&lt;label for="{name}"&gt;{label}&lt;/label&gt;'</default>
        <docblock line="405">
          <description>HTML field label template (xFormTemplate format)</description>
          <long-description></long-description>
          <tag line="405" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="415" namespace="global" package="Default">
        <name>$template_field</name>
        <default></default>
        <docblock line="411">
          <description>HTML field input template (xFormTemplate format)</description>
          <long-description></long-description>
          <tag line="411" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="421" namespace="global" package="Default">
        <name>$template_message</name>
        <default>'&lt;br/&gt;&lt;div class="{state_current} tip"&gt;{message_current}&lt;/div&gt;'</default>
        <docblock line="417">
          <description>HTML field message template (xFormTemplate format)</description>
          <long-description></long-description>
          <tag line="417" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="427" namespace="global" package="Default">
        <name>$template_selected</name>
        <default></default>
        <docblock line="423">
          <description>HTML string for selecting/checking for input/option</description>
          <long-description></long-description>
          <tag line="423" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="434" namespace="global" package="Default">
        <name>$options</name>
        <default>array('name' =&gt; null, 'label' =&gt; null, 'type' =&gt; null, 'value' =&gt; null, 'selected' =&gt; null, 'mandatory' =&gt; null, 'state' =&gt; 'invalid', 'state_current' =&gt; null, 'message' =&gt; null, 'message_current' =&gt; null)</default>
        <docblock line="430">
          <description>Associative array containing the default field options.</description>
          <long-description></long-description>
          <tag line="430" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="447" package="xForm">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="447">
          <name>$options</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="456" package="xForm">
        <name>init</name>
        <full_name>init</full_name>
        <docblock line="453">
          <description>Hook for initializing form fields.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="468" package="xForm">
        <name>options</name>
        <full_name>options</full_name>
        <docblock line="458">
          <description>Default options for the field.</description>
          <long-description>&lt;p&gt;This method returns an associative array
containing the field default options.&lt;/p&gt;</long-description>
          <tag line="458" name="note" description="This method is called in the constructor and merges the class&#10;    options memeber with the result of this function. This array is&#10;    implemented in an method in order to allow functions and variables&#10;    in the array values."/>
          <tag line="458" name="return" description="An associative array containing the field default options." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="474" package="xForm">
        <name>create</name>
        <full_name>create</full_name>
        <docblock line="470">
          <description>Instanciates and return a field of the given type.</description>
          <long-description></long-description>
          <tag line="470" name="return" description="xFormField instance." type="\xFormField">
            <type by_reference="false">\xFormField</type>
          </tag>
        </docblock>
        <argument line="474">
          <name>$options</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="484" package="xForm">
        <name>render_label</name>
        <full_name>render_label</full_name>
        <docblock line="480">
          <description>Returns the HTML code for the field label.</description>
          <long-description></long-description>
          <tag line="480" name="return" description="HTML code for the field label." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="492" package="xForm">
        <name>render_field</name>
        <full_name>render_field</full_name>
        <docblock line="488">
          <description>Returns the HTML code for the field input.</description>
          <long-description></long-description>
          <tag line="488" name="return" description="HTML code for the field input." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="500" package="xForm">
        <name>render_message</name>
        <full_name>render_message</full_name>
        <docblock line="496">
          <description>Returns the HTML code for the field message.</description>
          <long-description></long-description>
          <tag line="496" name="return" description="HTML code for the field message." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="510" package="xForm">
        <name>render</name>
        <full_name>render</full_name>
        <docblock line="506">
          <description>Concatenates and returns the HTML code for the field label, input and message.</description>
          <long-description></long-description>
          <tag line="506" name="return" description="HTML code for the field." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib/Util/Form.php</error>
      <error line="117" code="50010">No DocBlock was found for method __construct()</error>
      <error line="132" code="50010">No DocBlock was found for method form_options()</error>
      <error line="139" code="50010">No DocBlock was found for method create_fields()</error>
      <error line="151" code="50010">No DocBlock was found for method add_field()</error>
      <error line="155" code="50010">No DocBlock was found for method render()</error>
      <error line="187" code="50010">No DocBlock was found for method invalids()</error>
      <error line="203" code="50010">No DocBlock was found for method valid()</error>
      <critical line="211" code="50005">No short description for class \xFormFieldFree</critical>
      <error line="216" code="50010">No DocBlock was found for method options()</error>
      <error line="221" code="50010">No DocBlock was found for method render_field()</error>
      <critical line="226" code="50005">No short description for class \xFormFieldView</critical>
      <error line="231" code="50010">No DocBlock was found for method options()</error>
      <error line="240" code="50010">No DocBlock was found for method render_field()</error>
      <critical line="246" code="50005">No short description for class \xFormFieldText</critical>
      <error line="251" code="50018">No DocBlock was found for property $template_field</error>
      <error line="252" code="50010">No DocBlock was found for method options()</error>
      <critical line="259" code="50005">No short description for class \xFormFieldTextarea</critical>
      <error line="264" code="50018">No DocBlock was found for property $template_field</error>
      <error line="265" code="50010">No DocBlock was found for method options()</error>
      <critical line="274" code="50005">No short description for class \xFormFieldPassword</critical>
      <error line="279" code="50018">No DocBlock was found for property $template_field</error>
      <error line="280" code="50010">No DocBlock was found for method options()</error>
      <error line="286" code="50010">No DocBlock was found for method init()</error>
      <critical line="292" code="50005">No short description for class \xFormFieldCheckbox</critical>
      <error line="297" code="50018">No DocBlock was found for property $template_field</error>
      <error line="298" code="50018">No DocBlock was found for property $template_selected</error>
      <error line="299" code="50010">No DocBlock was found for method options()</error>
      <error line="306" code="50010">No DocBlock was found for method init()</error>
      <critical line="313" code="50005">No short description for class \xFormFieldSelect</critical>
      <error line="318" code="50018">No DocBlock was found for property $template_field</error>
      <error line="319" code="50018">No DocBlock was found for property $items</error>
      <error line="320" code="50010">No DocBlock was found for method options()</error>
      <error line="328" code="50010">No DocBlock was found for method init()</error>
      <error line="340" code="50010">No DocBlock was found for method render_field()</error>
      <critical line="349" code="50005">No short description for class \xFormFieldOption</critical>
      <error line="355" code="50018">No DocBlock was found for property $template_field</error>
      <error line="356" code="50018">No DocBlock was found for property $template_selected</error>
      <error line="357" code="50010">No DocBlock was found for method options()</error>
      <error line="365" code="50010">No DocBlock was found for method render_label()</error>
      <error line="366" code="50010">No DocBlock was found for method render_message()</error>
      <critical line="369" code="50005">No short description for class \xFormFieldSelectNumeric</critical>
      <error line="374" code="50010">No DocBlock was found for method init()</error>
      <critical line="384" code="50005">No short description for class \xFormFieldSubmit</critical>
      <error line="389" code="50018">No DocBlock was found for property $template_field</error>
      <error line="390" code="50010">No DocBlock was found for method options()</error>
      <error line="447" code="50010">No DocBlock was found for method __construct()</error>
      <error line="470" code="50015">Argument $options is missing from the Docblock of create()</error>
    </parse_markers>
    <source>eJy9G2tv2zjye34FaxiQFLh2t4f74iTeFn3tAm0v16T7JQ0MWaJtobJkSHIe6/N/vxm+RFKUX0nX2G0kPobDeXM4Ov99OV+eDE5PyCnxo4C8fvXba/I+XCQ0I+/yYhlW4eoBOrH/85/vPny9+oCP1/OkJGkyKcLikbDHiGYljckqi2lBqjkln75+J58uP5O7f/Vfyf4ezg2jiJZlMkkpCSsyr6rlcDC4v7/vz7JVPy9mAzG4HMyW6UuY3Z9XixRxOD0dnACuDJmHj3mxuKaLZRpWlERpWJZ9bP8SZuGMlmSaAxqiuyTLImeLZjM26M0yjH7CMA6FwWUQLKjrkxMCP7Yi/k7J2+UyTQAebnCW3AGRYqAQyTOtRa5KwiwmBa1WRcYnFLRcpVVfwrpW2IUFJQkHMc3TNL8HPHEDi6Ecex7lMR2pmTDwLkxXlFSPS4r0X+PDhq2YVKXoxHb2tFFgBgac94i7c/GyKlYRYE5bMAiLInz05Rv+PMTAIxcj4iVZRWe08HpGP8OEDfjttewIWhAD/hThArFAZN7WJOUt1jCGDHmbEeBgHiVhBWwQjVGeVWGSIRTcoIKDXFNQOI/kakhcIS4gz2pGvqqWq0rMGbC/ZQVLRWS6yqIqAREIQTge/a6c0iNdXCYAMSLiNxiQdwXlPCeXf1zKhUJUBn1v8FNwyAV2jQsKbxH1vY7XI94P/FcNCc7qaaDPMGNZ0Fk9ZfBj7d/8uL89DX5sBjh9zVC7+eF1f/vh3W5aYAG6l4ISJUPXQpECT32vy+UaFu14fVy+73XOPA2MoK8Yx9s3JxtTlTUVfk/DtCT3STVnSkAiJBkQuIdyncQhJzaI+h/XXz6TGc1owdraVDucAN5hVBFNx126nQmhyadkmtA0Lkm+RLilUtnLfLlCGsVkWuQLMWosRvlBf09l8djELFxwfWgqE45R3Xw0Ye89e1StVWIYa/DLwDlUEK99VX1gXmjjtEYQn7CYrRY0q0ovsJcxIYyRi6A6kkaeNTrQ3tVzq1UoKW3QXHXehQXH1dBRbO2ac862cx6FYxffYcwRXA8jRXzBLN5CVkVqsMtbUKBazEcu87Ii4MxmtPL2o5CB3V700WY4qOOypEwngR5MmT6yzSQZGMQMrEV/f56A0eB0CprrXsFaKa2APlO2fabmyALkkJIwY+uq1dp3tkrT/z38JXuv4H/aREnNbuLCLA2zG8oq+2asgFiFlbms4a20hSSMMdvKBfHO2QOXhovOmj9sOoTLAbTwh01ndF6hrxitkR2ggJvzAW+o/yKokbdtC0V+/7zbQIC4i6oA/OajdRpOaIqozeE9Hq0ZrzcEdgGubkaxJ0aMiwPwRBlYgNFH/jxK+/xMyI9rwI5tlMsQg4PHlF50pkD2l2XyNx1O8jQ+i/I0L4YFjTuj0/MBDhwdsmsVOYzHwE8ec/l6vNCtIM5+OdL1EzB8+F4l6XDIFGe8oMWM+o6BPddsP9BDBdFvWMft8I2hPTcE1xrcXIz5QD+QMYDN+29atMxUQvA5plMwPcLH86HsBMLVgixWYCInEMYCSyn6JYrWiETzBMwSc/oYcKloXIJoXwXPKHkRS2NXG7nhUG1SSFtt7ESYwz3JRxuksoqGKKrQRImCTUtbVExuarKiL++rVvwZjkc6Gtlnuxqt32STwsDipRneXgEWy1KjWKl6AXMaRnPiFiYI3oVTQFS6olWHzsRJtN/w8OgWpJVPOjOGASJv4bQ3A7C4JxrLE9GUZHlGOVtobMyBPv9FAqJS+fUqPLy6DWw8TFzEKEDmTXf87cN/v3+4ur6xUb01UdyY+9JJcsO3hPB0yeN0V8hpSrZx8imMY84k30VNc0VcK6P32nr2Ojb0guJJ37RWaDw872wHx2tO21QFtr2nFS0WwJwSGcI0lAcXZW39Tcrpttuf5HkaiNW0YODlaIZsZaBejizGQDyrYOjHFoHRN7bRUhxFuNsFz8P3Epi4oC/Rjm0abr9Lgrf4naGr38QFyNu/MDMUYKT5mVNfuOeyAfjzmENjqi5Jwbk4Zh1+0GtOYeNcU7hkuaYIf+eaJLp8k2xBQ5QF6WW2xU6k1MfzqR6S1YJY+zLdiYmTjOAhx68MnH6yeXp1093iGYLoEbfmONxcSKyYlJR1zFsfMI0TGYfd8Drbgluls5pGaJqHhs9WmUAd2q2Os1Yi+8EuxW8x9exp3GLwmVV+Y4650Y+ytwFTyiRbUUtd5Ojamm4D4xLBFhpIW2mSXBlMEADpBFpsZ5IxWKbz7ArlQIK6LFg9yUVnNdmkrWhuuFGVgGA+y8UkSbYbYTVuaxO2a+DQ6ZOdLk4zxgLVcbQqClRPYFjT5e4HA5F9wtxhY+4qmiZFKT0I0i3oe8TrS/oetlPMGz5tnwzCUbuUM5t79ISAeds0QYqZW67ZfFdQ+kKgJZaoDwCYBPz1v39kDZHN3H29wMKrjwWlhD6AI4r1ZkE6RdEDA33dtXnshAT/VTmejUQuOOZ5VbxRkcEMDuD+mfsbr3kAMHAyA4AmYoLXSuQkUreNzO+etPorAWt7HK2qOSYRmLX+8BBRNsL3vuYVeaQVuc+Ln3jGg3hiSYv0kdMGTkQhZse9Hvn3q1fNSMBF+Pry4w6Qtc9YrA17MQ9l9bGV6jxr0DyehWrqsYzpIgJ4mkBKDodpHsa+zSWG422vwT2Gn6OdIXbryPIjIBnwmYp+CM+vgd/tPLeyaNzdEe88yZaril2KXXT4lViH5c3hDf/AWxLXz+zYBq/8jqzDMwXwbtjnTWcwEibxWK2shaOCHTnU6xjihOD5DydQJWe2UwUUBomAf5AmeYpv+KedQiNBwvOBhP+8JEOItk4hfm06hdhuUZpDyX0Jr2Aq4n9WHtuI/ZzyuBQ7s4kL1rBMMJvPXck0TEu6w/hgmstOBn2jJVhZuYieg6mMNYyjyAvb0mgDIdhv2C2Ve0FmH8vid3Ma/ZzkD7+axS08JeuSpjSqaLxR3DUXlP24ZoTIUoAqHjrPJg+RIEPDgalbRqZtyNuqwPKDnHDE+J2QJOLkETNs4SqtLF/HG58EaH/p01JJ93MKcAsTOIRGiqpwqAOhtJNjddQsxjE5EzlCtxwGVkzOdjckb4zMVO1cBUGODo2uONEOllpB7Cf7xtFa7AVsP4dpiG8CSzcSBE8WU4fF56DGDEsuyrzFKcilEW+xRJOrdiSfCosFg9nRllSrZUrL7TKN4Or6nJznMMWgWt6QMEeItCwecd26tiZfTBEtQYYxR6C21mV7a2QIxIENGXjTkoluSzPW9sTJBDZGVTfYSIqc7NbkJXt0DKnNFN+eY4jSZBzlSyrUSZCGPu/IVO4dgrMT1/b0ONcWZA4+BWJO/4K/25nXIzOUOLlnpEVdfJepLKNP5E9lKQejM6JY0yjQYqxWOyYv620r5jRw/2GLHW7gOJLMpAnbwC3bWFk028LVLri+wOZTd3tk+XzRkU/P55PdhqzWBoc1tNy12VnXFS1DNOJj1rDf0VLcE5C1RB3E2T1SZfqNsUd7uK8rkNUkcsiB8IDrHcazyyWem0B1L8BfWw1l8x67aUslqChfTCDW8Jsas3MVh5btnGPzSxMnztbhkNPg6MhiNVkkz3QEF8HDZFVVeXbIidwRFj9ZoTol21nHfS78NUlB8gmrl7BWVJUbHFKsKOnO8LRLZTjpRYDynFU9HCTylD8BEMWp2kSyv611POLylsvEs1ZO8QuGLYsKC/S8y0qgSJVJMRidx8ldS2xMqmQJdLKuNYBiMKWVXqIGGYuduOjD24CdWGQzo6VwTIfhLnUJlrbXfrurcFoGsJy0dnnktjo/+5ZQqV3tiEwn1era2g4Are7ODPasvvrK3zWR3ZKIYnZ+K2L3qvsbF2ztBtzd1ZjNRjSKffS6sOZ9q6OcY58iLrt6SxnSxs21Blh3Js31rBNyI5jWepuFECqQGhopnIZ+5PlPoQFJlQBP/pZfSYhr8r4hfI1QoAnxvRBqSTT2yYisOHEWmskihNBxXpTjLc3hGhObS9Wak+VgivQl4CkK05RXsLF8hZQAwA4LIRgveR0EMzwSFP7kThZ0QSe04PcZ9acn/DgKK0ji9PnSXOUTA5RVSwc7lgiC6y3YRz45CfF7EQWNF2qA1idYimpC43vhC/EgpqVwbp/POLbStK2wzq6o0wThT36GTviHGarYhITS3k31z3vACjXLL2o37Tibm6jZn41YdV1u/RZ1EEqjmC28DbQLLu1+60vCPnUiHRzVQeIr4Jyesn5fL3fq8oDjgnTqHaztBTedRriJa/O5LSVjLfWdzN9h9bqpdzySaRBYOMa9JlkGwD67HHVu5ikHy+w9aZ/MkR+6T2OSe5+t97KH5AeecZ/C4x26U2uae6/aKdPebfO+0i4vMRO1e1FHAGnQxyqn2ObG3uVZBKAyy9bsoRM9EUdzJ3AMUbcScwsRTQ3qm61C3qxWxRl1uPo/6c5Siw==</source>
  </file>
  <file path="lib/Misc/Reusables/Sitemap/Sitemap.php" hash="79ae8842f3a2ae15171800db5a6d7752" package="Default">
    <class final="false" abstract="false" namespace="global" line="7" package="xReusable">
      <extends/>
      <name>xSiteMap</name>
      <full_name>\xSiteMap</full_name>
      <docblock line="3">
        <description>Reusable component</description>
        <long-description></long-description>
        <tag line="3" name="package" description="xReusable"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="14" namespace="global" package="Default">
        <name>$cache_path</name>
        <default></default>
        <docblock line="9">
          <description>Path for generated sitemap html file.</description>
          <long-description>&lt;p&gt;If not set, cache mecanism is not used.&lt;/p&gt;</long-description>
          <tag line="9" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="31" namespace="global" package="Default">
        <name>$excludes</name>
        <default>array()</default>
        <docblock line="16">
          <description>Controllers and actions to exlude from sitemap.</description>
          <long-description>&lt;p&gt;Note: Controller and actions names must be lowercase.
Structure convention:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;array (
    'controller_name_1' =&gt; true, // Excude this controller from sitemap
    'controller_name_2' =&gt; array(
        'action_1', // Exclude action_1 from sitemap
        'action_2'  // Exclude action_2 from sitemap
    )
)
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="16" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="42" namespace="global" package="Default">
        <name>$controller_titles</name>
        <default>array()</default>
        <docblock line="33">
          <description>Controllers custom titles for sitemap
Conventions:
array (
    'controller_name_1' =&gt; _('Custom Title 1'),
    'controller_name_2' =&gt; _('Custom Title 2')
)</description>
          <long-description></long-description>
          <tag line="33" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="44" namespace="global" package="Default">
        <name>$prepends</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="public" line="45" namespace="global" package="Default">
        <name>$appends</name>
        <default>array()</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="47" package="xReusable">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="47">
          <name>$options</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="51" package="xReusable">
        <name>render</name>
        <full_name>render</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="63" package="xReusable">
        <name>generate</name>
        <full_name>generate</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="88" package="xReusable">
        <name>map</name>
        <full_name>map</full_name>
        <docblock line="71">
          <description>Return an array containing the following structure:
&lt;code&gt;
array(
   'controller_name' =&gt; array(
       'action_1_name' =&gt; array(
           'title' =&gt; 'title string',
           'url' =&gt; 'action url'
   ),
       'action_2_name' =&gt; array(
           'title' =&gt; 'title string',
           'url' =&gt; 'action url'
   )
)
&lt;/code&gt;</description>
          <long-description></long-description>
          <tag line="71" name="return" description="Map array structure reflecting site controllers and actions" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="124" package="xReusable">
        <name>controllers</name>
        <full_name>controllers</full_name>
        <docblock line="121">
          <description></description>
          <long-description></long-description>
          <tag line="121" name="return" description="xController instances" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="148" package="xReusable">
        <name>actions</name>
        <full_name>actions</full_name>
        <docblock line="145">
          <description></description>
          <long-description></long-description>
          <tag line="145" name="return" description="xController action names" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="148">
          <name>$controller_instance</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="165" package="xReusable">
        <name>title</name>
        <full_name>title</full_name>
        <docblock line="161">
          <description></description>
          <long-description></long-description>
          <tag line="161" name="return" description="xController action title metadata if existing,&#10;               action name otherwise" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="165">
          <name>$controller_instance</name>
          <default></default>
          <type/>
        </argument>
        <argument line="165">
          <name>$action_name</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="115">Prepends map contents</todo>
    </markers>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib/Misc/Reusables/Sitemap/Sitemap.php</error>
      <error line="44" code="50018">No DocBlock was found for property $prepends</error>
      <error line="45" code="50018">No DocBlock was found for property $appends</error>
      <error line="47" code="50010">No DocBlock was found for method __construct()</error>
      <error line="51" code="50010">No DocBlock was found for method render()</error>
      <error line="63" code="50010">No DocBlock was found for method generate()</error>
      <error line="121" code="50012">No short description for method controllers()</error>
      <error line="145" code="50012">No short description for method actions()</error>
      <error line="145" code="50015">Argument $controller_instance is missing from the Docblock of actions()</error>
      <error line="161" code="50012">No short description for method title()</error>
      <error line="161" code="50015">Argument $controller_instance is missing from the Docblock of title()</error>
      <error line="161" code="50015">Argument $action_name is missing from the Docblock of title()</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="lib/Misc/Reusables/standalones/Geocoder/Geocoder.php" hash="6c4321ac4d6631e0de45eae377833f79" package="Default">
    <class final="false" abstract="true" namespace="global" line="7" package="xReusable">
      <extends/>
      <name>xGeocoder</name>
      <full_name>\xGeocoder</full_name>
      <docblock line="3">
        <description>Geocoder component.</description>
        <long-description></long-description>
        <tag line="3" name="package" description="xReusable"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="9" namespace="global" package="Default">
        <name>$url</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="public" line="11" namespace="global" package="Default">
        <name>$options</name>
        <default>array()</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="17" package="xReusable">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="13">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag line="13" name="param" description="An array of geocoding options" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="17">
          <name>$options</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="25" package="xReusable">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="21">
          <description>Returns an array containing the coordinates</description>
          <long-description></long-description>
          <tag line="21" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="25">
          <name>$params</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="33" package="xReusable">
        <name>reverse</name>
        <full_name>reverse</full_name>
        <docblock line="29">
          <description>Returns an array containing the address</description>
          <long-description></long-description>
          <tag line="29" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="38" package="xReusable">
        <name>call</name>
        <full_name>call</full_name>
        <argument line="38">
          <name>$params</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="true" namespace="global" line="56" package="xReusable">
      <extends>\xGeocoder</extends>
      <name>xGeocoderGeonames</name>
      <full_name>\xGeocoderGeonames</full_name>
      <docblock line="52">
        <description>Geonames Geocoder component.</description>
        <long-description></long-description>
        <tag line="52" name="package" description="xReusable"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="57" package="xReusable">
        <name>get</name>
        <full_name>get</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="68" package="xReusable">
      <extends>\xGeocoderGeonames</extends>
      <name>xGeocoderGeonamesFulltext</name>
      <full_name>\xGeocoderGeonamesFulltext</full_name>
      <docblock line="63">
        <description>Geonames fulltext search</description>
        <long-description></long-description>
        <tag line="63" name="package" description="xReusable"/>
        <tag line="63" name="see" description="\global\http://www.geonames.org/export/geonames-search.html" refers="\global\http://www.geonames.org/export/geonames-search.html"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="69" namespace="global" package="Default">
        <name>$url</name>
        <default>'http://ws.geonames.org/searchJSON'</default>
      </property>
      <property final="false" static="false" visibility="public" line="70" namespace="global" package="Default">
        <name>$options</name>
        <default>array('q' =&gt; null, 'country' =&gt; null, 'maxRows' =&gt; null)</default>
      </property>
    </class>
    <class final="false" abstract="false" namespace="global" line="82" package="xReusable">
      <extends>\xGeocoderGeonames</extends>
      <name>xGeocoderGeonamesZipSearch</name>
      <full_name>\xGeocoderGeonamesZipSearch</full_name>
      <docblock line="77">
        <description>Geonames fulltext search</description>
        <long-description></long-description>
        <tag line="77" name="package" description="xReusable"/>
        <tag line="77" name="see" description="\global\http://www.geonames.org/export/geonames-search.html" refers="\global\http://www.geonames.org/export/geonames-search.html"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="83" namespace="global" package="Default">
        <name>$url</name>
        <default>'http://ws.geonames.org/postalCodeSearchJSON'</default>
      </property>
      <property final="false" static="false" visibility="public" line="84" namespace="global" package="Default">
        <name>$options</name>
        <default>array('postalcode' =&gt; null, 'country' =&gt; null, 'maxRows' =&gt; null)</default>
      </property>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib/Misc/Reusables/standalones/Geocoder/Geocoder.php</error>
      <error line="9" code="50018">No DocBlock was found for property $url</error>
      <error line="11" code="50018">No DocBlock was found for property $options</error>
      <error line="21" code="50015">Argument $params is missing from the Docblock of get()</error>
      <error line="38" code="50010">No DocBlock was found for method call()</error>
      <error line="57" code="50010">No DocBlock was found for method get()</error>
      <error line="69" code="50018">No DocBlock was found for property $url</error>
      <error line="70" code="50018">No DocBlock was found for property $options</error>
      <error line="83" code="50018">No DocBlock was found for property $url</error>
      <error line="84" code="50018">No DocBlock was found for property $options</error>
    </parse_markers>
    <source>eJzNVE1vm0AQvfMr9mAJjBzjXpPaaeQ6jarKqbBz6QVtlgnQwi7ZXWKsKP+9s3zZxLGatDmUCzCz8+bNm9n5eJ7HuWV5rmsRl3wBwUQIkjCR5YID12Nj/pRT9otGQEofCkVvU7Bc17PordKSMk1YSpUiZRf9aFkEnwcqyaCQ6dner8h1IrgiU0KlpFtn2DgrAuZxyRz9WhZMCzlubchA0qyOIRe8+RB3JKpyJjwiDXIT4VXvu4IzYyVBwFpU55DDEBmT5hnoOFEns2dnggxkBE7fOerKwSpM7NNBLT7oQiIMbSkjDU0TbgjrGPBXSGRPNaiuVFnF1OdfriYCrKJSRO1T17EUG8JhQxYlg4qZYy+FJkmWp5BhNyG0/5oqDUMJ6i00JTyAVOD8A8c+IKNp+lLhZsiwU0138Gdsn9vjWOs8uC2SNAzuC5DbLvKsC/Q8sgL5kDCosHeALEY8hkgBCqCdvZDKqEBj5x08NiLzG//b9fd1gK9RxeQ1h68WF58X/ohMXnPYX6xv/OXav1iuLk0QjjHsxQ2wLUWqW8JQAjPxz5FZKrAXfUfTwwahVd3ovlsInGag3mkzdHBQauBhf2ccjHivxXXv/nAf6/ts620O9nRm/1SC28PDeo09CMEkdhAXizk97c3WcE+K50rcFWmqkT9RQCWLj6hgrAqAmCE89bzNZjOOGoSxkJEHZS6k9lrbSQ2GM5vhFKKCR4S7bJMfCNjxe+ztXhTMbjmoPoU65dfV9dI+O76gO+3se5tMZ4Qjg9HOyETBtdy+5Mpo6YuN6lyVB5X93zT9keSr6uR7iJoLpWk6x+DVG+WtI03a99PZwgW3XqzWKLg1iDCpWbxHh8pprs+9uTspRdU5B3u0S47m+VV1obCWICyy3BlEJ7PqrqLxeAaUuAXfKxPhPkwmkzdkcL3fIHanUA==</source>
  </file>
  <file path="lib/Misc/Reusables/DeveloperInformation/DeveloperInformation.php" hash="03183168c6f993129ef84bd39c8cf98a" package="Default">
    <class final="false" abstract="false" namespace="global" line="7" package="xReusable">
      <extends/>
      <name>xDeveloperInformation</name>
      <full_name>\xDeveloperInformation</full_name>
      <docblock line="3">
        <description>Reusable component</description>
        <long-description></long-description>
        <tag line="3" name="package" description="xReusable"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="9" package="xReusable">
        <name>render</name>
        <full_name>render</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib/Misc/Reusables/DeveloperInformation/DeveloperInformation.php</error>
      <error line="9" code="50010">No DocBlock was found for method render()</error>
    </parse_markers>
    <source>eJx1kD9vgzAQxXd/ihsiGVAgO21IpWZot6pDV3SBI6Cas2VMSlTlu9dQkraJ+hbL7/10/+43pjZCrKJIQASv1He4UwSFbo1mYje6DwaLd9wTDOdcRNFKFAq7DoYtHUhpQ/aZK21bdI1m+BQCvKqei+lviUuyQegDmLVo0cAa0Fo8Bhd3lHzSnZOwzsDPlveMLQWSZbj8S71YXTWKJnB41OxocGm6MN/2FbxFhzvsbuhCc9Xs46zcxVnt2yYylck/eTnXuFQO7362OTT04dcZ3vybpkpjGXCv1DUSZwZd7cGysdNieT5Om+e/QEuut3zm0Rh1DGTjr5s4o+RyutyMn8RJiE32BYpLgn8=</source>
  </file>
  <file path="lib/Misc/Reusables/xFormField/DatepickerMoo/FormFieldDatepickerMoo.php" hash="ca004798d39238f33fd32cebe8c58383" package="Default">
    <class final="false" abstract="false" namespace="global" line="9" package="xForm">
      <extends>\xFormFieldText</extends>
      <name>xFormFieldDatepickerMoo</name>
      <full_name>\xFormFieldDatepickerMoo</full_name>
      <docblock line="3">
        <description>This class uses Mootools and Datepicker</description>
        <long-description></long-description>
        <tag line="3" name="package" description="xForm"/>
        <tag line="3" name="see" description="\global\http://mootools.net/" refers="\global\http://mootools.net/"/>
        <tag line="3" name="see" description="\global\http://www.monkeyphysics.com/mootools/script/2/datepicker" refers="\global\http://www.monkeyphysics.com/mootools/script/2/datepicker"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="11" package="xForm">
        <name>add_meta</name>
        <full_name>add_meta</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="24" package="xForm">
        <name>js</name>
        <full_name>js</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="36" package="xForm">
        <name>init</name>
        <full_name>init</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="41" package="xForm">
        <name>render_field</name>
        <full_name>render_field</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib/Misc/Reusables/xFormField/DatepickerMoo/FormFieldDatepickerMoo.php</error>
      <error line="11" code="50010">No DocBlock was found for method add_meta()</error>
      <error line="24" code="50010">No DocBlock was found for method js()</error>
      <error line="36" code="50010">No DocBlock was found for method init()</error>
      <error line="41" code="50010">No DocBlock was found for method render_field()</error>
    </parse_markers>
    <source>eJyNU01v2zAMvftXEN0AJUEs7QO9uG22w1bsMmyHXoahKFSJXtTYkiDJc4wg/31Sktp1kgLjTSTfI/VIXn+yS5tlbDbLYAZ3S+VBVNx7aDx6+G5MMKbywLWELzygVWKFLqV+tlys+B+E9a1x9c7jEWEZgi0Yqw9AqjGw42DbtrQ2eoWdXXZeCU+FqXsI88IpG9gHJl8WZNm+r125W4WVHPqJbQKuA2r5Mn4XXbDJMohWNloEZTRwKR9qDHwyjSE42FvLwxJugDDOHDaeP1bo2cDERqWYbR4rJcjVgA9Rt3yReCMLd453kz6YjDx5AjeLc6G+PiW9BLkwDvP39GNeNlUVX3VMyDtBI838VfQgV14rrUqFMgFG+dMxnAj/X40N1DQhxpT9a7pXZLuX3DoTUASUg/hPfiS7w9A4DRcjulZpaVoa5/T1L+owIZXhksx7khHDs2lsd+v5c9fjhLzZHEZibML430TzGsn9NhKdopMFVR/QBQTX4KnMycq4ETwUQCSt6S/4Vqgz89h93niVKv8oS48RsIF1Ae/m0BVwGQU6Tt9Or7LX3hcjVXst44TDeImPfhw6G3+ctjrEQzjd1uESzhdw8ZzQPZTpAM6NzfKYEYpinEfJ9f5+F4QeCqWpRzd79vfltv8ASxI9VA==</source>
  </file>
  <file path="lib/Misc/Helpers/FormHelper.php" hash="157218677bc747c3bc31700ec276c5fe" package="Default">
    <class final="false" abstract="false" namespace="global" line="15" package="xHelper">
      <extends/>
      <name>xFormHelper</name>
      <full_name>\xFormHelper</full_name>
      <docblock line="11">
        <description>Utility class for generating form html code.</description>
        <long-description></long-description>
        <tag line="11" name="package" description="xHelper"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="22" namespace="global" package="Default">
        <name>$fields</name>
        <default></default>
        <docblock line="17">
          <description>Form fields configuration object</description>
          <long-description></long-description>
          <tag line="17" name="todo" description="Example config array for each input type"/>
          <tag line="17" name="var" description="" type="Object">
            <type by_reference="false">Object</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="29" namespace="global" package="Default">
        <name>$templates</name>
        <default>array('text' =&gt; 'todo', 'password' =&gt; 'todo', 'checkbox' =&gt; 'todo', 'radio' =&gt; 'todo', 'select' =&gt; 'todo', 'option' =&gt; 'todo')</default>
        <docblock line="24">
          <description>Templates used for generating fields</description>
          <long-description></long-description>
          <tag line="24" name="todo" description="Implement sprintf templates for fields, labels, and messages"/>
          <tag line="24" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="38" namespace="global" package="Default">
        <name>$invalid_classname</name>
        <default>'invalid'</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="41" package="xHelper">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="45" package="xHelper">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="45">
          <name>$property</name>
          <default></default>
          <type/>
        </argument>
        <argument line="45">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="61" package="xHelper">
        <name>field</name>
        <full_name>field</full_name>
        <docblock line="56">
          <description>Return a field input html code.</description>
          <long-description></long-description>
          <tag line="56" name="param" description="The id of the field, as defined in field configuration." type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="56" name="return" description="The field html code." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="61">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="121" package="xHelper">
        <name>label</name>
        <full_name>label</full_name>
        <docblock line="116">
          <description>Return a field label html code.</description>
          <long-description></long-description>
          <tag line="116" name="param" description="The id of the field, as defined in field configuration." type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="116" name="return" description="The field label html code." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="121">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="134" package="xHelper">
        <name>message</name>
        <full_name>message</full_name>
        <docblock line="129">
          <description>Return a field message html code.</description>
          <long-description></long-description>
          <tag line="129" name="param" description="The id of the field, as defined in field configuration." type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="129" name="return" description="The field message html code." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="134">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib/Misc/Helpers/FormHelper.php</error>
      <error line="38" code="50018">No DocBlock was found for property $invalid_classname</error>
      <error line="41" code="50010">No DocBlock was found for method __construct()</error>
      <error line="45" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="lib/Misc/Helpers/ValidatorHelper.php" hash="63e4c42855bfda76b150227a2838d50f" package="Default">
    <class final="false" abstract="false" namespace="global" line="7" package="xHelper">
      <extends/>
      <name>xValidatorHelper</name>
      <full_name>\xValidatorHelper</full_name>
      <docblock line="3">
        <description>Data validation helper</description>
        <long-description></long-description>
        <tag line="3" name="package" description="xHelper"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="9" package="xHelper">
        <name>email</name>
        <full_name>email</full_name>
        <argument line="9">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="13" package="xHelper">
        <name>phone</name>
        <full_name>phone</full_name>
        <argument line="13">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="18" package="xHelper">
        <name>url</name>
        <full_name>url</full_name>
        <argument line="18">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="22" package="xHelper">
        <name>integer</name>
        <full_name>integer</full_name>
        <argument line="22">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="26" package="xHelper">
        <name>length</name>
        <full_name>length</full_name>
        <argument line="26">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="26">
          <name>$min_length</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="26">
          <name>$max_length</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="31" package="xHelper">
        <name>within</name>
        <full_name>within</full_name>
        <argument line="31">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="31">
          <name>$allowed_values</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib/Misc/Helpers/ValidatorHelper.php</error>
      <error line="9" code="50010">No DocBlock was found for method email()</error>
      <error line="13" code="50010">No DocBlock was found for method phone()</error>
      <error line="18" code="50010">No DocBlock was found for method url()</error>
      <error line="22" code="50010">No DocBlock was found for method integer()</error>
      <error line="26" code="50010">No DocBlock was found for method length()</error>
      <error line="31" code="50010">No DocBlock was found for method within()</error>
    </parse_markers>
    <source>eJyNkctugzAQRfd8hRdRMCQNtGqlRHmQRRfdV+oGA7KIC1Ydg4wpqQj/XhPnQStaMRvwXHzu3GHl5WluGI5tG8AGz1hi8IkZ3WFJMw5SwnIiWmWb4/gDJwQcXnTPth0jZrgowOFNX8iElkBtGEDVe8njE4XsMWVwpLglsZQKziWILAUHuSBJtMcyTqHphH6IimDibc9PNPNRFdQP06dm5JhTcKFsgLs8gZpfZnmacdJjpjtgDQopIkFyhmMCTaCQ5g27/H826PrzRVDfN8fQ9UP9aqFdPR84WykGrwHq/GhmTVCl4j82EDno1ba8YVaUS5IQMXjr7t0imAxDM8ITmZ7J6vs95ZHuqe3ykrG2hw8/ez0TQFpErQQ7BAscj+0fUqfL6Jt1V79C2hqPu5CrZQ9kte7q/bkqKlPKb7kwY1lFdtHpXKgcWAj8Ba2eKGo+Lf5x+eqoPL3NN8ABCM8=</source>
  </file>
  <file path="lib/View/View.php" hash="36c703dd204235db9df490917ebb3dd1" package="Default">
    <include line="155" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="229" type="Require" package="Default">
      <name/>
    </include>
    <function namespace="global" line="218" package="Default">
      <name>u</name>
      <full_name>\u</full_name>
      <argument line="218">
        <name>$path</name>
        <default>null</default>
        <type/>
      </argument>
      <argument line="218">
        <name>$full</name>
        <default>false</default>
        <type/>
      </argument>
    </function>
    <class final="false" abstract="false" namespace="global" line="19" package="xFreemwork">
      <extends/>
      <name>xView</name>
      <full_name>\xView</full_name>
      <docblock line="12">
        <description>Base view class.</description>
        <long-description>&lt;p&gt;Responsibilities
- deals with rendering and internationalization (i18n)&lt;/p&gt;</long-description>
        <tag line="12" name="package" description="xFreemwork"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="64" namespace="global" package="Default">
        <name>$data</name>
        <default>array()</default>
        <docblock line="21">
          <description>Template data (associative array).</description>
          <long-description>&lt;p&gt;This data will be made available inside the template file.
The conventional array structure is as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;array(
    items =&gt; array(
        array(id =&gt; '0', what =&gt; 'Items cell contains the associative array'),
        array(id =&gt; '1', what =&gt; 'of data to display, usually retrieved'),
        array(id =&gt; '2', what =&gt; 'from the database.')
    )
    html =&gt; array(
        // Arbitrary HTML code to insert in the view
        myview =&gt; 'HTML code generated by some other view, i.e. myview'
    ),
    messages =&gt; array(
        'failed' =&gt; true
    ),
    form =&gt; array(
        // Typically: form data to latch, i.e. the value of the name input of the posted form
        name =&gt; 'The value for the `name` field of the form inside the view',
        user =&gt; 'The value for the `user` field of the form inside the view'
    ),
    invalids =&gt; array(
        // Typically: to be displayed form validation error message for each invalid form field
        name =&gt; 'The error message for the `name`field, e.g. The name is too short',
        user =&gt; 'e.g. This username is already taken'
    ),
    paging =&gt; array(
        // Paging context informations
        current =&gt; 'The current page of the paging context',
        first =&gt; 'The first page number of the paging context',
        last =&gt; 'The last page number of the paging context',
        total =&gt; 'The total number of results of the paging context'
    ),
    misc =&gt; array(
        // Whatever miscellaneous, view specific information
        somekey =&gt; 'some value'
    )
)
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="21" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="91" namespace="global" package="Default">
        <name>$meta</name>
        <default>array()</default>
        <docblock line="66">
          <description>Metadata for the view (associative array).</description>
          <long-description>&lt;p&gt;Used for building html head metadata and links (css and javascript).
The conventional array structure is as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;array(
    title =&gt; 'Some title',
    keywords =&gt; 'html,meta,keywords,comma,separated',
    css =&gt; array(
        'css/main.css',
        array('css/print.css', 'print')
    ),
    js =&gt; array(
        'js/file.js'
    ),
    related =&gt; array(
        content_id_1 =&gt; 'Some HTML content to be displayed in the layout'
    ),
    navigation =&gt; array(
        highlight =&gt; 'Id of the main navigation item to highligh'
    )
)
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="66" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="99" namespace="global" package="Default">
        <name>$path</name>
        <default></default>
        <docblock line="93">
          <description>The View subclass directory.</description>
          <long-description>&lt;p&gt;Necessary because PHP is not yet able to provide with the directory
of a subclass within the parent class code.&lt;/p&gt;</long-description>
          <tag line="93" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="107" namespace="global" package="Default">
        <name>$default_tpl</name>
        <default></default>
        <docblock line="101">
          <description>Computed view tpl name, used for rendering
the default template if view PHP class does not exist.</description>
          <long-description></long-description>
          <tag line="101" name="see" description="\xView::render()" refers="\xView::render()"/>
          <tag line="101" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="113" namespace="global" package="Default">
        <name>$buffer</name>
        <default></default>
        <docblock line="109">
          <description>A buffer for buffering view output.</description>
          <long-description></long-description>
          <tag line="109" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="120" namespace="global" package="Default">
        <name>$container</name>
        <default>null</default>
        <docblock line="115">
          <description>An optionnal view to be used to embed this view.</description>
          <long-description>&lt;p&gt;Must the name of a view (as defined in @see xView::load()).&lt;/p&gt;</long-description>
          <tag line="115" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="127" package="xFreemwork">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="122">
          <description>View classes can only be instanciated through the View::load() method.</description>
          <long-description></long-description>
          <tag line="122" name="param" description="An array of data to be merged to the view instance" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="122" name="see" description="\View::load()" refers="\View::load()"/>
        </docblock>
        <argument line="127">
          <name>$data</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="136" package="xFreemwork">
        <name>init</name>
        <full_name>init</full_name>
        <docblock line="133">
          <description>Hook for subclass initialization logic</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="151" package="xFreemwork">
        <name>load</name>
        <full_name>load</full_name>
        <docblock line="138">
          <description>Loads and returns the view specified object.</description>
          <long-description>&lt;p&gt;For example, the following code will
load the views/entry/item.php file.
and return an instance of the EntryItemView class:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;xView::load('entry/item');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="138" name="param" description="The view to load." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="138" name="param" description="An array of data to be merged to the view instance" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="138" name="param" description="An array of metadata on which the view metadata will be merged" type="array" variable="$meta_return">
            <type by_reference="false">array</type>
          </tag>
          <tag line="138" name="return" description="" type="\xView">
            <type by_reference="false">\xView</type>
          </tag>
        </docblock>
        <argument line="151">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="151">
          <name>$data</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="151">
          <name>$meta_return</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="185" package="xFreemwork">
        <name>add_meta</name>
        <full_name>add_meta</full_name>
        <docblock line="176">
          <description>Convenience method for merging this instance metadata
with additional metadata.</description>
          <long-description>&lt;p&gt;The given metadata will erase this instance metadata.
The merged metadata array replaces this instance metadata
and is also returned.&lt;/p&gt;</long-description>
          <tag line="176" name="param" description="Metadata array." type="array" variable="$meta">
            <type by_reference="false">array</type>
          </tag>
          <tag line="176" name="return" description="Merged metadata array." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="185">
          <name>$meta</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="198" package="xFreemwork">
        <name>add_data</name>
        <full_name>add_data</full_name>
        <docblock line="189">
          <description>Convenience method for merging this instance data
with additional data.</description>
          <long-description>&lt;p&gt;The given data will erase this instance data.
The merged data array replaces this instance data
and is also returned.&lt;/p&gt;</long-description>
          <tag line="189" name="param" description="data array." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="189" name="return" description="Merged data array." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="198">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="210" package="xFreemwork">
        <name>apply</name>
        <full_name>apply</full_name>
        <docblock line="202">
          <description>Renders the given template with the given data.</description>
          <long-description></long-description>
          <tag line="202" name="param" description="The filename of the template to use&#10;(e.g. tplfile.tpl)." type="string" variable="$template">
            <type by_reference="false">string</type>
          </tag>
          <tag line="202" name="param" description="The data to be used within the template context.&#10;(defaults to instance data property)." type="mixed" variable="$data">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="202" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="210">
          <name>$template</name>
          <default></default>
          <type/>
        </argument>
        <argument line="210">
          <name>$data</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="210">
          <name>$meta</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="266" package="xFreemwork">
        <name>buffer</name>
        <full_name>buffer</full_name>
        <docblock line="261">
          <description>Buffers the given string in the view buffer.</description>
          <long-description></long-description>
          <tag line="261" name="see" description="\xView::buffer" refers="\xView::buffer"/>
          <tag line="261" name="param" description="The string to buffer." type="string|\ignored" variable="$string">
            <type by_reference="false">string</type>
            <type by_reference="false">\ignored</type>
          </tag>
        </docblock>
        <argument line="266">
          <name>$string</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="274" package="xFreemwork">
        <name>b</name>
        <full_name>b</full_name>
        <docblock line="270">
          <description>Shorthand method for {@link buffer()}.</description>
          <long-description></long-description>
          <tag line="270" name="param" description="The string to buffer." type="string|\ignored" variable="$string">
            <type by_reference="false">string</type>
            <type by_reference="false">\ignored</type>
          </tag>
        </docblock>
        <argument line="274">
          <name>$string</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="284" package="xFreemwork">
        <name>render</name>
        <full_name>render</full_name>
        <docblock line="278">
          <description>Retrun rendered view.</description>
          <long-description>&lt;p&gt;This method should be overridden in subclasses to
override the default tpl rendering.&lt;/p&gt;</long-description>
          <tag line="278" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="293" package="xFreemwork">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="288">
          <description>Allows to echo() or print() a xView instance.</description>
          <long-description></long-description>
          <tag line="288" name="see" description="\xView::render()" refers="\xView::render()"/>
          <tag line="288" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <markers>
      <todo line="227">Clean spaces before '&lt;?php' and after '&gt;'</todo>
    </markers>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib/View/View.php</error>
      <error line="218" code="50009">No DocBlock was found for function \u()</error>
      <error line="202" code="50015">Argument $meta is missing from the Docblock of apply()</error>
    </parse_markers>
    <source>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</source>
  </file>
  <package name="Default" full_name="Default"/>
  <package name="unittests" full_name="unittests"/>
  <package name="xForm" full_name="xForm"/>
  <package name="xFreemwork" full_name="xFreemwork"/>
  <package name="xHelper" full_name="xHelper"/>
  <package name="xReusable" full_name="xReusable"/>
  <package name="xScript" full_name="xScript"/>
  <package name="xUnittesting" full_name="xUnittesting"/>
  <package name="xValidator" full_name="xValidator"/>
  <namespace name="global" full_name="global"/>
  <marker count="25">todo</marker>
  <marker count="1">fixme</marker>
  <deprecated count="1"/>
</project>
